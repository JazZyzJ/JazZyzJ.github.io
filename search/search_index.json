{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"index.html","title":"Welcome to my Space!","text":"<p> This is JazZyzJ's personal learning space. </p>"},{"location":"index.html#about-me","title":"About me","text":"<p>I am an undergraduate student at Zhejiang University, CKC Honors College, majoring in Computer Science and Technology in Turing Class.</p>"},{"location":"index.html#contact-me","title":"Contact me","text":"<ul> <li>Email:chenzijie040528@gmail.com</li> <li>Github: JazZyzJ</li> </ul> <p>Welcome to have a look and discuss with me!\u263a\ufe0f</p>"},{"location":"index.html#recommend-readings","title":"Recommend Readings","text":"<p>Advanced Data Structures and Algorithms</p><p>Complete notes for Advanced Data Structures and Algorithms in 2024 Fall</p> <p>Deep Generative Models</p><p>Learning notes for Deep Generative Models</p> <p></p> 2025 Spring\u00b6 <p> Deep Generative Model</p> <p> Add the changelog</p> <p> Python tips</p> 2024 Fall\u00b6 <p> Advanced Data Structure and Algorithm</p> <p> Add Friends link</p> <p> Finish the ADS notes</p> <p>Statistics</p> <p> \u9875\u9762\u603b\u6570: 50</p> <p> \u603b\u5b57\u6570: 73491</p> <p> \u4ee3\u7801\u5757\u884c\u6570: 1447</p> <p> </p>"},{"location":"friends.html","title":"Friends","text":"<p>silvermilight</p><p>Wonderful journey</p> <p>shrike-505</p><p>\u751f\u547d\u540c\u91cd</p>"},{"location":"Tool_Pool/index.html","title":"Tool Pool","text":""},{"location":"Tool_Pool/GNU_Make.html","title":"GNU Make","text":"<p>\u5bf9\u4e8e\u5927\u578b\u7684\u9879\u76ee\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u547d\u4ee4\u884c\u4e2d\u4e00\u6761\u4e00\u6761\u5730\u8f93\u5165\u7f16\u8bd1\u547d\u4ee4\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u4e00\u4e2a\u81ea\u52a8\u5316\u7684\u7f16\u8bd1\u5de5\u5177\uff0c\u8fd9\u4e2a\u5de5\u5177\u5c31\u662f make\u3002</p> <p>\u4e00\u4e2a\u5de5\u7a0b\u4e2d\u7684\u6e90\u6587\u4ef6\u4e0d\u8ba1\u5176\u6570\uff0c\u5e76\u4e14\u6309\u7c7b\u578b\u3001\u529f\u80fd\u3001\u6a21\u5757\u5206\u522b\u653e\u5728\u82e5\u5e72\u4e2a\u76ee\u5f55\u4e2d\uff0cmakefile\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7684\u89c4\u5219\u6765\u6307\u5b9a\uff0c\u54ea\u4e9b\u6587\u4ef6\u9700\u8981\u5148\u7f16\u8bd1\uff0c\u54ea\u4e9b\u6587\u4ef6\u9700\u8981\u540e\u7f16\u8bd1\uff0c\u54ea\u4e9b\u6587\u4ef6\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\uff0c\u751a\u81f3\u4e8e\u8fdb\u884c\u66f4\u590d\u6742\u7684\u529f\u80fd\u64cd\u4f5c\uff0c\u56e0\u4e3amakefile\u5c31\u50cf\u4e00\u4e2aShell\u811a\u672c\u4e00\u6837\uff0c\u5176\u4e2d\u4e5f\u53ef\u4ee5\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u7684\u547d\u4ee4\uff0c\u7136\u540e\u53ea\u9700\u8981\u4e00\u4e2amake\u547d\u4ee4\uff0cmakefile\u91cc\u7684\u89c4\u5219\u5c31\u4f1a\u81ea\u52a8\u751f\u6548\u3002</p> <p>\u5373\uff1amakefile\u5173\u7cfb\u5230\u6574\u4e2a\u5de5\u7a0b\u7684\u7f16\u8bd1\u89c4\u5219, \u91c7\u7528\u81ea\u52a8\u5316\u7f16\u8bd1</p>"},{"location":"Tool_Pool/GNU_Make.html#_1","title":"\u5173\u4e8e\u7a0b\u5e8f\u7684\u7f16\u8bd1\u548c\u94fe\u63a5","text":"<p>\u6b63\u5e38\u7684\u6587\u4ef6\u5728\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u9700\u8981\u7ecf\u8fc7\u56db\u4e2a\u6b65\u9aa4\uff1a\u9884\u5904\u7406\u3001\u7f16\u8bd1\u3001\u6c47\u7f16\u548c\u94fe\u63a5\u3002\u800c\u5728makefile\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u56db\u4e2a\u8fc7\u7a0b\u7b80\u5316\u4e3a\u4e24\u4e2a\u8fc7\u7a0b\uff1a 1. \u7f16\u8bd1\uff1a\u5c06\u6240\u6709\u7684.c\u6587\u4ef6\u7f16\u8bd1\u6210.o\u6587\u4ef6 \u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u9700\u8981\u7684\u662f\u8bed\u6cd5\u7684\u6b63\u786e\uff0c\u51fd\u6570\u4e0e\u53d8\u91cf\u7684\u58f0\u660e\u7684\u6b63\u786e\u3002</p> <ol> <li>\u94fe\u63a5\uff1a\u5c06\u6240\u6709\u7684.o\u6587\u4ef6\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6 \u94fe\u63a5\u65f6\uff0c\u4e3b\u8981\u662f\u94fe\u63a5\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u3002 \u94fe\u63a5\u5668\u5e76\u4e0d\u7ba1\u51fd\u6570\u6240\u5728\u7684\u6e90\u6587\u4ef6\uff0c\u53ea\u7ba1\u51fd\u6570\u7684\u4e2d\u95f4\u76ee\u6807\u6587\u4ef6\uff08Object File\uff09\uff0c\u5728\u5927\u591a\u6570\u65f6\u5019\uff0c\u7531\u4e8e\u6e90\u6587\u4ef6\u592a\u591a\uff0c\u7f16\u8bd1\u751f\u6210\u7684\u4e2d\u95f4\u76ee\u6807\u6587\u4ef6\u592a\u591a\uff0c\u800c\u5728\u94fe\u63a5\u65f6\u9700\u8981\u660e\u663e\u5730\u6307\u51fa\u4e2d\u95f4\u76ee\u6807\u6587\u4ef6\u540d\uff0c\u8fd9\u5bf9\u4e8e\u7f16\u8bd1\u5f88\u4e0d\u65b9\u4fbf\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u7ed9\u4e2d\u95f4\u76ee\u6807\u6587\u4ef6\u6253\u4e2a\u5305\uff0c\u5728UNIX\u4e0b\uff0c\u662fArchive File\uff0c\u4e5f\u5c31\u662f<code>.a</code>\u6587\u4ef6\u3002</li> </ol>"},{"location":"Tool_Pool/GNU_Make.html#makefile","title":"makefile","text":"<p>make\u547d\u4ee4\u6267\u884c\u65f6\uff0c\u9700\u8981\u4e00\u4e2amakefile\u6587\u4ef6\uff0c\u4ee5\u544a\u8bc9make\u547d\u4ee4\u9700\u8981\u600e\u4e48\u6837\u7684\u53bb\u7f16\u8bd1\u548c\u94fe\u63a5\u7a0b\u5e8f\u3002</p> <p>\u57fa\u7840\u7684\u89c4\u5219\u662f\uff1a 1. \u5982\u679c\u8fd9\u4e2a\u5de5\u7a0b\u6ca1\u6709\u7f16\u8bd1\u8fc7\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u6240\u6709c\u6587\u4ef6\u90fd\u8981\u7f16\u8bd1\u5e76\u88ab\u94fe\u63a5\u3002 2. \u5982\u679c\u8fd9\u4e2a\u5de5\u7a0b\u7684\u67d0\u51e0\u4e2ac\u6587\u4ef6\u88ab\u4fee\u6539\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u7f16\u8bd1\u88ab\u4fee\u6539\u7684c\u6587\u4ef6\uff0c\u5e76\u94fe\u63a5\u76ee\u6807\u7a0b\u5e8f\u3002 3. \u5982\u679c\u8fd9\u4e2a\u5de5\u7a0b\u7684\u5934\u6587\u4ef6\u88ab\u6539\u53d8\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7f16\u8bd1\u5f15\u7528\u4e86\u8fd9\u51e0\u4e2a\u5934\u6587\u4ef6\u7684c\u6587\u4ef6\uff0c\u5e76\u94fe\u63a5\u76ee\u6807\u7a0b\u5e8f\u3002</p> <p>makefile\u7684\u89c4\u5219\uff1a <pre><code>target ... : prerequisites ...\n    command\n    ...\n    ...\n</code></pre> - target: \u76ee\u6807\u6587\u4ef6\uff0c\u53ef\u4ee5\u662fObject File\uff0c\u4e5f\u53ef\u4ee5\u662f\u6267\u884c\u6587\u4ef6, \u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2a\u6807\u7b7e. - prerequisites: \u751f\u6210target\u6240\u9700\u8981\u7684\u6587\u4ef6\u6216\u8005\u76ee\u6807. - command: \u751f\u6210target\u7684\u547d\u4ee4(\u547d\u4ee4\u884c)\uff0c\u4efb\u610fShell\u547d\u4ee4.(\u5fc5\u987b\u4ee5\u4e00\u4e2aTab\u952e\u5f00\u59cb)</p> <p>target\u8fd9\u4e00\u4e2a\u6216\u591a\u4e2a\u7684\u76ee\u6807\u6587\u4ef6\u4f9d\u8d56\u4e8eprerequisites\u4e2d\u7684\u6587\u4ef6\uff0c\u5176\u751f\u6210\u89c4\u5219\u5b9a\u4e49\u5728command\u4e2d, \u4e5f\u5c31\u662f\u8bf4 prerequisites\u4e2d\u5982\u679c\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684\u6587\u4ef6\u6bd4target\u6587\u4ef6\u8981\u65b0\u7684\u8bdd\uff0ccommand\u6240\u5b9a\u4e49\u7684\u547d\u4ee4\u5c31\u4f1a\u88ab\u6267\u884c\u3002</p> <p>\u4e00\u4e2a\u5b9e\u4f8b</p> <pre><code>edit : main.o kbd.o command.o display.o \\\n        insert.o search.o files.o utils.o\n    cc -o edit main.o kbd.o command.o display.o \\\n        insert.o search.o files.o utils.o\n\nmain.o : main.c defs.h\n    cc -c main.c\nkbd.o : kbd.c defs.h command.h\n    cc -c kbd.c\ncommand.o : command.c defs.h command.h\n    cc -c command.c\ndisplay.o : display.c defs.h buffer.h\n    cc -c display.c\ninsert.o : insert.c defs.h buffer.h\n    cc -c insert.c\nsearch.o : search.c defs.h buffer.h\n    cc -c search.c\nfiles.o : files.c defs.h buffer.h command.h\n    cc -c files.c\nutils.o : utils.c defs.h\n    cc -c utils.c\nclean :\n    rm edit main.o kbd.o command.o display.o \\\n        insert.o search.o files.o utils.o\n</code></pre> <p>\u5728\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u4f7f\u7528<code>make -f &lt;makefile_name&gt;</code>\u6765\u6307\u5b9amakefile\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0cmake\u4f1a\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d\u76ee\u5f55\u4e0b\u7684<code>Makefile</code>\u6587\u4ef6\u3002</p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec<code>make</code>\u4e00\u4e0b\u5c31\u4f1a\u751f\u6210<code>edit</code>\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528<code>make clean</code>\u5c31\u4f1a\u5220\u9664<code>edit</code>\u6587\u4ef6\u3002</p>"},{"location":"Tool_Pool/GNU_Make.html#_2","title":"\u53c2\u8003","text":"<p>GNU Make: https://seisman.github.io/how-to-write-makefile/overview.html</p>"},{"location":"Tool_Pool/git.html","title":"Git and Github","text":"<p>\u5e73\u65e5\u4e2d\u7ecf\u5e38\u4f7f\u7528\u4f46\u662f\u4e0d\u662f\u5f88\u7cfb\u7edf\uff0c\u6240\u4ee5\u8d81\u521a\u653e\u5047\u5b66\u4e00\u4e0b\uff08\u6216\u8005\u53ef\u4ee5\u5f53\u4e00\u4e2acheat sheet\uff1f\uff09</p> <p>\u53c2\u8003</p> <p>\u5728git\u7684\u5b66\u4e60\u4e2d\u6211\u53c2\u8003\u4e86\u8fd9\u672cPro Git</p> <p>\u540c\u65f6\u6211 \u66fe\u8ba4\u771f \u770b\u4e86MIT Missing Semester\u7684Git\u4f46\u662f\u8fd9\u4e2a\u8bfe\u7a0b\u66f4\u591a\u662f\u5e2e\u52a9\u4e86\u89e3git\u7684\u539f\u7406\uff0c\u800c\u4e0d\u662f\u5982\u4f55\u4f7f\u7528git</p>"},{"location":"Tool_Pool/git.html#basics","title":"Basics","text":""},{"location":"Tool_Pool/pytip.html","title":"Python Tips","text":"<p> \u7ea6 80 \u4e2a\u5b57  64 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <p>This page is a collection of Python tips.</p> <p>Including embedded Python code and useful functions.</p>"},{"location":"Tool_Pool/pytip.html#embed-python-code","title":"Embed Python Code","text":""},{"location":"Tool_Pool/pytip.html#pathlib","title":"pathlib","text":"<p>Introduce to the <code>Path</code> class in <code>pathlib</code> module.</p> <p>Intro</p> <p>Being the replacement of <code>os.path</code>, intended for simplifying the operations on files and file routes.</p> <ul> <li>Unified the route operations on different platforms.</li> <li>Linked call: Support consecutive operations like <code>setup route -&gt; check file -&gt; read/write file</code>.</li> </ul> Usage <ul> <li>Setup route obj:</li> </ul> <pre><code>from pathlib import Path\n\n# \u4ece\u5b57\u7b26\u4e32\u521b\u5efa\np1 = Path(\"data/files\")\np2 = Path(\"/home/user/docs/report.txt\")\n\n# \u7279\u6b8a\u8def\u5f84\u5feb\u6377\u65b9\u5f0f\nhome_dir = Path.home()  # \u7528\u6237\u4e3b\u76ee\u5f55\uff08\u5982 /home/user\uff09\ncurrent_dir = Path.cwd()  # \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\n</code></pre> <ul> <li>Route connection: use <code>/</code> to replace <code>os.path.join</code>.</li> </ul> <pre><code>base = Path(\"data\")\nfile_path = base / \"subfolder\" / \"file.txt\"  # \u81ea\u52a8\u5904\u7406\u5206\u9694\u7b26\n</code></pre> <ul> <li>Check file:</li> </ul> <pre><code>path = Path(\"data/file.txt\")\n\nif path.exists():\nprint(\"\u6587\u4ef6\u5b58\u5728\uff01\")\n\nif path.is_file():\nprint(\"\u8fd9\u662f\u4e00\u4e2a\u6587\u4ef6\uff01\")\n\nif path.is_dir():\nprint(\"\u8fd9\u662f\u4e00\u4e2a\u76ee\u5f55\uff01\")\n</code></pre> <ul> <li>Read/write file:</li> </ul> <pre><code>path = Path(\"data/file.txt\")\n\n# \u8bfb\u53d6\u6587\u672c\ncontent = path.read_text(encoding=\"utf-8\")\n\n# \u5199\u5165\u6587\u672c\npath.write_text(\"Hello, Path!\", encoding=\"utf-8\")\n\n# \u5904\u7406\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u5982\u56fe\u7247\uff09\nbinary_data = path.read_bytes()\n</code></pre> <ul> <li>Iterate over directory:</li> </ul> <pre><code>dir_path = Path(\"data\")\n\n# \u904d\u5386\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\nfor item in dir_path.iterdir():\nprint(item.name)\n\n# \u9012\u5f52\u904d\u5386\u6240\u6709\u6587\u4ef6\uff08\u542b\u5b50\u76ee\u5f55\uff09\n\nfor file in dir_path.glob(\"**/*.txt\"):\nprint(file)\n</code></pre> <ul> <li>Route decomposition:</li> </ul> <pre><code>path = Path(\"/home/user/data/report.txt\")\n\n# \u83b7\u53d6\u6587\u4ef6\u540d\uff08\u5e26\u540e\u7f00\uff09\nprint(path.name)          # \u8f93\u51fa: report.txt\n\n# \u83b7\u53d6\u6587\u4ef6\u540d\uff08\u4e0d\u5e26\u540e\u7f00\uff09\nprint(path.stem)          # \u8f93\u51fa: report\n\n# \u83b7\u53d6\u540e\u7f00\nprint(path.suffix)        # \u8f93\u51fa: .txt\n\n# \u83b7\u53d6\u7236\u76ee\u5f55\nprint(path.parent)        # \u8f93\u51fa: /home/user/data\n\n# \u4fee\u6539\u540e\u7f00\nnew_path = path.with_suffix(\".csv\")\nprint(new_path)           # \u8f93\u51fa: /home/user/data/report.csv\n</code></pre> <ul> <li>Linked operations:</li> </ul> <pre><code>(Path.cwd() / \"data\")\n.mkdir(exist_ok=True)          # \u521b\u5efa\u76ee\u5f55\uff08\u5982\u679c\u4e0d\u5b58\u5728\uff09\n.with_name(\"backup\")           # \u91cd\u547d\u540d\u4e3a backup\n.mkdir(parents=True)           # \u521b\u5efa\u591a\u7ea7\u76ee\u5f55\n</code></pre> <ul> <li>Wildcard search:</li> </ul> <pre><code># \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709 .csv \u6587\u4ef6\nfor csv_file in Path(\".\").glob(\"*.csv\"):\nprint(csv_file)\n\n# \u9012\u5f52\u67e5\u627e\u6240\u6709\u5b50\u76ee\u5f55\u4e2d\u7684 .png \u6587\u4ef6\nfor png_file in Path(\"images\").rglob(\"*.png\"):\nprint(png_file)\n</code></pre>"},{"location":"log/hou/2.22.html","title":"2.22","text":"<p>\u4eca\u5929\u4e3b\u8981\u662f\u5728\u9605\u8bfb\u4e00\u7bc7\u8bc4\u4ef7Pocket-Based 3D Generative Models\u7684\u8bba\u6587\uff0c\u5728\u8fd9\u91cc\u6574\u7406\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u65b0\u6982\u5ff5\u4f5c\u4e3a\u79ef\u7d2f</p> <p>Redocking\uff08\u91cd\u65b0\u5bf9\u63a5\uff09 \u662f\u8ba1\u7b97\u5316\u5b66\u548c\u836f\u7269\u8bbe\u8ba1\u4e2d\u7684\u4e00\u79cd\u5e38\u7528\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u4e3b\u8981\u7528\u4e8e\u8bc4\u4f30\u5206\u5b50\u5bf9\u63a5\uff08Molecular Docking\uff09\u8f6f\u4ef6\u7684\u51c6\u786e\u6027\u548c\u53ef\u9760\u6027\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u5df2\u77e5\u7684\u914d\u4f53\uff08\u5982\u836f\u7269\u5206\u5b50\uff09\u91cd\u65b0\u5bf9\u63a5\u5230\u5b83\u539f\u672c\u7ed3\u5408\u7684\u86cb\u767d\u8d28\u53e3\u888b\u4e2d\uff0c\u901a\u8fc7\u6bd4\u8f83\u5bf9\u63a5\u540e\u7684\u6784\u8c61\u4e0e\u5b9e\u9a8c\u6d4b\u5f97\u7684\u771f\u5b9e\u6784\u8c61\uff08\u5982X\u5c04\u7ebf\u6676\u4f53\u7ed3\u6784\u4e2d\u7684\u914d\u4f53\u4f4d\u59ff\uff09\uff0c\u9a8c\u8bc1\u5bf9\u63a5\u7b97\u6cd5\u80fd\u5426\u6b63\u786e\u9884\u6d4b\u7ed3\u5408\u6a21\u5f0f\u3002</p>"},{"location":"log/hou/2.22.html#1-redocking","title":"1. Redocking \u7684\u6b65\u9aa4","text":"<ol> <li> <p>\u8f93\u5165\u6570\u636e\uff1a    - \u86cb\u767d\u8d28\u7ed3\u6784\uff1a\u5305\u542b\u7ed3\u5408\u53e3\u888b\u76843D\u7ed3\u6784\uff08\u901a\u5e38\u6765\u81eaPDB\u6570\u636e\u5e93\uff09\u3002    - \u914d\u4f53\u7ed3\u6784\uff1a\u5df2\u77e5\u4e0e\u8be5\u53e3\u888b\u7ed3\u5408\u7684\u914d\u4f53\u7684\u5b9e\u9a8c\u6784\u8c61\uff08\u5982\u6676\u4f53\u7ed3\u6784\u4e2d\u7684\u5750\u6807\uff09\u3002</p> </li> <li> <p>\u5bf9\u63a5\u8fc7\u7a0b\uff1a    - \u5c06\u914d\u4f53\u4ece\u539f\u59cb\u4f4d\u7f6e\u79fb\u51fa\uff0c\u968f\u673a\u5316\u5176\u521d\u59cb\u4f4d\u7f6e\u548c\u65b9\u5411\u3002    - \u4f7f\u7528\u5bf9\u63a5\u8f6f\u4ef6\uff08\u5982AutoDock Vina\u3001Glide\u3001GOLD\u7b49\uff09\u5c1d\u8bd5\u91cd\u65b0\u5c06\u914d\u4f53\u5bf9\u63a5\u5230\u53e3\u888b\u4e2d\u3002</p> </li> <li> <p>\u7ed3\u679c\u8bc4\u4f30\uff1a    - \u8ba1\u7b97\u5bf9\u63a5\u540e\u7684\u914d\u4f53\u6784\u8c61\u4e0e\u5b9e\u9a8c\u6784\u8c61\u4e4b\u95f4\u7684\u5747\u65b9\u6839\u504f\u5dee\uff08RMSD\uff09\u3002    - \u82e5RMSD \u2264 2 \u00c5\uff08\u57c3\uff09\uff0c\u901a\u5e38\u8ba4\u4e3a\u5bf9\u63a5\u6210\u529f\uff08\u6784\u8c61\u9884\u6d4b\u51c6\u786e\uff09\u3002</p> </li> </ol>"},{"location":"log/hou/2.22.html#2","title":"2. \u6838\u5fc3\u76ee\u7684","text":"<ul> <li>\u9a8c\u8bc1\u5bf9\u63a5\u8f6f\u4ef6\u7684\u53ef\u9760\u6027\uff1a   \u5982\u679c\u8f6f\u4ef6\u80fd\u6210\u529f\u5c06\u914d\u4f53\u91cd\u73b0\u5230\u5b9e\u9a8c\u6784\u8c61\u9644\u8fd1\uff08\u4f4eRMSD\uff09\uff0c\u5219\u8bf4\u660e\u5176\u5bf9\u63a5\u7b97\u6cd5\u548c\u6253\u5206\u51fd\u6570\uff08scoring function\uff09\u9002\u7528\u4e8e\u8be5\u4f53\u7cfb\u3002</li> <li>\u53c2\u6570\u4f18\u5316\uff1a   \u8c03\u6574\u5bf9\u63a5\u8f6f\u4ef6\u7684\u53c2\u6570\uff08\u5982\u641c\u7d22\u7a7a\u95f4\u5927\u5c0f\u3001\u67d4\u6027\u6b8b\u57fa\u8bbe\u7f6e\uff09\uff0c\u786e\u4fdd\u5176\u5bf9\u7279\u5b9a\u9776\u6807\u7684\u9002\u7528\u6027\u3002</li> <li>\u57fa\u51c6\u6d4b\u8bd5\uff08Benchmarking\uff09\uff1a   \u6bd4\u8f83\u4e0d\u540c\u5bf9\u63a5\u8f6f\u4ef6\u7684\u6027\u80fd\uff08\u4f8b\u5982\uff0cAutoDock Vina vs. Glide\uff09\u3002</li> </ul>"},{"location":"log/hou/2.22.html#3","title":"3. \u5728\u836f\u7269\u53d1\u73b0\u4e2d\u7684\u610f\u4e49","text":"<ul> <li>\u865a\u62df\u7b5b\u9009\uff08Virtual Screening\uff09\uff1a   Redocking\u9a8c\u8bc1\u5bf9\u63a5\u6d41\u7a0b\u540e\uff0c\u53ef\u4fe1\u4efb\u8be5\u6d41\u7a0b\u7528\u4e8e\u5927\u89c4\u6a21\u7b5b\u9009\u6f5c\u5728\u836f\u7269\u5206\u5b50\u3002</li> <li>\u751f\u6210\u6a21\u578b\u8bc4\u4f30\uff1a   \u5728\u5206\u5b50\u751f\u6210\u4efb\u52a1\u4e2d\uff08\u5982\u751f\u6210\u4e0e\u53e3\u888b\u4e92\u8865\u7684\u5206\u5b50\uff09\uff0credocking\u53ef\u7528\u4e8e\u9a8c\u8bc1\u751f\u6210\u5206\u5b50\u662f\u5426\u80fd\u6b63\u786e\u7ed3\u5408\u5230\u53e3\u888b\u4e2d\uff0c\u4ece\u800c\u8bc4\u4f30\u751f\u6210\u7ed3\u6784\u7684\u5408\u7406\u6027\u3002</li> </ul>"},{"location":"log/hou/2.22.html#4-redocking-vs-cross-docking","title":"4. Redocking vs. Cross-Docking","text":"\u65b9\u6cd5 \u5b9a\u4e49 \u7528\u9014 Redocking \u5c06\u540c\u4e00\u914d\u4f53\u5bf9\u63a5\u5230\u540c\u4e00\u86cb\u767d\u8d28\u7ed3\u6784\u4e2d\uff08\u5b9e\u9a8c\u6784\u8c61\u4f5c\u4e3a\u53c2\u8003\uff09\u3002 \u9a8c\u8bc1\u5bf9\u63a5\u8f6f\u4ef6\u5728\u201c\u7406\u60f3\u6761\u4ef6\u201d\u4e0b\u7684\u51c6\u786e\u6027\uff08\u86cb\u767d\u8d28\u7ed3\u6784\u65e0\u53d8\u5316\uff09\u3002 Cross-Docking \u5c06\u540c\u4e00\u914d\u4f53\u5bf9\u63a5\u5230\u4e0d\u540c\u86cb\u767d\u8d28\u6784\u8c61\u4e2d\uff08\u5982\u6765\u81ea\u4e0d\u540c\u6676\u4f53\u7ed3\u6784\u6216\u5206\u5b50\u52a8\u529b\u5b66\u6a21\u62df\uff09\u3002 \u8bc4\u4f30\u5bf9\u63a5\u8f6f\u4ef6\u5bf9\u86cb\u767d\u8d28\u6784\u8c61\u53d8\u5316\u7684\u9c81\u68d2\u6027\uff08\u66f4\u63a5\u8fd1\u771f\u5b9e\u836f\u7269\u7b5b\u9009\u573a\u666f\uff09\u3002"},{"location":"log/hou/2.22.html#5-redocking","title":"5. Redocking \u7684\u5c40\u9650\u6027","text":"<ul> <li>\u4f9d\u8d56\u5b9e\u9a8c\u7ed3\u6784\u7684\u8d28\u91cf\uff1a   \u82e5\u539f\u59cb\u6676\u4f53\u7ed3\u6784\u5206\u8fa8\u7387\u4f4e\u6216\u914d\u4f53\u4f4d\u59ff\u4e0d\u660e\u786e\uff0credocking\u7ed3\u679c\u53ef\u80fd\u4e0d\u53ef\u9760\u3002</li> <li>\u8fc7\u62df\u5408\u98ce\u9669\uff1a   \u67d0\u4e9b\u5bf9\u63a5\u8f6f\u4ef6\u53ef\u80fd\u5728\u7279\u5b9a\u9776\u6807\u4e0a\u8868\u73b0\u4f18\u5f02\uff0c\u4f46\u65e0\u6cd5\u63a8\u5e7f\u5230\u5176\u4ed6\u9776\u6807\u3002</li> <li>\u5ffd\u7565\u86cb\u767d\u8d28\u67d4\u6027\uff1a   \u5927\u591a\u6570redocking\u9ed8\u8ba4\u86cb\u767d\u8d28\u4e3a\u521a\u6027\uff0c\u800c\u5b9e\u9645\u7ed3\u5408\u8fc7\u7a0b\u4e2d\u53e3\u888b\u53ef\u80fd\u53d1\u751f\u6784\u8c61\u53d8\u5316\u3002</li> </ul>"},{"location":"log/hou/2.22.html#6","title":"6. \u5b9e\u9645\u5e94\u7528\u793a\u4f8b","text":""},{"location":"log/hou/2.22.html#1","title":"\u6848\u4f8b1\uff1a\u8bc4\u4f30\u751f\u6210\u6a21\u578b\u7684\u8f93\u51fa","text":"<ul> <li>\u5047\u8bbe\u4e00\u7bc7\u8bba\u6587\u751f\u6210\u4e86\u4e00\u6279\u9488\u5bf9\u67d0\u9776\u70b9\u7684\u5206\u5b50\uff0c\u4f5c\u8005\u53ef\u80fd\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u9a8c\u8bc1\uff1a   1. \u5bf9\u6bcf\u4e2a\u751f\u6210\u5206\u5b50\u8fdb\u884credocking\uff0c\u8ba1\u7b97\u5176\u4e0e\u53e3\u888b\u7684\u5bf9\u63a5\u5f97\u5206\uff08\u5982Vina Score\uff09\u548c\u6784\u8c61RMSD\u3002   2. \u82e5RMSD\u4f4e\u4e14\u5bf9\u63a5\u5f97\u5206\u4f18\uff0c\u8bf4\u660e\u751f\u6210\u5206\u5b50\u7ed3\u6784\u5408\u7406\u4e14\u80fd\u7a33\u5b9a\u7ed3\u5408\u3002</li> </ul>"},{"location":"log/hou/2.22.html#2_1","title":"\u6848\u4f8b2\uff1a\u5bf9\u63a5\u8f6f\u4ef6\u6027\u80fd\u6d4b\u8bd5","text":"<ul> <li>\u5bf9PDB\u4e2d100\u4e2a\u86cb\u767d\u8d28-\u914d\u4f53\u590d\u5408\u7269\u8fdb\u884credocking\uff1a</li> <li>\u6210\u529f\u7387\uff08RMSD \u2264 2 \u00c5\u7684\u6bd4\u4f8b\uff09\u4e3a85% \u2192 \u8f6f\u4ef6\u6574\u4f53\u53ef\u9760\u3002</li> <li>\u5931\u8d25\u6848\u4f8b\u53ef\u80fd\u63d0\u793a\u7279\u5b9a\u9776\u6807\u7684\u5bf9\u63a5\u9700\u8981\u8c03\u6574\u53c2\u6570\uff08\u5982\u8003\u8651\u4fa7\u94fe\u67d4\u6027\uff09\u3002</li> </ul>"},{"location":"log/hou/2.22.html#7-rmsd","title":"7. \u5173\u952e\u6307\u6807\uff1aRMSD\uff08\u5747\u65b9\u6839\u504f\u5dee\uff09","text":"<ul> <li>\u516c\u5f0f\uff1a   [   \\text{RMSD} = \\sqrt{\\frac{1}{N} \\sum_{i=1}^{N} (x_i - x_{\\text{ref},i})^2}   ]</li> <li>\\(N\\)\u4e3a\u539f\u5b50\u6570\uff0c\\(x_i\\)\u4e3a\u5bf9\u63a5\u6784\u8c61\u7684\u539f\u5b50\u5750\u6807\uff0c\\(x_{\\text{ref},i}\\)\u4e3a\u5b9e\u9a8c\u6784\u8c61\u5750\u6807\u3002</li> <li>\u89e3\u8bfb\uff1a  </li> <li>RMSD &lt; 1 \u00c5\uff1a\u51e0\u4e4e\u5b8c\u5168\u91cd\u5408\uff08\u5bf9\u63a5\u6781\u6210\u529f\uff09\u3002  </li> <li>RMSD 1\u20132 \u00c5\uff1a\u5fae\u5c0f\u504f\u5dee\uff08\u53ef\u63a5\u53d7\uff09\u3002  </li> <li>RMSD &gt; 2 \u00c5\uff1a\u663e\u8457\u504f\u79bb\uff08\u53ef\u80fd\u5bf9\u63a5\u5931\u8d25\uff09\u3002</li> </ul>"},{"location":"log/hou/2.22.html#8","title":"8. \u5728\u8bba\u6587\u4e2d\u7684\u4e0a\u4e0b\u6587","text":"<p>\u5728\u300aHow Good are Current Pocket-Based 3D Generative Models?\u300b\u4e2d\uff0credocking\u53ef\u80fd\u7528\u4e8e\uff1a 1. \u9a8c\u8bc1\u751f\u6210\u5206\u5b50\u7684\u53ef\u5bf9\u63a5\u6027\uff1a\u751f\u6210\u7684\u5206\u5b50\u662f\u5426\u80fd\u901a\u8fc7\u5bf9\u63a5\u8f6f\u4ef6\u6b63\u786e\u653e\u7f6e\u5230\u53e3\u888b\u4e2d\uff1f 2. \u5bf9\u6bd4\u4e0d\u540c\u6a21\u578b\uff1a\u6a21\u578bA\u751f\u6210\u7684\u5206\u5b50redocking\u6210\u529f\u7387\u662f\u5426\u9ad8\u4e8e\u6a21\u578bB\uff1f 3. \u63ed\u793a\u751f\u6210\u504f\u5dee\uff1a\u82e5\u751f\u6210\u5206\u5b50\u867d\u5316\u5b66\u5408\u7406\u4f46redocking\u5931\u8d25\uff0c\u53ef\u80fd\u63d0\u793a\u6a21\u578b\u672a\u5145\u5206\u5b66\u4e603D\u4e92\u8865\u6027\u3002</p>"},{"location":"log/hou/2.22.html#1-refined-docking","title":"1. Refined Docking\uff08\u7cbe\u7ec6\u5316\u5bf9\u63a5\uff09","text":""},{"location":"log/hou/2.22.html#11","title":"1.1 \u5b9a\u4e49","text":"<p>Refined Docking \u662f\u5728\u521d\u6b65\u5206\u5b50\u5bf9\u63a5\uff08\u5982\u521a\u6027\u5bf9\u63a5\uff09\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u4e00\u6b65\u4f18\u5316\u914d\u4f53-\u86cb\u767d\u8d28\u590d\u5408\u7269\u7ed3\u6784\u7684\u7b56\u7565\u3002\u5b83\u901a\u8fc7\u5f15\u5165\u66f4\u7cbe\u7ec6\u7684\u91c7\u6837\u65b9\u6cd5\u6216\u80fd\u91cf\u4f18\u5316\u6b65\u9aa4\uff0c\u63d0\u5347\u5bf9\u63a5\u6784\u8c61\u7684\u51c6\u786e\u6027\u548c\u7a33\u5b9a\u6027\u3002</p>"},{"location":"log/hou/2.22.html#12","title":"1.2 \u6838\u5fc3\u6b65\u9aa4","text":"<ol> <li>\u521d\u59cb\u7c97\u7c92\u5ea6\u5bf9\u63a5\uff1a    \u4f7f\u7528\u5feb\u901f\u4f46\u4f4e\u7cbe\u5ea6\u7684\u5bf9\u63a5\u65b9\u6cd5\uff08\u5982\u57fa\u4e8e\u683c\u70b9\u7684\u641c\u7d22\uff09\uff0c\u751f\u6210\u591a\u4e2a\u53ef\u80fd\u7684\u914d\u4f53\u6784\u8c61\u3002</li> <li>\u7cbe\u7ec6\u5316\u4f18\u5316\uff1a    - \u6784\u8c61\u91c7\u6837\u7ec6\u5316\uff1a\u589e\u52a0\u5c40\u90e8\u91c7\u6837\u5bc6\u5ea6\uff0c\u63a2\u7d22\u521d\u59cb\u6784\u8c61\u9644\u8fd1\u7684\u5fae\u5c0f\u53d8\u5316\u3002    - \u80fd\u91cf\u6700\u5c0f\u5316\uff1a\u5e94\u7528\u5206\u5b50\u529b\u5b66\u529b\u573a\uff08\u5982AMBER\u3001CHARMM\uff09\u4f18\u5316\u590d\u5408\u7269\u7684\u51e0\u4f55\u7ed3\u6784\u548c\u80fd\u91cf\u3002    - \u67d4\u6027\u5904\u7406\uff1a\u5141\u8bb8\u86cb\u767d\u8d28\u4fa7\u94fe\u6216\u914d\u4f53\u7279\u5b9a\u952e\u7684\u67d4\u6027\u8c03\u6574\uff08\u5982\u65cb\u8f6c\u5355\u952e\uff09\u3002</li> </ol>"},{"location":"log/hou/2.22.html#13","title":"1.3 \u4f18\u52bf","text":"<ul> <li>\u63d0\u5347\u51c6\u786e\u6027\uff1a\u901a\u8fc7\u5c40\u90e8\u4f18\u5316\u51cf\u5c11\u6784\u8c61\u504f\u5dee\uff08\u5982RMSD\u4ece3 \u00c5\u964d\u4f4e\u81f31 \u00c5\uff09\u3002  </li> <li>\u6355\u6349\u8bf1\u5bfc\u5951\u5408\u6548\u5e94\uff1a\u90e8\u5206\u5141\u8bb8\u86cb\u767d\u8d28\u67d4\u6027\uff0c\u6a21\u62df\u7ed3\u5408\u8fc7\u7a0b\u4e2d\u7684\u6784\u8c61\u53d8\u5316\u3002  </li> <li>\u51cf\u5c11\u5047\u9633\u6027\uff1a\u901a\u8fc7\u80fd\u91cf\u4f18\u5316\u6392\u9664\u4e0d\u5408\u7406\u7684\u7ed3\u5408\u6a21\u5f0f\u3002</li> </ul>"},{"location":"log/hou/2.22.html#14","title":"1.4 \u5e94\u7528\u573a\u666f","text":"<ul> <li>\u9ad8\u7cbe\u5ea6\u865a\u62df\u7b5b\u9009\uff1a\u4ece\u7c97\u7b5b\u7ed3\u679c\u4e2d\u6311\u9009\u5c11\u6570\u5019\u9009\u5206\u5b50\u8fdb\u884c\u7cbe\u7ec6\u5316\u5bf9\u63a5\u3002  </li> <li>\u751f\u6210\u6a21\u578b\u9a8c\u8bc1\uff1a\u8bc4\u4f30\u751f\u6210\u5206\u5b50\u662f\u5426\u80fd\u5728\u4f18\u5316\u540e\u7a33\u5b9a\u7ed3\u5408\uff08\u4f8b\u5982\uff0c\u8bba\u6587\u4e2d\u53ef\u80fd\u7528\u5176\u9a8c\u8bc13D\u751f\u6210\u6a21\u578b\u7684\u5408\u7406\u6027\uff09\u3002  </li> <li>\u7ed3\u5408\u6a21\u5f0f\u9884\u6d4b\uff1a\u4e3a\u5b9e\u9a8c\u7ed3\u6784\u89e3\u6790\uff08\u5982X\u5c04\u7ebf\u6676\u4f53\u5b66\uff09\u63d0\u4f9b\u9ad8\u53ef\u4fe1\u5ea6\u6a21\u578b\u3002</li> </ul>"},{"location":"log/hou/2.22.html#2-in-situ-scoring-strategy","title":"2. In Situ Scoring Strategy\uff08\u539f\u4f4d\u8bc4\u5206\u7b56\u7565\uff09","text":""},{"location":"log/hou/2.22.html#21","title":"2.1 \u5b9a\u4e49","text":"<p>In Situ Scoring \u662f\u4e00\u79cd\u5728\u5206\u5b50\u5bf9\u63a5\u8fc7\u7a0b\u4e2d\uff0c\u7ed3\u5408\u5c40\u90e8\u73af\u5883\u7279\u5f02\u6027\u8c03\u6574\u8bc4\u5206\u51fd\u6570\u7684\u7b56\u7565\u3002\u4f20\u7edf\u8bc4\u5206\u51fd\u6570\u662f\u5168\u5c40\u901a\u7528\u7684\uff0c\u800c\u539f\u4f4d\u8bc4\u5206\u4f1a\u8003\u8651\u86cb\u767d\u8d28\u53e3\u888b\u7684\u72ec\u7279\u5316\u5b66\u5fae\u73af\u5883\uff08\u5982\u9759\u7535\u5206\u5e03\u3001\u758f\u6c34\u533a\u57df\uff09\uff0c\u52a8\u6001\u8c03\u6574\u6253\u5206\u6743\u91cd\u3002</p>"},{"location":"log/hou/2.22.html#22","title":"2.2 \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u73af\u5883\u611f\u77e5\u8bc4\u5206\uff1a   \u6839\u636e\u53e3\u888b\u7684\u5c40\u90e8\u7279\u5f81\uff08\u5982\u67d0\u4e9b\u6b8b\u57fa\u7684\u6781\u6027\u3001\u6c22\u952e\u4f9b\u4f53/\u53d7\u4f53\u7684\u5206\u5e03\uff09\uff0c\u52a8\u6001\u8c03\u6574\uff1a  </li> <li>\u6c22\u952e\u7684\u6743\u91cd  </li> <li>\u758f\u6c34\u76f8\u4e92\u4f5c\u7528\u7684\u8d21\u732e  </li> <li>\u9759\u7535\u5339\u914d\u7684\u4f18\u5148\u7ea7  </li> </ul>"},{"location":"log/hou/2.22.html#23","title":"2.3 \u5b9e\u73b0\u65b9\u6cd5","text":"<ol> <li>\u5c40\u90e8\u7279\u5f81\u63d0\u53d6\uff1a    - \u5206\u6790\u53e3\u888b\u7684\u7406\u5316\u6027\u8d28\uff08\u5982\u4f7f\u7528GRID\u8f6f\u4ef6\u751f\u6210\u9759\u7535\u52bf\u56fe\uff09\u3002    - \u8bc6\u522b\u5173\u952e\u76f8\u4e92\u4f5c\u7528\u4f4d\u70b9\uff08\u5982\u50ac\u5316\u6b8b\u57fa\u3001\u91d1\u5c5e\u79bb\u5b50\uff09\u3002  </li> <li>\u52a8\u6001\u6743\u91cd\u8c03\u6574\uff1a    - \u82e5\u53e3\u888b\u5bcc\u542b\u8d1f\u7535\u8377\uff0c\u5219\u589e\u52a0\u6b63\u7535\u914d\u4f53\u533a\u57df\u7684\u8bc4\u5206\u6743\u91cd\u3002    - \u82e5\u53e3\u888b\u6709\u660e\u786e\u6c22\u952e\u7f51\u7edc\uff0c\u5219\u5f3a\u5316\u6c22\u952e\u5339\u914d\u7684\u8bc4\u5206\u9879\u3002  </li> </ol>"},{"location":"log/hou/2.22.html#24","title":"2.4 \u4f18\u52bf","text":"<ul> <li>\u63d0\u9ad8\u7279\u5f02\u6027\uff1a\u9488\u5bf9\u7279\u5b9a\u53e3\u888b\u4f18\u5316\u8bc4\u5206\uff0c\u51cf\u5c11\u5bf9\u901a\u7528\u6253\u5206\u51fd\u6570\u7684\u4f9d\u8d56\u3002  </li> <li>\u63d0\u5347\u5bcc\u96c6\u7387\uff1a\u5728\u865a\u62df\u7b5b\u9009\u4e2d\u66f4\u6709\u6548\u533a\u5206\u6d3b\u6027\u5206\u5b50\u4e0e\u975e\u6d3b\u6027\u5206\u5b50\u3002  </li> <li>\u89e3\u91ca\u7ed3\u5408\u6a21\u5f0f\uff1a\u901a\u8fc7\u5c40\u90e8\u6743\u91cd\u63ed\u793a\u5173\u952e\u76f8\u4e92\u4f5c\u7528\uff08\u5982\u67d0\u4e2a\u6c22\u952e\u5bf9\u7ed3\u5408\u7684\u51b3\u5b9a\u6027\u4f5c\u7528\uff09\u3002</li> </ul>"},{"location":"log/hou/2.22.html#25","title":"2.5 \u5e94\u7528\u573a\u666f","text":"<ul> <li>\u591a\u9776\u6807\u836f\u7269\u8bbe\u8ba1\uff1a\u9488\u5bf9\u4e0d\u540c\u9776\u6807\u53e3\u888b\u5b9a\u5236\u8bc4\u5206\u7b56\u7565\u3002  </li> <li>\u53d8\u6784\u4f4d\u70b9\u5bf9\u63a5\uff1a\u5904\u7406\u975e\u4f20\u7edf\u7ed3\u5408\u4f4d\u70b9\u7684\u590d\u6742\u5fae\u73af\u5883\u3002  </li> <li>\u751f\u6210\u6a21\u578b\u8bc4\u4f30\uff1a\u9a8c\u8bc1\u751f\u6210\u5206\u5b50\u662f\u5426\u6ee1\u8db3\u53e3\u888b\u7684\u5c40\u90e8\u76f8\u4e92\u4f5c\u7528\u9700\u6c42\uff08\u4f8b\u5982\uff0c\u8bba\u6587\u4e2d\u53ef\u80fd\u7528\u539f\u4f4d\u8bc4\u5206\u7b5b\u9009\u9ad8\u4eb2\u548c\u529b\u5206\u5b50\uff09\u3002</li> </ul>"},{"location":"log/hou/2.22.html#3-refined-docking-vs-in-situ-scoring","title":"3. Refined Docking vs. In Situ Scoring \u7684\u5bf9\u6bd4","text":"\u7279\u6027 Refined Docking In Situ Scoring \u6838\u5fc3\u76ee\u6807 \u4f18\u5316\u914d\u4f53\u6784\u8c61\u548c\u590d\u5408\u7269\u80fd\u91cf \u52a8\u6001\u8c03\u6574\u8bc4\u5206\u51fd\u6570\u4ee5\u9002\u5e94\u5c40\u90e8\u73af\u5883 \u4e3b\u8981\u65b9\u6cd5 \u80fd\u91cf\u6700\u5c0f\u5316\u3001\u67d4\u6027\u5bf9\u63a5\u3001\u5c40\u90e8\u91c7\u6837 \u5c40\u90e8\u7279\u5f81\u5206\u6790\u3001\u52a8\u6001\u6743\u91cd\u8c03\u6574 \u8ba1\u7b97\u6210\u672c \u8f83\u9ad8\uff08\u9700\u591a\u6b21\u8fed\u4ee3\u4f18\u5316\uff09 \u4e2d\u7b49\uff08\u4f9d\u8d56\u524d\u671f\u73af\u5883\u5206\u6790\uff09 \u9002\u7528\u9636\u6bb5 \u5bf9\u63a5\u540e\u4f18\u5316 \u5bf9\u63a5\u8fc7\u7a0b\u4e2d\u5b9e\u65f6\u8bc4\u5206 \u5bf9\u7ed3\u679c\u7684\u5f71\u54cd \u63d0\u5347\u6784\u8c61\u51c6\u786e\u6027 \u63d0\u5347\u4eb2\u548c\u529b\u9884\u6d4b\u7684\u53ef\u9760\u6027"},{"location":"log/hou/2.22.html#4","title":"4. \u5728\u5206\u5b50\u751f\u6210\u8bba\u6587\u4e2d\u7684\u6f5c\u5728\u5e94\u7528","text":"<p>\u5728\u300aHow Good are Current Pocket-Based 3D Generative Models?\u300b\u4e2d\uff0c\u8fd9\u4e24\u79cd\u7b56\u7565\u53ef\u80fd\u7528\u4e8e\uff1a 1. \u751f\u6210\u5206\u5b50\u7684\u6784\u8c61\u4f18\u5316\uff1a    - \u5bf9\u751f\u6210\u5206\u5b50\u8fdb\u884cRefined Docking\uff0c\u786e\u4fdd\u5176\u4e0e\u53e3\u888b\u7684\u51e0\u4f55\u548c\u80fd\u91cf\u5339\u914d\u3002 2. \u8bc4\u5206\u51fd\u6570\u7684\u9488\u5bf9\u6027\u6539\u8fdb\uff1a    - \u4f7f\u7528In Situ Scoring\u7b56\u7565\uff0c\u6839\u636e\u53e3\u888b\u7279\u5f81\u8c03\u6574\u751f\u6210\u6a21\u578b\u7684\u4f18\u5316\u76ee\u6807\uff08\u5982\u5f3a\u5316\u6c22\u952e\u751f\u6210\uff09\u3002 3. \u7ed3\u679c\u9a8c\u8bc1\uff1a    - \u7ed3\u5408\u4e24\u79cd\u65b9\u6cd5\uff0c\u8ba1\u7b97\u751f\u6210\u5206\u5b50\u7684\u7ed3\u5408\u81ea\u7531\u80fd\uff08\u5982MM/GBSA\uff09\u5e76\u4e0e\u5b9e\u9a8c\u6570\u636e\u5bf9\u6bd4\u3002</p>"},{"location":"log/hou/2.22.html#5","title":"5. \u5b9e\u9645\u6848\u4f8b","text":""},{"location":"log/hou/2.22.html#1refined-docking","title":"\u6848\u4f8b1\uff1aRefined Docking\u9a8c\u8bc1\u751f\u6210\u5206\u5b50","text":"<ul> <li>\u95ee\u9898\uff1a\u67d0\u751f\u6210\u6a21\u578b\u4ea7\u751f\u7684\u5206\u5b50\u5728\u7c97\u7c92\u5ea6\u5bf9\u63a5\u4e2dRMSD\u8f83\u9ad8\uff08&gt;3 \u00c5\uff09\u3002  </li> <li>\u89e3\u51b3\u65b9\u6848\uff1a\u5e94\u7528Refined Docking\uff08\u5141\u8bb8\u4fa7\u94fe\u67d4\u6027\uff09\uff0cRMSD\u964d\u81f31.5 \u00c5\uff0c\u786e\u8ba4\u751f\u6210\u7ed3\u6784\u5408\u7406\u3002  </li> </ul>"},{"location":"log/hou/2.22.html#2in-situ-scoring","title":"\u6848\u4f8b2\uff1aIn Situ Scoring\u63d0\u5347\u7b5b\u9009\u6548\u7387","text":"<ul> <li>\u95ee\u9898\uff1a\u4f20\u7edf\u8bc4\u5206\u51fd\u6570\u5bf9\u67d0\u6fc0\u9176\u9776\u6807\u7684\u6d3b\u6027\u5206\u5b50\u5bcc\u96c6\u7387\u4f4e\u3002  </li> <li>\u89e3\u51b3\u65b9\u6848\uff1a\u57fa\u4e8e\u53e3\u888b\u7684ATP\u7ed3\u5408\u533a\u57df\u7279\u6027\uff08\u758f\u6c34\u53e3\u888b+\u5173\u952e\u76d0\u6865\uff09\uff0c\u8c03\u6574\u758f\u6c34\u548c\u9759\u7535\u8bc4\u5206\u6743\u91cd\uff0c\u5bcc\u96c6\u7387\u63d0\u534730%\u3002</li> </ul>"},{"location":"log/hou/2.22.html#6_1","title":"6. \u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u8ba1\u7b97\u8d44\u6e90\uff1aRefined Docking\u53ef\u80fd\u9700\u5927\u91cf\u8ba1\u7b97\u65f6\u95f4\uff0c\u9700\u6743\u8861\u7cbe\u5ea6\u4e0e\u6548\u7387\u3002  </li> <li>\u8fc7\u62df\u5408\u98ce\u9669\uff1aIn Situ Scoring\u8fc7\u5ea6\u4f9d\u8d56\u7279\u5b9a\u53e3\u888b\u7279\u5f81\u65f6\uff0c\u53ef\u80fd\u964d\u4f4e\u5bf9\u5176\u4ed6\u9776\u6807\u7684\u6cdb\u5316\u80fd\u529b\u3002  </li> <li>\u5b9e\u9a8c\u9a8c\u8bc1\uff1a\u6700\u7ec8\u9700\u6e7f\u5b9e\u9a8c\uff08\u5982\u7ed3\u5408\u5b9e\u9a8c\u3001\u6676\u4f53\u5b66\uff09\u786e\u8ba4\u9884\u6d4b\u7ed3\u679c\u3002</li> </ul>"},{"location":"notes/index.html","title":"N0tes","text":""},{"location":"notes/ai/index.html","title":"Artificial Intelligence","text":"<p> \u7ea6 2 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p>"},{"location":"notes/ai/dgm/index.html","title":"Deep Generative Models","text":"<p> \u7ea6 4094 \u4e2a\u5b57  12 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p> <p>Abstract</p> <p>\u751f\u6210\u5f0f\u6a21\u578b\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u89c6\u9891\u56fe\u50cf\u751f\u6210\u3001\u6587\u672c\u751f\u6210\u3001\u8bed\u97f3\u751f\u6210\u7b49\u9886\u57df\uff0c\u6211\u572825\u5e74\u521d\uff08\u5bd2\u5047\uff09\u5f00\u59cb\u8fdb\u884c\u8fd9\u90e8\u5206\u7684\u5b66\u4e60\uff0c\u4e3b\u8981\u53c2\u8003\u7684\u662fStanford CS236 \u8bfe\u7a0b\u548cMIT 6.S987 \u8bfe\u7a0b\u7684\u8bb2\u4e49\uff0c\u8fd8\u6709\u6211\u54e5\u7684\u7b14\u8bb0\uff0cLilian Weng\u7684\u535a\u5ba2\u3001Yang Song\u7684\u535a\u5ba2</p> <p>\u8fdb\u884c\u8fd9\u90e8\u5206\u5b66\u4e60\u7684\u521d\u8877\u662f\u5728\u4faf\u8001\u5e08\u7684\u5b9e\u9a8c\u5ba4\uff0c\u6211\u5728\u79e6\u777f\u5e08\u5144\u7684\u6307\u5bfc\u4e0b\u5f00\u5c55\u5173\u4e8e\u5206\u5b50\u751f\u6210\u5de5\u4f5c\u7684\u8bc4\u6d4b\uff0c\u7531\u4e8e\u4e0d\u60f3\u5c40\u9650\u4e8e\u4f7f\u7528\u73b0\u6709\u6a21\u578b\u800c\u662f\u80fd\u66f4\u6df1\u5165\u7684\u7406\u89e3\u6a21\u578b\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u56e0\u6b64\u5f00\u59cb\u8fdb\u884c\u8fd9\u90e8\u5206\u7684\u5b66\u4e60\u3002</p> <ul> <li> VAE</li> <li> Autoregressive Models</li> <li> Normalizing Flows</li> <li> Ganerative Adversarial Networks</li> <li> Energy-based Models</li> <li> Score-based Models</li> </ul> <p>\u5728Diffusion\u548cFlowMatching\u7684\u5b66\u4e60\u4e2d\uff0c\u6211\u7ed3\u5408\u4e86MIT\u76846.S184\u8bfe\u7a0b\uff0c\u8fd9\u95e8\u8bfe\u63d0\u4f9b\u4e86\u89c6\u9891\u8bb2\u89e3+\u8be6\u7ec6\u7b14\u8bb0+\u4ee3\u7801\u4f5c\u4e1a\uff08\u8d5e\ud83d\udc4d\uff0c\u66f4\u91cd\u8981\u7684\u662f\u4ed6\u4eceApplication\u89d2\u5ea6\u8fdb\u884c\u4e86\u90e8\u5206\u6388\u8bfe\uff0c\u5305\u62ec\u70ed\u95e8\u7684AIGC\u4ee5\u53ca\u6211\u5c06\u6765\u60f3\u5c1d\u8bd5\u7684Protein Design\uff01\uff08\u8fd9\u4e24\u90e8\u5206\u6211\u53ef\u80fd\u4f1a\u591a\u4e00\u4e9b\u4ee3\u7801\u7684\u5b66\u4e60\u5c1d\u8bd5\ud83e\udd2a</p> <ul> <li> Diffusion Models</li> <li> Flow Matching</li> </ul> <p>\u540c\u65f6Stanford CS236\u8fd8\u6709\u4e00\u8282\u8bfe\u4e13\u95e8\u8bb2\u4e86Evaluating Generative Models\uff0c\u8fd9\u662f\u6211\u8ba4\u4e3a\u5728GenAI\u53d1\u5c55\u5982\u6b64\u8fc5\u901f\u7684\u65f6\u4ee3\u4e00\u4ef6\u6700\u6709\u610f\u4e49\u7684\u4e00\u4ef6\u4e8b\uff08\u4e4b\u4e00\uff09:</p> <p>how to evaluate your model?</p>"},{"location":"notes/ai/dgm/index.html#intro","title":"Intro","text":"<p>\u6211\u4eec\u8bf4\u751f\u6210\u5f0f\u6a21\u578b\uff08Generative Model\uff09\uff0c\u4e0e\u4e4b\u76f8\u5bf9\u7684\u662f\u5224\u522b\u5f0f\u6a21\u578b\uff08Discriminative Model\uff09\uff1a</p> <ul> <li> <p>Discriminative\uff1a</p> <p>sample \\(x \\rightarrow\\) label \\(y\\)</p> <p>\u53ea\u6709\u4e00\u4e2a\u671f\u671b\u8f93\u51fa</p> </li> <li> <p>Generative\uff1a</p> <p>label \\(y \\rightarrow\\) sample \\(x\\)</p> <p>\u6709\u591a\u4e2a\u671f\u671b\u8f93\u51fa</p> </li> </ul> x and y <ul> <li>\u5728chatbot\u4e2d\uff0c\\(y\\)\u662fprompt\uff0c\\(x\\)\u662fresponse</li> <li>\u5728\u86cb\u767d\u8d28\u751f\u6210\u4e2d\uff0c\\(y\\)\u662f\u6027\u8d28/\u7ea6\u675f\uff0c\\(x\\)\u662f\u86cb\u767d\u8d28\u7ed3\u6784</li> </ul> <p></p> <p>\u5e76\u4e14\u5229\u7528\u8d1d\u53f6\u65af\u516c\u5f0f\u6211\u4eec\u53ef\u4ee5\u7531\u751f\u6210\u5f0f\u6a21\u578b\u7684\u6982\u7387\u5f97\u5230\u5224\u522b\u5f0f\uff1a</p> \\[ p(y|x) = \\frac{p(x|y)p(y)}{p(x)} \\] <p>\u4f46\u662f\u53cd\u4e4b\u5e76\u4e0d\u80fd\u5f88\u597d\u7684\u6210\u7acb\uff1a</p> <p>\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u77e5\u9053\u6570\u636esample\u7684\u5206\u5e03\uff0c\u4f46\u662f\u53ea\u6709\u751f\u6210\u5f0f\u6982\u7387\\(p(x|y)\\)\uff0c\u800c\\(p(x)\\)\u662f\u4e0d\u77e5\u9053\u7684\u3002</p> <p>\u603b\u7ed3</p> <p>\u751f\u6210\u5f0f\u6a21\u578b\u5c31\u662f\u8981\u53bb\u5bfb\u627e\u6570\u636e\u7684\u6f5c\u5728\u5206\u5e03\\(p(x)\\)\uff0c\u6765\u751f\u6210\u4e0e\u771f\u5b9e\u6570\u636e\u5206\u5e03\u76f8\u4f3c\u7684\u6837\u672c</p>"},{"location":"notes/ai/dgm/index.html#probabilistic-modeling","title":"Probabilistic Modeling","text":"<p>\u524d\u6587\u4e2d\u6211\u4eec\u63d0\u5230\u4e86\u4e00\u7cfb\u5217\u6982\u7387\\(p\\)\uff0c\u4f46\u662f\u8fd9\u4e9b\u6982\u7387\u662f\u54ea\u91cc\u6765\u7684\u5462\uff1f</p> <p>Hint</p> <p>          Probability is part of the modeling.      </p> <p>\u600e\u4e48\u7406\u89e3\u8fd9\u53e5\u8bdd\u5462\uff0c\u6211\u7684\u7406\u89e3\u5c31\u662f\u6211\u4eec\u5728\u5b66\u4e60\u65f6\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u5b66\u4e60\u4e00\u79cd\u6982\u7387\u5206\u5e03\uff0c\u5bf9\u89c2\u6d4b\u7684\u6570\u636e\u8fdb\u884c\u5efa\u6a21\uff0c\u6240\u4ee5\u5176\u5b9e\u5f97\u5230\u7684\u5206\u5e03\u51fd\u6570\u5c31\u662f\u6211\u4eec\u7684\u6a21\u578b\u3002</p> <p>\u8fd9\u6837\u8bf4\u6709\u70b9\u62bd\u8c61\uff0c\u8bd5\u7740\u4e3e\u4e2a\u4f8b\u5b50\uff1a</p> <p>\u6211\u4eec\u4ee5\u751f\u6210\u5f0f\u6a21\u578b\u4e3a\u4f8b\uff0c\u91c7\u7528\u6982\u7387\u5efa\u6a21\u7684\u65b9\u6cd5\uff1a</p> Image Generation <ul> <li>\u6211\u4eec\u7684\u76ee\u6807\u662f\u901a\u8fc7\u7ed9\u5b9a\u7684\u4e00\u4e9b\u56fe\u50cf\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\u50cf</li> </ul> <p></p> <ul> <li>\u5728\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u65b9\u6cd5\uff0c\u5f97\u5230\u4e00\u4e2a\u4f30\u8ba1\uff08estimated\uff09\u7684\u5206\u5e03\uff0c\u8fd9\u4e2a\u5206\u5e03\u7684\u8bc4\u4f30\u662f\u901a\u8fc7\u635f\u5931\u51fd\u6570\\(L\\)\u6765\u8fdb\u884c\u7684</li> </ul> <p></p> <ul> <li>\u6b64\u65f6\u6211\u4eec\u4f9d\u7167\u7ed9\u5b9a\u7279\u5f81\\(y\\)\uff0c\u751f\u6210\u4e00\u4e2a\u56fe\u50cf\\(x'\\)\uff0c\u8fd9\u4e2a\\(x'\\)\u5c31\u9075\u4ece\u6211\u4eec\u5f97\u5230\u7684\u5206\u5e03\\(p(x|y)\\)</li> </ul> <p></p> <p>Notes</p> <ul> <li>Generative models involve statistical models which are often designed and derived by humans.</li> <li>Probabilistic modeling is not just work of neural nets.</li> <li>Probabilistic modeling is a popular way, but not the only way.</li> </ul>"},{"location":"notes/ai/dgm/index.html#deep-generative-models_1","title":"\"Deep\" Generative Models","text":"<p>\u6df1\u5ea6\u5b66\u4e60\u662f\u4e00\u79cd\u8868\u5f81\u5b66\u4e60\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5b66\u4e60\u7684\u662f\u5982\u4f55\u5c06\u6570\u636e \\(x\\) \u6620\u5c04\u5230\\(f(x)\\)\uff0c\u4f7f\u5f97\u635f\u5931\u51fd\u6570\\(L(f(x), y)\\)\u6700\u5c0f\u3002</p> <p>\u5728\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u7684\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u5b66\u4e60\u7684\u662f\u5982\u4f55\u8868\u5f81\u6982\u7387\u5206\u5e03</p> <p>\u8fd9\u91cc\u6211\u4eec\u5b66\u4e60\u5f97\u5230\u4e00\u4e2a\u7b80\u5355\u5206\u5e03\u5230\u590d\u6742\u5206\u5e03\u7684\u6620\u5c04\uff0c\u8fd9\u4e2a\u6620\u5c04\u5c31\u662f\u6211\u4eec\u7684\u6a21\u578b\u3002</p> \\[  \\pi \\rightarrow g(\\pi) \\] <p>\u50cf\u8fd9\u6837\uff1a</p> <p>\u968f\u540e\u6700\u5c0f\u5316\u57fa\u4e8e\u6570\u636e\u7684\u635f\u5931\u51fd\u6570\\(L(p_x , g(\\pi))\\)\uff0c\u5f97\u5230\u6a21\u578b\\(g\\)</p> <p>\u603b\u7ed3</p> <p>\u4e00\u4e2aDGM\u53ef\u80fd\u5305\u62ec\uff1a</p> <ul> <li>Formulation\uff1a<ul> <li>formulate a problem as a probabilistic modeling \uff08\u8fdb\u884c\u6982\u7387\u5efa\u6a21\uff09</li> <li>decompose a complex distribution into simpler and tractable ones \uff08\u5c06\u590d\u6742\u5206\u5e03\u5206\u89e3\uff09</li> </ul> </li> <li>Representation\uff1adeep neural networks to represent data and their distributions \uff08\u4f7f\u7528\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8868\u793a\u6570\u636e\u548c\u4ed6\u4eec\u7684\u5206\u5e03\uff09</li> <li>Objective function\uff1aevaluate the predicted distribution</li> <li>Optimization\uff1aoptimize the networks and/or the decomposition</li> <li>Inference:<ul> <li>sampler </li> <li>probability density estimator</li> <li>...</li> </ul> </li> </ul>"},{"location":"notes/ai/dgm/index.html#latent-variable-models","title":"Latent Variable Models","text":"<p>\u5728\u8fd9\u91cc\u6211\u89c9\u5f97\u9700\u8981\u63d0\u524d\u8bf4\u660e\u7684\u662f\uff0c\u5728\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u9690\u53d8\u91cf\uff08Latent Variables\uff09</p> <p>\u4f8b\u5982\u8fd9\u6837\u4e00\u7ec4\u56fe\u7247\uff1a</p> <p>\u7531\u4e8e\u6027\u522b\u3001\u5e74\u9f84\u3001\u80a4\u8272\u7b49\u7b49\u56e0\u7d20\uff0c\u56fe\u50cf\\(x\\)\u5b58\u5728\u591a\u79cd\u53ef\u80fd\u7684\u53d8\u5316\uff0c\u4f46\u9664\u975e\u56fe\u7247\u662f\u88ab\u6ce8\u91caannotated\u7684\uff0c\u5426\u5219\u6211\u4eec\u65e0\u6cd5\u5f97\u77e5\u8fd9\u4e9b\u56e0\u7d20\uff0c\u6216\u8005\u8bf4\uff0c\u8fd9\u4e9b\u56e0\u7d20\u662f\u4e0d\u53ef\u89c1\u7684\uff08not explicitly available\uff09\u3002</p> <p>Latent Variable</p> <p>\u8fd9\u65f6\u6211\u4eec\u7684\u60f3\u6cd5\u5c31\u662f\u7528\u9690\u53d8\u91cf\\(z\\)\u663e\u793a\u7684\u5efa\u6a21\u6765\u8868\u793a\u8fd9\u4e9b\u56e0\u7d20\u3002</p> <p>\u5f88\u76f4\u89c2\u7684\u60f3\u6cd5\u662f\u7528 Bayes \u7f51\u7edc\u6765\u8868\u8fbe\uff1a</p> <p>\u4f46\u662f\u8fd9\u5176\u4e2d\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u662f\u5f88\u96be\u5f97\u5230\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u6765\u8fd1\u4f3c\u8fd9\u4e2a\u6761\u4ef6\u6982\u7387\u5206\u5e03\uff1a</p> <p>\u8fd9\u65f6\u6211\u4eec\u901a\u5e38\u5047\u8bbe\\(z\\)\u662f\u670d\u4ece\u67d0\u79cd\u7b80\u5355\u5206\u5e03\u7684\uff0c\u4f8b\u5982\u9ad8\u65af\u5206\u5e03\uff1a\\(z \\sim N(0, 1)\\)</p> <p>\u901a\u8fc7\u795e\u7ecf\u7f51\u7edc\u7684\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\\(p(x|z)=N(x|\\mu_{\\theta}(z), \\sigma_{\\theta}(z))\\)\uff0c\u5728\u8fd9\u91cc\\(\\theta\\)\u662f\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\u3002</p> <p>\u6211\u4eec\u5e0c\u671b\u5728\u8bad\u7ec3\u7ed3\u675f\u540e\uff0c\\(z\\)\u53ef\u4ee5\u8868\u793a\\(x\\)\u7684\u6f5c\u5728\u56e0\u7d20\uff08\u7279\u5f81\uff09</p> <p>\u4f7f\u7528\\(z\\)\u6765\u8868\u793a\u6709\u4e24\u70b9\u539f\u56e0\uff1a</p> <ol> <li>\u7528\u6f5c\u53d8\u91cf\u53ef\u4ee5\u7b80\u5316\u95ee\u9898</li> <li>\u5f97\u5230\u7684\u6f5c\u53d8\u91cf\u672c\u8eab\u5c31\u5177\u6709\u4ed6\u7684\u610f\u4e49\uff08\u4e0d\u7528\u5728\u751f\u6210\uff0c\u7528\u5728\u63a8\u65ad\u6216\u5bfb\u627e\u7279\u5f81\uff09</li> </ol>"},{"location":"notes/ai/dgm/index.html#measure-distribution","title":"Measure Distribution","text":"<p>\u5728\u5f97\u5230\u751f\u6210\u5206\u5e03\u540e\uff0c\u6211\u4eec\u9700\u8981\u8bc4\u4f30\u8fd9\u4e2a\u5206\u5e03\u7684\u4f18\u52a3\uff0c\u8fd9\u91cc\u5bf9\u51e0\u4e2a\u5e38\u7528\u7684\u8bc4\u4f30\u65b9\u6cd5\u8fdb\u884c\u4ecb\u7ecd\u3002</p>"},{"location":"notes/ai/dgm/index.html#divergence","title":"Divergence","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6982\u7387\u5206\u5e03\\(P\\)\u548c\\(Q\\)\uff0c\\(f\\)-divergence\u5b9a\u4e49\u4e3a\uff1a</p> \\[ D_{f}(P||Q) = \\int {q(x)} f\\left(\\frac{p(x)}{q(x)}\\right) dx \\] <ul> <li>KL</li> </ul> <p>KL \u6563\u5ea6\uff08Kullback-Leibler divergence\uff09: \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e24\u4e2a\u5206\u5e03\\(p\\)\u548c\\(q\\)\uff0cKL\u6563\u5ea6\u5b9a\u4e49\u4e3a\uff1a</p> <p>\u79bb\u6563\u7684\uff1a</p> \\[ D_{KL}(p||q) = \\sum_{x \\in \\mathcal{X}} p(x) \\log \\frac{p(x)}{q(x)} \\] <p>\u8fde\u7eed\u7684\uff1a</p> \\[ D_{KL}(p||q) = \\int p(x) \\log \\frac{p(x)}{q(x)} dx \\] <p>\u53ef\u4ee5\u770b\u5230KL\u6563\u5ea6\u662f\\(f\\)-divergence\u7684\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5f53\\(f(x) = x \\log x\\)\u65f6\uff0c\\(f\\)-divergence\u5c31\u662fKL\u6563\u5ea6\u3002</p> <ul> <li> <p>\u975e\u8d1f\u6027\uff1a\\(D_{KL}(p||q) \\geq 0\\)</p> </li> <li> <p>KL\u6563\u5ea6\u8d8a\u5c0f\uff0c\u4e24\u4e2a\u5206\u5e03\u8d8a\u76f8\u4f3c\u3002</p> </li> <li> <p>KL\u6563\u5ea6\u4e0d\u5177\u6709\u5bf9\u79f0\u6027\uff0c\u5373\\(D_{KL}(p||q) \\neq D_{KL}(q||p)\\)</p> </li> </ul> <p>\u5728\u5bf9\\(p_{\\theta}\\)\u548c\\(p_{data}\\)\u8fdb\u884c\u6bd4\u8f83\u65f6\uff0c\u6211\u4eec\u53d6\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684KL\u6563\u5ea6\u6700\u5c0f\u503c\uff1a</p> \\[ \\min_{\\theta} D_{KL}(p_{data}||p_{\\theta}) \\] <p>\u53ef\u4ee5\u63a8\u5bfcKL\u6563\u5ea6\u6700\u5c0f\u503c\u7b49\u4ef7\u4e8e\u6700\u5927\u5316 \u671f\u671b\u5bf9\u6570\u4f3c\u7136\uff08Maximum Log-Likelihood Estimation\uff09\uff1a\uff08\u7528\u79bb\u6563\u7684KL\u516c\u5f0f\uff0c\u6253\u5f00\\(\\log\\)\uff0c\u5176\u4e2d\\(p_{data}(x)\\)\u662f\u5e38\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u5ffd\u7565\uff09</p> \\[ arg\\min_{\\theta} D_{KL}(p_{data}||p_{\\theta}) = arg\\max_{\\theta} \\mathbb{E}_{x \\sim p_{data}} \\log p_{\\theta}(x) \\] <p>\u7f3a\u9677</p> <ul> <li>\u7531\u4e8e\u6211\u4eec\u5ffd\u7565\u4e86\\(p_{data}(x)\\)\u7684\u671f\u671b\u9879\uff0c\u6240\u4ee5\u6700\u7ec8\u6211\u4eec\u53ea\u80fd\u5f97\u5230\u4e00\u4e2a\u53c2\u6570\\(\\theta\\)\u7684\u53d6\u503c\u7684\u4f30\u8ba1\uff0c\u4f46\u662f\u4e0d\u80fd\u77e5\u9053how close the model is to the true distribution\u3002</li> <li>In practice, we can't compute the true distribution \\(p_{data}\\)</li> </ul> <p>\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e3a\u4e86\u907f\u514d\u6d89\u53ca\u5230\\(p_{data}\\)\uff0c\u6211\u4eec\u4f7f\u7528\u53e6\u4e00\u79cd\u4f3c\u7136\u65b9\u6cd5\uff1a\u7ecf\u9a8c\u5bf9\u6570\u4f3c\u7136\uff08Empirical Log-Likelihood\uff09</p> <p>\u671f\u671b\u5bf9\u6570\u4f3c\u7136\u662f\u5bf9\u6240\u6709\u6570\u636e\u70b9\u7684\u5bf9\u6570\u4f3c\u7136\u6c42\u671f\u671b\uff0c\u800c\u7ecf\u9a8c\u5bf9\u6570\u4f3c\u7136\u662f\u5bf9\u6240\u6709\u6570\u636e\u70b9\u7684\u5bf9\u6570\u4f3c\u7136\u6c42\u5e73\u5747\u3002</p> \\[ \\max_{\\theta} \\mathbb{E}_{x \\sim p_{data}} \\log p_{\\theta}(x) \\approx \\max_{p_{\\theta}} \\frac{1}{N} \\sum_{i=1}^{N} \\log p_{\\theta}(x_i) \\] <p>\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6240\u9700\u8981\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u3002</p> <p>\u5bf9\u4e8e\u6570\u636e\u7684\u6700\u5927\u5316\u4f3c\u7136\uff1a\uff08\u8054\u5408\u6982\u7387\u4f3c\u7136\uff09</p> \\[ p_{\\theta}(x^{1}, x^{2}, ..., x^{N}) = \\prod_{i=1}^{N} p_{\\theta}(x^{i}) \\] <ul> <li>Fisher</li> </ul>"},{"location":"notes/ai/dgm/index.html#evaluating-generative-models","title":"Evaluating Generative Models","text":"<p>Key</p> <p>          What's the task that you really care about?      </p> <p>\u603b\u7684\u6765\u8bf4\u6211\u4eec\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1\uff1a</p> <p>Summary</p> <ul> <li>Density Estimation</li> <li>Compression </li> <li>Sampling/Generation</li> <li>Latent representation learning</li> <li>Composition tasks</li> </ul>"},{"location":"notes/ai/dgm/index.html#density-estimation-or-compression","title":"Density Estimation or Compression","text":"<p>\u5bf9likelihood\u8fdb\u884c\u5efa\u6a21\uff0c\u5c31\u662f\u5c06\u6570\u636e\u5206\u5272\u4e3atrain\u3001val\u3001test\uff0c\u7528train\u8fdb\u884c\u8bad\u7ec3\u7684\u5230\\(p_{\\theta}\\)\uff0c\u7136\u540e\u7528val\u8fdb\u884ctuning\uff0c\u6700\u540e\u7528test\u8fdb\u884c\u8bc4\u4f30\uff1a\\(E_{p_{data}}[log p_{\\theta}(x)]\\)\uff0c\u8fd9\u91cc\u7684\\(p_{data}\\)\u662f\u771f\u5b9e\u7684\u6570\u636e\u5206\u5e03\uff0c\u8fd9\u4e2a\u671f\u671b\u7528\u4e8e\u8861\u91cf\\(p_{\\theta}\\)\u5bf9\u771f\u5b9e\u6570\u636e\u7684\u62df\u5408\u7a0b\u5ea6\uff0c\u5f53\\(p_{\\theta}\\)\u548c\\(p_{data}\\)\u8d8a\u63a5\u8fd1\uff0c\u8fd9\u4e2a\u671f\u671b\u8d8a\u5927\uff0c\u4e24\u8005\u76f8\u7b49\u65f6\uff0c\u8fd9\u4e2a\u671f\u671b\u5c31\u662f\u771f\u5b9e\u6570\u636e\u7684\u71b5\u3002</p> <p>\u8fd9\u91cc\u5c31\u5f15\u5165\u4e86\u71b5\u7684\u6982\u5ff5\uff0c\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u6709\u538b\u7f29\u5373\u8bc4\u4f30\u7684\u8bf4\u6cd5</p> <p>\u5728\u538b\u7f29\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u51fa\u73b0\u9891\u7387\u8d8a\u9ad8\u7684\u6570\u636e\uff0c\u538b\u7f29\u540e\u7684\u957f\u5ea6\u8d8a\u77ed\uff0c\u800c\u51fa\u73b0\u9891\u7387\u8d8a\u4f4e\u7684\u6570\u636e\uff0c\u538b\u7f29\u540e\u7684\u957f\u5ea6\u8d8a\u957f\uff0c\u6211\u4eec\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8bc4\u4f30\u538b\u7f29\u540e\u7684\u5e73\u5747\u957f\u5ea6\uff0c\u8fd9\u4e2a\u5e73\u5747\u7801\u957f\u6b63\u662f\u4e0a\u6587\u4e2d\u671f\u671b\u7684\u503c\uff08\u5185\u90e8\u662f\u8d1f\u5bf9\u6570\uff09\uff0c\u8fd9\u4e2a\u503c\u8d8a\u5c0f\uff0c\u8bf4\u660e\u6a21\u578b\u8d8a\u597d\u3002</p> <p>\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u5bf9\u8bed\u8a00\u6a21\u578b\u6765\u8bf4\uff1a</p> \\[ \\text{Perplexity} =  2^{-\\frac{1}{D}E_{p_{data}}[\\log p_{\\theta}(x)]} \\text{  for } x \\in \\mathbb{R}^D \\] <p>Note</p> <p>\u8fd9\u91cc\u6211\u7684\u7406\u89e3\u662f\uff0cCompression\u5bf9\u4e8e\u6a21\u578b\u6765\u8bf4\uff0c\u5c31\u662f\u5b66\u4e60pattern\uff0c\u5f97\u5230pattern\u540e\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u629b\u5f03\u7ed9\u5b9a\u6570\u636e\u4e0bpattern\u7684\u8f93\u51fa\uff0c\u76f4\u63a5\u8f93\u51fapattern\uff0c\u8fd9\u6837\u5c31\u53bb\u9664\u4e86redundancy\u3002</p> <p>\u4f46\u95ee\u9898\u662f\u5bf9\u4e8e\u5f88\u591a\u6a21\u578b\uff0c\u6211\u4eec\u662f\u6ca1\u6709tractable likelihood\u8f93\u51fa\u7684\uff0c\u4f8b\u5982GAN\uff0cVAE\uff0cEBMs\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u4f30\u8ba1likelihood\u5982\u679c\u6211\u4eec\u53ea\u6709samples\uff1f</p> <p>\u603b\u7684\u6765\u8bf4\uff1a</p> <p> <p>Unbiased estimation of \\(p(x)\\) from samples is impossible</p> <p></p> <p>\u6240\u4ee5\u6211\u4eec\u8981\u91c7\u7528\u4e00\u4e9b\u8fd1\u4f3c\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a</p> <p>Kernel Density Estimation</p> <p>\u7ed9\u5b9a\u4e00\u4e2aSample\u6837\u672c\u96c6\u5408\\(S=\\{x_1, x_2, ..., x_n\\}\\)\uff0c\u6211\u4eec\u5e0c\u671b\u4f30\u8ba1\u4e00\u4e2a\u4e0d\u5728\\(S\\)\u4e2d\u7684\u6837\u672c\\(x_t\\)\u7684\u6982\u7387\\(p(x_t)\\)\uff0c\u6709\u5982\u4e0b\u516c\u5f0f\uff1a</p> \\[ \\hat{p}(x_t) = \\frac{1}{n} \\sum_{i=1}^{n} K(\\frac{x_t-x_i}{\\sigma}) \\] <p>\u5176\u4e2d\\(K\\)\u662f\u6838\u51fd\u6570\uff0c\\(\\sigma\\)\u662f\u5e26\u5bbd\u53c2\u6570bandwidth parameter</p> <ul> <li> <p>K \u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u6761\u6027\u8d28\uff1a</p> <ul> <li>\u5f52\u4e00\u5316\uff1a\\(\\int K(x) dx = 1\\)</li> <li>\u5bf9\u79f0\u6027\uff1a\\(K(x) = K(-x)\\)</li> </ul> </li> <li> <p>Bandwidth parameter \\(\\sigma\\) \u9700\u8981\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u503c(black)\uff0c\u5982\u679c\\(\\sigma\\)\u592a\u5c0f\uff0c\u5219\u4f30\u8ba1\u7684\u5bc6\u5ea6\u51fd\u6570\u4f1a\u8fc7\u4e8e\u5c16\u9510(red)\uff0c\u5982\u679c\\(\\sigma\\)\u592a\u5927(green)\uff0c\u5219\u4f30\u8ba1\u7684\u5bc6\u5ea6\u51fd\u6570\u4f1a\u8fc7\u4e8e\u5e73\u6ed1\u3002</p> </li> </ul> <p> </p> <p>\u603b\u7684\u6765\u8bf4\u6838\u5bc6\u5ea6\u4f30\u8ba1\u662f\u4e00\u79cd\u63d2\u503c\u65b9\u6cd5\uff0c\u901a\u8fc7\u5bf9\u6bd4\u5f85\u4f30\u8ba1\u70b9\u4e0e\u5df2\u77e5samples\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u63d2\u503c\u53d6\u503c\u5728\u7528\u5df2\u77e5samples\u7528\u6838\u51fd\u6570\u8fdb\u884c\u62df\u5408\u7684\u51fd\u6570\u66f2\u7ebf\u4e0a\u3002</p> <p>\u4f46\u662fKDE\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u662f\\(O(n^2)\\)\uff0c\u5176\u5728\u9ad8\u7ef4\u5ea6\u4e0a\u4e0d\u53ef\u9760</p>"},{"location":"notes/ai/dgm/index.html#quantitative-evaluations","title":"Quantitative Evaluations","text":""},{"location":"notes/ai/dgm/index.html#inception-score","title":"Inception Score","text":"<p>Inception Score \u7528\u4e8e\u8bc4\u4f30labelled data\u751f\u6210\u8d28\u91cf\uff0c\u4e3b\u8981\u8003\u8651\u7684\u662f\u751f\u6210\u6837\u672c\u7684sharpness\u548cdiversity</p> <p>Inception Score</p> <p>\u5728IS\u4e2d\uff0c\u6211\u4eec\u6709\u4e24\u70b9\u5047\u8bbe\uff1a</p> <ul> <li>\u6709\u6807\u7b7e\u7684\u76d1\u7763\u5b66\u4e60\u6a21\u578b</li> <li>\u5177\u6709\u597d\u7684\u5206\u7c7b\u5668\\(c(y|x)\\)</li> </ul> <p>Sharpness\uff1a</p> \\[ S=\\exp \\left(E_{\\mathbf{x} \\sim p}\\left[\\int c(y \\mid \\mathbf{x}) \\log c(y \\mid \\mathbf{x}) \\mathrm{d} y\\right]\\right) \\] <p>Diversity\uff1a</p> \\[ D=\\exp \\left(-E_{\\mathbf{x} \\sim p}\\left[\\int c(y \\mid \\mathbf{x}) \\log c(y) \\mathrm{d} y\\right]\\right) \\] <p>IS\uff1a</p> \\[ \\text{IS} = D \\times S \\] <p>\u5bf9\u4e8e\u8fd9\u91cc\u6e05\u6670\u5ea6\u548c\u591a\u6837\u6027\u7684\u7406\u89e3\uff1a</p> <ul> <li> <p>\u6e05\u6670\u5ea6S\uff1a\u5982\u679c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u975e\u5e38\u6e05\u6670\u7684\u56fe\u50cf\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u975e\u5e38\u5bb9\u6613\u8bc6\u522b\u51fa\u4e00\u4e2a\u56fe\u50cf\u7684\u7c7b\u522b\uff0c\u8fd9\u65f6\u5206\u7c7b\u5668\\(c(y|x)\\)\u7684\u5206\u5e03\u5e94\u8be5\u662f\u4e00\u4e2a\u5c16\u5cf0\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u4f4e\u71b5\u7684\u5206\u5e03\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e0a\u8ff0\u7684S\u516c\u5f0f\u6765\u6c42\u7b97\u5206\u7c7b\u5668\\(c(y|x)\\)\u7684\u71b5\uff0c\u5e76\u8ffd\u6c42\u4ed6\u7684\u6700\u5c0f\u5316</p> </li> <li> <p>\u591a\u6837\u6027D\uff1a\u5982\u679c\u6211\u4eec\u5f97\u5230\u4e86\u975e\u5e38\u591a\u7684\u7c7b\u522b\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u8fb9\u7f18\u5206\u5e03\\(c(y)\\)\u5e94\u8be5\u662f\u63a5\u8fd1\u4e00\u4e2a\u5747\u5300\u5206\u5e03\u7684\u5f62\u6001\uff0c\u610f\u5473\u7740\u6bcf\u4e2a\u6837\u672c\u51fa\u73b0\u7684\u6b21\u6570\u90fd\u5dee\u4e0d\u591a\uff0c\u6240\u4ee5\\(c(y)\\)\u7684\u71b5\u5e94\u8be5\u662f\u4e00\u4e2a\u9ad8\u71b5\u7684\u5206\u5e03\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e0a\u8ff0\u7684D\u516c\u5f0f\u6765\u6c42\u7b97\\(c(y)\\)\u7684\u71b5\uff0c\u5e76\u8ffd\u6c42\u4ed6\u7684\u6700\u5927\u5316</p> </li> </ul> <p>\u5982\u679c\u8fd8\u8bb0\u5f97KL Divergence\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06IS\u516c\u5f0f\u6539\u5199\u4e3a\uff1a</p> \\[ \\text{IS} = \\exp \\left(E_{x \\sim p}\\left[D_{KL}(c(y|x)||c(y))\\right]\\right) \\] <p>\u8fd9\u65f6maximize IS\u7b49\u4ef7\u4e8e\u6700\u5927\u5316D\u548cS\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4e5f\u5c31\u662f\u65e2\u8981\u6c42\u6a21\u578b\u751f\u6210\u6e05\u6670\u5ea6\u9ad8\u7684\u56fe\u50cf\uff0c\u53c8\u8981\u6c42\u6a21\u578b\u751f\u6210\u591a\u6837\u6027\u7684\u56fe\u50cf\uff0c\u53ea\u6709\u5f53\u4e24\u8005\u90fd\u8fbe\u5230\u65f6\uff0cIS\u624d\u4f1a\u8fbe\u5230\u6700\u5927\u503c</p> <p>\u4f46\u662fIS\u7684\u95ee\u9898\u5728\u4e8e\uff1a</p> <ul> <li>\u4f9d\u8d56\u5206\u7c7b\u5668</li> <li>\u65e0\u6cd5\u68c0\u6d4b\u7c7b\u5185\u591a\u6837\u6027</li> </ul> <p>\u800c\u4e14\u4f60\u4f1a\u53d1\u73b0\uff0c\u597d\u50cfIS\u5e76\u6ca1\u6709\u5728\u8003\u8651\u771f\u5b9e\u6570\u636e\u7684\u5206\u5e03\uff0c\u800c\u662f\u53ea\u8003\u8651\u4e86\u751f\u6210\u6570\u636e\u7684\u5206\u5e03</p>"},{"location":"notes/ai/dgm/index.html#frechet-inception-distance","title":"Fr\u00e9chet Inception Distance","text":"<p>FID\u7684\u6838\u5fc3\u5728\u4e8e\uff0c\u4e0e\u5176\u95f4\u63a5\u5730\u901a\u8fc7\u5206\u7c7b\u6982\u7387\u6765\u8bc4\u4f30\uff0c\u4e0d\u5982\u76f4\u63a5\u6bd4\u8f83\u771f\u5b9e\u6570\u636e\u548c\u751f\u6210\u6570\u636e\u5728\u6df1\u5ea6\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u7edf\u8ba1\u5206\u5e03</p> <p>FID Procedure</p> <ol> <li> <p>Feature Extraction</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u771f\u5b9e\u6570\u636e\\(x_r\\)\u548c\u751f\u6210\u6570\u636e\\(x_g\\)\uff0c\u8f93\u5165\u8fdbInception V3\u6a21\u578b\u63d0\u53d6\u7279\u5f81\uff0c\u5f97\u5230\u7279\u5f81\u5411\u91cf\uff0c\u8fd9\u4e2a\u5411\u91cf\u4e0d\u4ec5\u4ec5\u662f\u6d45\u5c42\u7684\u5206\u7c7b\uff0c\u800c\u662f\u5305\u542b\u4e86\u66f4\u6df1\u5c42\u7684\u7279\u5f81\uff0c\u4f8b\u5982\u7eb9\u7406\u3001\u5f62\u72b6\u7b49\uff0c\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u7279\u5f81\u6307\u7eb9\uff0c\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86\u4e24\u7ec4\u7279\u5f81\u5411\u91cf\\(X_r\\)\u548c\\(X_g\\)</p> </li> <li> <p>Fitting a Multivalue Gaussian </p> <p>\u5728\u8fd9\u91ccFID\u505a\u51fa\u4e00\u4e2a\u5047\u8bbe\uff1a\u8fd9\u4e24\u5806\u7279\u5f81\u5411\u91cf\u7684\u5206\u5e03\u53ef\u4ee5\u7528\u591a\u5143\u9ad8\u65af\u6765\u8fd1\u4f3c\u63cf\u8ff0\uff0c\u8fd9\u4e24\u4e2a\u6570\u636e\u96c6\u5206\u522b\u5177\u6709\u4ed6\u4eec\u81ea\u5df1\u7684\u9ad8\u65af\u5c5e\u6027\uff1a</p> <ul> <li>\u5747\u503c\u5411\u91cf\\(\\mu_r\\)\u548c\\(\\mu_g\\)</li> <li>\u534f\u65b9\u5dee\u77e9\u9635\\(\\Sigma_r\\)\u548c\\(\\Sigma_g\\)</li> </ul> </li> <li> <p>Fr\u00e9chet Distance</p> <p>\u8ba1\u7b97\u4e24\u4e2a\u9ad8\u65af\u5206\u5e03\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1a</p> \\[ \\text{FID} = ||\\mu_r - \\mu_g||^2 + \\text{Tr}(\\Sigma_r + \\Sigma_g - 2(\\Sigma_r \\Sigma_g)^{1/2}) \\] </li> </ol> <p>\u5728\u6700\u540e\u7684\u5f0f\u5b50\u4e2d\uff0c\u7b2c\u4e00\u9879\u5c31\u662f\u4e24\u4e2a\u9ad8\u65af\u5206\u5e03\u5747\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u7b2c\u4e8c\u9879\u901a\u8fc7\u4e24\u4e2a\u77e9\u9635\u4e4b\u95f4\u7684trace\u8861\u91cf\u534f\u65b9\u5dee\u77e9\u9635\u7684\u5dee\u5f02\u6027</p>"},{"location":"notes/ai/dgm/index.html#kernel-inception-distance","title":"Kernel Inception Distance","text":"<p>\u5728\u8ba8\u8bbaFID\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5173\u952e\u7684\u5047\u8bbe\u662f\u6570\u636e\u7684\u5206\u5e03\u670d\u4ece\u9ad8\u65af\u5206\u5e03\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u5c40\u9650\u6027\u3002\u6211\u4eec\u73b0\u5728\u5c1d\u8bd5\u76f4\u63a5\u6bd4\u8f83\u4e24\u4e2a\u6570\u636e\u5206\u5e03\u672c\u8eab\uff1a</p> <p>KID</p> <p>\u7ed3\u5408\u4e86Inception\u7279\u5f81\u63d0\u53d6\u548c\u6838\u65b9\u6cd5\u7684\u5206\u5e03\u5dee\u5f02\u5ea6\u91cfMMD\uff1a</p> <ul> <li>MMD\uff1aMaximum Mean Discrepancy\uff0c\u901a\u8fc7\u5bf9\u6bd4\u4e24\u4e2a\u5206\u5e03\u5728\u518d\u751f\u6838\u5e0c\u5c14\u4f2f\u7279\u7a7a\u95f4\u4e2d\u7684\u5747\u503c\u6765\u8861\u91cf\u5206\u5e03\u5dee\u5f02</li> </ul> \\[ \\operatorname{MMD}(p, q)=\\sqrt{\\mathbb{E}_{x, x^{\\prime} \\sim p}\\left[K\\left(x, x^{\\prime}\\right)\\right]+\\mathbb{E}_{y, y^{\\prime} \\sim q}\\left[K\\left(y, y^{\\prime}\\right)\\right]-2 \\mathbb{E}_{x \\sim p, y \\sim q}[K(x, y)]} \\] <p>\u5176\u4e2d\uff0c\\(K\\)\u662f\u6838\u51fd\u6570\uff0c\\(x, x'\\) \u548c \\(y, y'\\) \u5206\u522b\u662f\u4ece\u5206\u5e03\\(p\\)\u548c\\(q\\)\u4e2d\u72ec\u7acb\u91c7\u6837\u7684\u6837\u672c</p> <p>\u5bf9\u4e8e\u6574\u4e2a\u8868\u8fbe\u5f0f\uff0c\u7b2c\u4e00\u4e8c\u9879\u7528\u4e8e\u8861\u91cf\u4e24\u4e2a\u6570\u636e\u5206\u5e03\\(p\\)\u548c\\(q\\)\u7684\u81ea\u76f8\u4f3c\u6027\uff0c\u7b2c\u4e09\u9879\u7528\u4e8e\u8861\u91cf\u4e24\u4e2a\u5206\u5e03\u4e4b\u95f4\u7684\u4ea4\u53c9\u76f8\u4f3c\u6027</p> <ul> <li> <p>KID Procedure</p> <ol> <li>\u7279\u5f81\u63d0\u53d6\uff1a\u4f7f\u7528\u9884\u8bad\u7ec3\u7684Inception\u7f51\u7edc\u63d0\u53d6\u7279\u5f81</li> <li>\u8ba1\u7b97MMD\uff1a\u8ba1\u7b97\u751f\u6210\u6570\u636e\\(p_g\\)\u548c\u771f\u5b9e\u6570\u636e\\(p_r\\)\u7684MMD</li> <li>\u8ba1\u7b97KID\uff1a</li> </ol> \\[ \\operatorname{KID}(p_g, p_r)= \\operatorname{MMD}^2(Inception(p_g), Inception(p_r)) \\] <p>\u5e38\u89c1\u7684\u6838\u51fd\u6570\u6709\u9ad8\u65af\u6838\u6216\u8005\u662f\u8ba1\u7b97\u9ad8\u6548\u7684\u591a\u9879\u5f0f\u6838\\(K(x, y) = (x^T y + c)^d\\)</p> </li> </ul> <p>KID\u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u907f\u514d\u4e86\u9ad8\u65af\u5206\u5e03\u5047\u8bbe</li> <li>\u65e0\u504f\u4f30\u8ba1</li> <li>\u907f\u514d\u4e86trace\u8ba1\u7b97</li> <li>\u901a\u8fc7\u6838\u51fd\u6570\u9690\u542b\u9ad8\u9636\u7edf\u8ba1\u91cf\uff0c\u6709\u53ef\u89e3\u91ca\u6027</li> </ul> <p>\u5bf9\u4e8e\u6709\u65e0\u504f\u4f30\u8ba1\u6211\u4e0d\u662f\u592a\u6e05\u695a\uff0c\u8fd9\u91cc\u653e\u4e00\u4e9b\u89e3\u91ca\uff1a</p> Bias vs. Unbiased <p>\u6700\u76f4\u89c2\u7684\u4e00\u4e2a\u89e3\u91ca\u662f\uff1a\u65e0\u504f\u4f30\u8ba1\u662f\u4e00\u4e2a\u5f13\u7bad\u624b\u80fd\u591f\u56f4\u7ed5\u9776\u5fc3\u8fdb\u884c\u5c04\u51fb\uff0c\u800c\u504f\u5dee\u4f30\u8ba1\u662f\u5f13\u7bad\u624b\u53ef\u4ee5\u56fa\u5b9a\u4e00\u4e2a\u5c04\u51fb\u8303\u56f4\uff0c\u4f46\u8fd9\u4e2a\u8303\u56f4\u7684\u4e2d\u5fc3\u4e0d\u662f\u9776\u5fc3\uff08\u7cfb\u7edf\u6027\u504f\u79bb\u771f\u5b9e\u503c\uff09</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u771f\u5b9e\u53c2\u6570\\(\\theta\\)\uff0c\u6211\u4eec\u6709\u4f30\u8ba1\u91cf\\(\\hat{\\theta}\\)\uff0c\u6211\u4eec\u5b9a\u4e49\u65e0\u504f\u4f30\u8ba1\u4e3a\uff1a</p> \\[ \\mathbb{E}[\\hat{\\theta}] = \\theta \\] <p>\u800c\u504f\u5dee\u4f30\u8ba1\u4e3a\uff1a</p> \\[ \\mathbb{E}[\\hat{\\theta}] \\neq \\theta \\] <p>\u540c\u65f6\u504f\u5dee\u91cf\u5b9a\u4e49\u4e3a\uff1a</p> \\[ \\text{Bias}(\\hat{\\theta}) = \\mathbb{E}[\\hat{\\theta}] - \\theta \\] <p>\u5bf9\u4e8e\u5b9e\u9645\u4efb\u52a1\u6765\u8bf4\uff1a\u5728\u5c0f\u6837\u672c\u4e0b\u6709\u504f\u4f30\u8ba1\u4f1a\u7cfb\u7edf\u6027\u4f4e\u4f30\u771f\u5b9e\u5206\u5e03\u5dee\u5f02\uff08\u504f\u5dee\u968f\u6837\u672c\u91cf\u589e\u5927\u800c\u51cf\u5c0f\uff09\uff0c\u800c\u65e0\u504f\u4f30\u8ba1\u5219\u4e0d\u4f1a\u56e0\u4e3a\u6837\u672c\u91cf\u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u4f46\u540c\u65f6\u504f\u5dee\u7684\u6709\u65e0\u5e76\u4e0d\u662f\u7edd\u5bf9\u7684\u597d/\u574f\uff0c\u800c\u662f\u53d6\u51b3\u4e8e\u4efb\u52a1\u672c\u8eab\uff0c\u56e0\u4e3a\u6709\u7684\u65f6\u5019\u6a21\u578b\u4f1a\u9700\u8981\u964d\u4f4e\u65b9\u5dee\u4e0d\u5f97\u4e0d\u727a\u7272\u65e0\u504f\u6027</p>"},{"location":"notes/ai/dgm/index.html#latent-representations","title":"Latent Representations","text":"<p>\u8fd9\u662f\u6211\u8ba4\u4e3a\u7684\u4e00\u4e2a\u5f88\u56f0\u96be\u7684\u4f46\u662f\u5f88\u6838\u5fc3\u7684\u95ee\u9898\uff0c\u5e76\u4e14\u8fd9\u4e2a\u95ee\u9898\u662f\u6ca1\u6709\u901a\u89e3\u7684\u3002</p> <p>\u6709\u51e0\u4e2a\u6838\u5fc3\u6216\u8005\u8bf4\u5e38\u7528\u7684\u624b\u6bb5\uff1a</p> <ul> <li>Clustering</li> <li>Compression</li> <li>Disentanglement</li> </ul> <p>Disentanglement</p> <p>\u89e3\u8026\uff0c\u6211\u7684\u7406\u89e3\u5c31\u662f\u5c06\u590d\u6742\u591a\u5143\u7cfb\u7edf\u62c6\u89e3\u6210\u5355\u4e00\u53d8\u91cf\u63a7\u5236\u7684\u7cfb\u7edf\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5728\u6f5c\u7a7a\u95f4\u4e2d\u627e\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u6f5c\u53d8\u91cf\uff0c\u8fd9\u4e2a\u6f5c\u53d8\u91cf\u5177\u6709\u67d0\u79cd\u610f\u4e49\u80fd\u591f\u63a7\u5236\u751f\u6210\u6570\u636e\u7684\u67d0\u4e2a\u7279\u5f81\uff0c\u8fd9\u6837\u6211\u4eec\u901a\u8fc7\u63a7\u5236\u8fd9\u4e2a\u53d8\u91cf\u5c31\u80fd\u8fbe\u5230\u5168\u5c40\u7279\u5f81\u7684\u4fee\u6539</p>"},{"location":"notes/ai/dgm/ar.html","title":"Autoregressive Model","text":"<p> \u7ea6 1245 \u4e2a\u5b57  17 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u81ea\u56de\u5f52\u6a21\u578b\u662f\u4f7f\u7528\u975e\u5e38\u5e7f\u6cdb\u7684\u4e00\u79cd\u751f\u6210\u6a21\u578b\uff0c\u5728\u5148\u524d\u7684\u7c97\u7565\u5b66\u4e60\u4e2d\u6211\u5927\u6982\u77e5\u9053\u4e86\u90e8\u5206\u67b6\u6784\u5982CNN\u3001RNN\u3001Attention\u7b49\uff0c\u4f46\u662f\u6ca1\u6709\u7ec6\u81f4\u7684\u4e86\u89e3\u8fc7\uff0c\u8fd9\u4e00\u90e8\u5206\u4f1a\u53c2\u8003MIT\u90a3\u4efd\u6559\u6750\u591a\u4e00\u4e9b</p>"},{"location":"notes/ai/dgm/ar.html#conditional-distribution-modeling","title":"Conditional Distribution Modeling","text":"<p>\u6761\u4ef6\u5206\u5e03\u5efa\u6a21\u5e76\u4e0d\u53ea\u9002\u7528\u4e8eautoregressive model</p> <p>\u5728\u5148\u524d\u7684\u5b66\u4e60\u4e2d\u6211\u4eec\u4f7f\u7528\u591a\u4e2a\u72ec\u7acb\u968f\u673a\u53d8\u91cf\u5206\u5e03\u6765\u5efa\u6a21\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u751f\u6d3b\u4e2d\u5176\u5b9e\u5f88\u591a\u5206\u5e03\u662f\u76f8\u4e92\u4f9d\u8d56\u7684</p> <p>\u5728\u5148\u524d\u7684\u5b66\u4e60\u4e2d\uff08VAE\uff09\uff0c\u6211\u4eec\u662f\u5229\u7528\u72ec\u7acb\u7684\u6f5c\u53d8\u91cf\u8fdb\u884c\u5efa\u6a21\uff0c\u4f46\u662f\u8fd9\u9700\u8981strict assumption for high-dimensional data\uff08eg., 32x32x3 pixels\uff09\u4f46\u662f\u8fd9\u5f88\u96be\uff1a</p> <p>\u6240\u4ee5\u6211\u4eec\u5f15\u5165\u53e6\u4e00\u79cd\u65b9\u5f0f\uff1a\u91c7\u7528\u6761\u4ef6\u5206\u5e03\u5efa\u6a21</p> <p>Chain Rule\u5728\u8fd9\u91cc\u88ab\u5e94\u7528\uff1a</p> <p>\u4efb\u4f55\u4e00\u4e2a\u8054\u5408\u5206\u5e03\u90fd\u80fd\u88ab\u5199\u6210\u6761\u4ef6\u5206\u5e03\u7684\u4e58\u79ef\uff1a</p> \\[ p(A, B, C) = p(A)p(B|A)p(C|A, B) \\] <p>\u5e76\u4e14\u662f</p> <ul> <li>\u4efb\u610f\u6392\u5217\u7684\uff1a</li> </ul> <ul> <li>\u4efb\u610f\u5206\u89e3\u7684\uff1a</li> </ul> <p>Case Study</p> Case 1Case 2Case 3 <p> </p> <p>\u8fd9\u9002\u7528\u4e8e\u6bcf\u4e2aoutput\u4f9d\u8d56\u4e4b\u524d\u6240\u6709\u7684output\uff0c\u5982language model\u6216\u8005pixel prediction</p> <p> </p> <p> </p> <p>\u6a21\u578b\u5c06noisy images(\\(x_T\\))\u8f6c\u53d8\u4e3aclean images(\\(x_0\\))\u7684\u8fc7\u7a0b\u662fdiffusion process</p> <p>\u5728\u5bf9\u8054\u5408\u5206\u5e03\u8fdb\u884c\u5efa\u6a21\u65f6\uff1a\u6211\u4eec\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u5bf9\u6761\u4ef6\u5206\u5e03\u8fdb\u884c\u5efa\u6a21</p> \\[ p(A, B, C) = p_{\\theta}(A)p_{\\phi}(B|A)p_{\\psi}(C|A, B) \\] <ul> <li>\u7406\u8bba\u4e0a\u6765\u8bf4\u6bcf\u4e2ap\u62e5\u6709\u81ea\u5df1\u7684weight\uff0c\u5982\u679c\u4f7f\u7528weight sharing\u5219\u610f\u5473\u7740inductive bias</li> </ul>"},{"location":"notes/ai/dgm/ar.html#autoregression","title":"Autoregression","text":"<p>Auto\uff1aself</p> <ul> <li>using its own outputs for next prediction</li> </ul> <p>Regression\uff1a</p> <ul> <li>estimating relationship between variables</li> </ul> <p>Definition</p> <ul> <li> <p>\u81ea\u56de\u5f52\u662f\u6307\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\u7684\u884c\u4e3a(inference-time)</p> </li> <li> <p>\u4f46\u662f\u8bad\u7ec3\u65f6(training-time)\u4e0d\u4e00\u5b9a\u662f\u81ea\u56de\u5f52\u7684(eg., teacher-forcing\u5c31\u91c7\u7528\u771f\u5b9e\u76ee\u6807\u8f93\u51fa\u4f5c\u4e3a\u8f93\u5165\u4ee5\u52a0\u901f\u8bad\u7ec3\uff0c\u6ca1\u6709\u8868\u73b0\u81ea\u56de\u5f52\u7279\u6027)</p> </li> </ul> <p>In General\uff1a</p> \\[ \\begin{align} p(x_1, x_2, \\cdots, x_n) &amp;= p(x_1)p(x_2|x_1)p(x_3|x_1, x_2) \\cdots p(x_n|x_1, x_2, \\cdots, x_{n-1}) \\\\ &amp;= \\prod_{i=1}^{n} p(x_i|x_1, x_2, \\cdots, x_{i-1}) \\end{align} \\] <ul> <li> <p>\\(x\\) can be any representation:</p> <p>\u5e76\u4e0d\u8981\u6c42\u662f\u5e8f\u5217\u7684\u6216\u8005\u65f6\u95f4\u76f8\u5173\u7684(sequencial/temporal)</p> <p>\u4f8b\u5982\u4efb\u610f\u7ef4\u6570\u7684\u5411\u91cf</p> </li> <li> <p>\\(x\\) can be any order or partition</p> <p>order\uff1a\\(x_n\\) \u5230 \\(x_1\\) \u4e5f\u662f\u4e00\u79cd\u5408\u6cd5\u7684\u751f\u6210\u987a\u5e8f</p> <p>partition\uff1a\u6bcf\u4e2ax\u90fd\u53ef\u4ee5\u662f\u6807\u91cf\u3001\u5411\u91cf\u3001\u5f20\u91cf</p> </li> <li> <p>\\(p(\\dot|\\dot)\\) can take any form</p> <p>\u53ef\u4ee5\u662f\u5404\u79cd\u5f62\u5f0f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u79bb\u6563\u8fde\u7eed\u90fd\u662f\u652f\u6301\u7684</p> </li> </ul>"},{"location":"notes/ai/dgm/ar.html#inductive-bias","title":"Inductive Bias","text":"<p>\u5728\u4f7f\u7528Chain Rule\u65f6\uff0c\u6211\u4eec\u7684\u516c\u5f0f\u662f\u4e0d\u6d89\u53ca\u8fd1\u4f3c\u7684\uff0c\u662f\u4e00\u4e2a\u5b8c\u5168\u51c6\u786e\u7684\u8868\u8fbe\u5f62\u5f0f\uff0c\u4f46\u662f\u8fd9\u4f1a\u5bfc\u81f4\u6a21\u578b\u53c2\u6570\u7206\u70b8\ud83d\udca5\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8003\u8651\u5230\u4e00\u4e9b\u5f52\u7eb3\u504f\u7f6e</p> <p>\u901a\u5e38\u6765\u8bf4\u6bcf\u4e2ap\u90fd\u662f\u4e0d\u540c\u7684\u6620\u5c04\uff0c\u4f46\u6211\u4eec\u5f15\u5165shared architecture(RNN, CNN, Transformer)\u548cshared weight \\(\\theta\\)\u540e\u5c31\u51fa\u73b0\u4e86approximation</p>"},{"location":"notes/ai/dgm/ar.html#inference-of-ar","title":"Inference of AR","text":"<p>\u5728\u539f\u59cbChain Rule\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u63a8\u7406\u8fc7\u7a0b\uff1a</p> <p>\u5982\u679c\u6211\u4eec\u76f4\u63a5bp\u8fd9\u4e2a\u8fc7\u7a0b\uff1a</p> <p>\u8fd9\u6761\u8def\u5f84\u4f1a\u8d70\u904d\u6240\u6709\u5148\u524d\u6240\u6709\u7684outputs\uff0c\u6240\u6709\u7684sampling operation\u548c\u6240\u6709\u7684networks</p> <p>\u56e0\u6b64\u662finfeasible\u274c to train a AR following its inference graph</p>"},{"location":"notes/ai/dgm/ar.html#training","title":"Training","text":"<p>\u6211\u4eec\u91c7\u7528teacher-forcing\u7684\u65b9\u5f0f\u8fdb\u884c\u8bad\u7ec3\uff0c\u5c31\u662f\u4e0d\u8003\u8651\u5148\u524d\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u76f4\u63a5\u4f7f\u7528ground truth data</p> <ul> <li> <p>Pros\uff1a</p> <ul> <li>bp\u8def\u5f84\u77ed\u5f97\u591a</li> <li>ground truth inputs can ease training</li> </ul> </li> <li> <p>Cons\uff1a</p> <ul> <li>inconsistent\uff1a\u5728\u8bad\u7ec3\u4e0e\u63a8\u7406\u65f6\u4e0d\u4e00\u81f4\uff0c\u56e0\u4e3a\u5728\u63a8\u7406\u65f6\u6ca1\u6709ground truth\u6765\u6821\u6b63\u9519\u8bef</li> <li>distribution shift\uff1a\u4e0d\u80fd\u770b\u89c1\u81ea\u5df1\u7684\u9519\u8bef</li> </ul> </li> </ul>"},{"location":"notes/ai/dgm/ar.html#network-architecture","title":"Network Architecture","text":"<p>Autoregression is not architecture-specific\u2757\ufe0f</p> <p>\u5148\u524d\u6211\u4eec\u8ba8\u8bba\u7684\u4e1c\u897f\u90fd\u4e0d\u6d89\u53ca\u5177\u4f53\u7684\u67b6\u6784\uff0c\u73b0\u5728\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u5177\u4f53\u7684\u67b6\u6784</p>"},{"location":"notes/ai/dgm/ar.html#shared-computation","title":"Shared Computation","text":"<p>\u4e4b\u524d\u6211\u4eec\u8bf4\u53ef\u4ee5\u4f7f\u7528shared arch\u3001weight\uff0c\u73b0\u5728\u6211\u4eec\u5bf9\u795e\u7ecf\u7f51\u7edc\u5c42\u8fdb\u884cshare</p> <p>\u5982\u679c\u5bf9\u6bcf\u4e2a\\(j \\geq i\\)\uff0coutput \\(x_i\\) not depend on \\(x_j\\)(\u5c31\u662f\u8f93\u51fa\u53ea\u4f9d\u8d56\u4e4b\u524d\u800c\u4e0d\u4f9d\u8d56\u4e4b\u540e)</p>"},{"location":"notes/ai/dgm/ar.html#rnn","title":"RNN","text":"<p>Recurrent Neural Network</p> <p>\u6784\u5efa\u4e00\u4e2aRNN\u7684\u6b65\u9aa4\u53ef\u4ee5\u8fd9\u6837\u8868\u793a\uff1a</p> One RNN UnitUnfold in \"time\"Go deep <p> </p> <p> </p> <p> </p> <p>RNN\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1akeep a summary and recursively update it</p> <p>\u5728\u8fd9\u91cchidden layer \\(h_i\\)\u5c31\u662f\u90a3\u4e2asummary</p> <p>\u6211\u4eec\u8fdb\u884c\u66f4\u65b0\u7684\u8fc7\u7a0b\u5c31\u662f\uff1a</p> \\[ h_{t+1} = \\sigma(W_{hh}h_t + W_{xh}x_{t+1}) \\] <p>\u7136\u540e\u8fdb\u884c\u9884\u6d4b\uff1a</p> \\[ o_{t+1} = W_{hy}h_{t+1} \\] <p>\u4f46\u662f\u8981\u6ce8\u610f\u6211\u4eec\u7684summary\u662f\u9700\u8981\u8fdb\u884c\u521d\u59cb\u5316\u7684\\(h_0 = b_0\\)</p> <p>\u6700\u7ec8\u6211\u4eec\u5bf9\u4e09\u4e2a\u77e9\u9635\u8fdb\u884c\u8bad\u7ec3\uff0c\u8fd9\u4e09\u4e2a\u77e9\u9635\u7684\u53c2\u6570\u5173\u4e8en\u662f\u5e38\u6570\u7684</p> Example <p>Character RNN(Andrej Karpathy)</p> <p> </p> <p> </p> <ul> <li> <p>Pros:</p> <ul> <li>\u5bf9\u4efb\u610f\u957f\u5ea6\u90fd\u9002\u7528</li> <li>\u901a\u7528\u6027\uff1a\u5bf9\u4efb\u610fcomputable function\u90fd\u5b58\u5728\u4e00\u4e2afinite RNN</li> </ul> </li> <li> <p>Cons:</p> <ul> <li>\u9700\u8981\u6392\u5e8f</li> <li>Sequencial likelihood evaluation \u8bad\u7ec3\u65f6\u5f88\u6162\uff08\u56e0\u4e3a\u65e0\u6cd5\u5e76\u884c\u8ba1\u7b97\uff09</li> <li>\u751f\u6210\u65f6\u662f\u5e8f\u5217\u751f\u6210</li> <li>\u5bf9\u957f\u5e8f\u5217\u4f1a\u6709\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898</li> </ul> </li> </ul>"},{"location":"notes/ai/dgm/ar.html#cnn","title":"CNN","text":"<p>Convolutional Neural Network</p> <p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4f9d\u8d56\u7684\u662f\u6bcf\u4e2a\u201c\u50cf\u7d20\u201d\u7684\u5c40\u90e8\u6027\uff0c\u4e5f\u5c31\u662f\u4ed6\u4eec\u4e0e\u5468\u8fb9\u7a7a\u95f4\u7684\u76f8\u4e92\u4f9d\u8d56\u5173\u7cfb\uff0c\u6211\u7684\u7406\u89e3\u662f\u5377\u79ef\u64cd\u4f5c\u5c31\u662f\u5bf9\u539f\u59cb\u6570\u636e\u8fdb\u884cdown sampling\u7684\u8fc7\u7a0b\uff0c\u8ba9\u6570\u636e\u4e2d\u8574\u542b\u7684\u4f9d\u8d56\u5173\u7cfb\u66f4\u52a0\u660e\u663e\uff0c\u8fd9\u5176\u4e2d\u91c7\u7528\u7684\u5404\u7c7b\u64cd\u4f5c\u5982\u5377\u79ef\u3001\u6c60\u5316\u3001\u6fc0\u6d3b\u51fd\u6570\u7b49\u90fd\u662f\u4e3a\u4e86\u8fd9\u4e2a\u76ee\u7684\u3002</p> <p>\u5728AR\u4e2d\uff0c\u6211\u4eec\u8fd9\u6837\u6784\u5efa</p>"},{"location":"notes/ai/dgm/ar.html#attention","title":"Attention","text":""},{"location":"notes/ai/dgm/diffusion.html","title":"Diffusion Models","text":"<p>Abstract</p> <p>\u8fd9\u4e00\u8282\u7684\u5185\u5bb9\u6211\u5148\u770b\u4e86CS236\u7684\u90e8\u5206\uff0cStefano\u5bf9Diffusion\u7684\u8bb2\u89e3\u4e3b\u8981\u5efa\u7acb\u5728Score-based Models\u7684\u57fa\u7840\u4e0a\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u7406\u89e3\u6269\u6563\u6a21\u578b\u7684\u89c6\u89d2\uff0c\u7136\u540e\u6211\u770b\u4e86MIT\u76846.S184\u5bf9\u4e8e\u8fd9\u90e8\u5206\u7684\u8bb2\u89e3\u3002</p>"},{"location":"notes/ai/dgm/diffusion.html#intro","title":"Intro","text":"<p>\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u5728Score-based Models\u4e2d\u4ecb\u7ecd\u7684\u5206\u6570\u6a21\u578b\u65b9\u6cd5\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5206\u6570\u6765\u5bf9\u6570\u636e\u5206\u5e03\u8fdb\u884c\u8bc4\u4ef7\uff0c\u5728denoising score matching\u4e2d\uff0c\u901a\u8fc7\u52a0\u566a\u8fc7\u7a0b\uff0c\u5f97\u5230\u4e00\u4e2a\u6613\u4e8e\u91c7\u6837\u7684\u6570\u636e\uff0c\u518d\u901a\u8fc7\u53bb\u566a\u8fc7\u7a0b\uff0c\u5f97\u5230\u4e00\u4e2a\u53bb\u566a\u540e\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u53bb\u566a\u540e\u7684\u6570\u636e\u5c31\u662f\u6211\u4eec\u7684\u76ee\u6807\u6570\u636e\u3002</p> <p>\u5728Diffusion Models\u4e2d\uff0c\u6211\u4eec\u4e5f\u505a\u4e86\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff1a</p> <p>\u63a5\u4e0b\u6765\u7684\u5de5\u4f5c\u5c31\u662f\u770b\u5982\u4f55\u91cd\u65b0\u5b9a\u4e49\u8fd9\u4e2a\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u7ec6\u8282\uff0c\u5177\u4f53\u5230\u8ba1\u7b97\u5c42\u9762\u3002</p>"},{"location":"notes/ai/dgm/diffusion.html#noising-process","title":"Noising Process","text":"<p>\u8fd9\u91cc\u57fa\u672c\u4e0a\u4e0edenoising score matching\u7c7b\u4f3c</p> \\[ q(x_t|x_{t-1}) = \\mathcal{N}(x_t; \\sqrt{1-\\beta_t}x_{t-1}, \\beta_t\\mathbf{I}) \\] <p>\u540c\u65f6\u8fd9\u4e00\u6b65\u9aa4\u4e5f\u53ef\u4ee5\u91c7\u7528multi-step\u7684\u65b9\u5f0f\uff0c\u5373\uff1a</p> \\[ q(x_t|x_0) = \\mathcal{N}(x_t; \\sqrt{\\bar{\\alpha}_t}x_0, (1-\\bar{\\alpha}_t)\\mathbf{I}) \\] <p>\u5176\u4e2d\uff0c\\(\\bar{\\alpha}_t = \\prod_{i=1}^t (1-\\beta_i)\\)\u3002</p>"},{"location":"notes/ai/dgm/diffusion.html#diffusion-process","title":"Diffusion Process","text":"<p>\u6309\u7167\u601d\u8def\u8fdb\u884c\u4e0b\u53bb\uff0c\u6211\u4eec\u5728\u9006\u5411\u8fc7\u7a0b\u4e2d\u53ea\u9700\u8981\u505a iteratively sample from \\(q(x_{t-1}|x_t)\\)\uff0c\u4f46\u95ee\u9898\u662f\uff1a</p> <p>\u8fd9\u4e2a\u771f\u5b9e\u8ba1\u7b97\u91cf\u975e\u5e38\u5927\uff08\u7528\u8d1d\u53f6\u65af\u5b9a\u7406\u5c55\u5f00\u53d1\u73b0\u6211\u4eec\u9700\u8981\u8ba1\u7b97t-1\u548ct\u65f6\u523b\u7684\u8fb9\u7f18\u6982\u7387\u5206\u5e03\uff0c\u8fd9\u9700\u8981\u5bf9\u524d\u9762\u7684\u6240\u6709\u65f6\u523b\u8fdb\u884c\u79ef\u5206\uff09</p> <p>\u6211\u4eec\u7684\u89e3\u51b3\u63aa\u65bd\u662f\u5b66\u4e00\u4e2a\u53d8\u5206\u8fd1\u4f3c\\(p_\\theta(x_{t-1}|x_t)\\)\u6765\u5bf9\u771f\u5b9e\u5206\u5e03\u8fdb\u884c\u8fd1\u4f3c</p> <p>\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8fd1\u4f3c\uff1f</p> <p>\u867d\u7136\\(q(x_{t-1}|x_t)\\)\u662f\u672a\u77e5\u7684\uff0c\u4f46\u901a\u8fc7\u6570\u5b66\u63a8\u5bfc\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u5728\u7ed9\u5b9a\u4e86\u5148\u9a8c\\(x_0\\)\u7684\u60c5\u51b5\u4e0b\uff0c\\(q(x_{t-1}|x_t, x_0)\\)\u4f1a\u53d8\u6210\u4e00\u4e2a\u53ef\u8ba1\u7b97\u7684\u9ad8\u65af\u5206\u5e03\uff0c\u4ed6\u7684\u65b9\u5dee\u548c\u5747\u503c\u90fd\u53ef\u4ee5\u7528\u7ed9\u5b9a\u7684\\(\\beta_t\\)\u6765\u5f97\u5230</p> \u8bc1\u660e <p>\u5367\u69fd\u597d\u591a\u516c\u5f0f</p> <p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u8bc1\u660e\\(q(x_{t-1}|x_t, x_0)\\)\u662f\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\uff0c\u5e76\u4e14\u4ed6\u7684\u65b9\u5dee\u548c\u5747\u503c\u90fd\u53ef\u4ee5\u7528\u7ed9\u5b9a\u7684\\(\\beta_t\\)\u6765\u5f97\u5230</p> <p>\u7528\u8d1d\u53f6\u65af\u5c55\u5f00\u8fd9\u4e2a\u5f0f\u5b50\uff1a</p> \\[ q(x_{t-1}|x_t, x_0) = \\frac{q(x_t|x_{t-1}, x_0)q(x_{t-1}|x_0)}{q(x_t|x_0)} \\] <p>\u7531\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u6027\u8d28\uff0c\u6211\u4eec\u77e5\u9053\\(x_t\\)\u53ea\u4e0e\\(x_{t-1}\\)\u6709\u5173\uff0c\u4e0e\\(x_0\\)\u65e0\u5173\uff0c\u6240\u4ee5\\(q(x_t|x_{t-1}, x_0) = q(x_t|x_{t-1})\\)\uff0c\u540c\u65f6\\(q(x_t|x_0)\\)\u4e0e\\(x_{t-1}\\)\u65e0\u5173\uff0c\u6240\u4ee5\u5206\u6bcd\u5f53\u4f5c\u5e38\u6570\u6211\u4eec\u4e0d\u770b</p> <p>\u8fd9\u6837\u6b64\u65f6\u76ee\u6807\u6b63\u6bd4\u4e8e\u8fd9\u4e24\u4e2a\u90e8\u5206\uff1a</p> \\[ q(x_t|x_{t-1}) = \\mathcal{N}(x_t; \\sqrt{\\alpha_{t}}x_{t-1}, (1-\\alpha_{t})\\mathbf{I}) \\tag{1} \\] \\[ q(x_{t-1}|x_0) = \\mathcal{N}(x_{t-1}; \\sqrt{\\bar{\\alpha}_{t-1}}x_0, (1-\\bar{\\alpha}_{t-1})\\mathbf{I}) \\tag{2} \\] <p>\u56e0\u4e3a\u4e00\u4e2a\u6b63\u6001\u5206\u5e03\u7684pdf\u7684\u6307\u6570\u4e0a\u6ee1\u8db3\uff1a\\(\\exp(-\\frac{(x-\\mu)^2}{2\\sigma^2}) = \\exp(-\\frac{x^2}{2\\sigma^2} + \\frac{x\\mu}{\\sigma^2} - \\frac{\\mu^2}{2\\sigma^2})\\)\uff0c\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u53ea\u9700\u8981\u5f97\u5230\u4e8c\u6b21\u9879\u548c\u4e00\u6b21\u9879\u7cfb\u6570\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u5206\u5e03\u7684\u5747\u503c\u548c\u65b9\u5dee</p> <p>\u5c55\u5f00\u540e\u6211\u4eec\u5f97\u5230\u6307\u6570\u90e8\u5206\u4e3a\uff1a</p> \\[ -\\frac{1}{2}\\left(\\left(\\frac{\\alpha_t}{\\beta_t}+\\frac{1}{1-\\bar{\\alpha}_{t-1}}\\right) \\mathbf{x}_{t-1}^2-\\left(\\frac{2 \\sqrt{\\alpha_t}}{\\beta_t} \\mathbf{x}_t+\\frac{2 \\sqrt{\\bar{\\alpha}_{t-1}}}{1-\\bar{\\alpha}_{t-1}} \\mathbf{x}_0\\right) \\mathbf{x}_{t-1}+C\\left(\\mathbf{x}_t, \\mathbf{x}_0\\right)\\right) \\] <p>\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u80fd\u5f97\u5230\u65b9\u5dee\u548c\u5747\u503c\uff1a</p> \\[ \\begin{aligned} \\tilde\\beta_t &amp;= \\frac{(1-\\bar{\\alpha}_{t-1})(1-\\alpha_t)}{1-\\bar{\\alpha}_t} \\\\ \\tilde\\mu_t &amp;= \\frac{\\sqrt{\\alpha_t}\\left(1-\\bar{\\alpha}_{t-1}\\right)}{1-\\bar{\\alpha}_t} \\mathbf{x}_t+\\frac{\\sqrt{\\bar{\\alpha}_{t-1}} \\beta_t}{1-\\bar{\\alpha}_t} \\mathbf{x}_0 ; \\text{    \u8fd9\u65f6\u53ef\u4ee5\u4ee3\u5165} \\mathbf{x}_0 = \\frac{1}{\\sqrt{\\bar{\\alpha}_{t}}} (\\mathbf{x}_t - \\sqrt{1-\\bar{\\alpha}_t}\\epsilon_t) \\\\ &amp;= \\frac{1}{\\sqrt{\\alpha_t}} \\left(\\mathbf{x}_t + \\frac{1-\\alpha_t}{\\sqrt{1-\\bar{\\alpha}_t}} \\epsilon_t\\right) \\end{aligned} \\] <p>\u6210\u529f\u8bc1\u660e\uff1a\\(q(x_{t-1}|x_t, x_0) \\sim \\mathcal{N}(x_{t-1}; \\tilde\\mu_t, \\tilde\\beta_t\\mathbf{I})\\)</p> <p>\u5e76\u4e14\u4e5f\u53ef\u4ee5\u663e\u7136\u770b\u51fa\uff0c\u4ed6\u4eec\u90fd\u662f\u5173\u4e8e\u7ed9\u5b9a\u53c2\u6570\u7684\u53ef\u8ba1\u7b97\u51fd\u6570</p> <p>\u6240\u4ee5\u8fd9\u542f\u53d1\u6211\u4eec\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b66\u4e60\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6765\u8fd1\u4f3c\\(\\tilde\\mu_t\\)\u548c\\(\\tilde\\beta_t\\)\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u53d8\u5206\u8fd1\u4f3c\\(p_\\theta(x_{t-1}|x_t)\\)\uff08\u5728\u5b9e\u9645\u60c5\u51b5(\u6bd4\u5982DDPM)\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b66\u4e60\\(\\tilde\\mu_t\\)\uff09\uff1a</p> \\[ p_\\theta(x_{t-1}|x_t) = \\mathcal{N}(x_{t-1}; \\mu_\\theta(x_t, t), \\sigma_t^2\\mathbf{I}) \\] <p>\u8fdb\u800c\u5f97\u5230\u6700\u7ec8\u7684joint distribution\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u7ed3\u679c\uff1a</p> \\[ p_\\theta(x_{0:T}) = p(x_T) \\prod_{t=1}^T p_\\theta(x_{t-1}|x_t) \\] <p>\u8bfe\u4e0aStefano\u8bf4\u7ecf\u8fc7\u8bc1\u660e\uff0c\u5982\u679c\u6211\u4eec\u505a\u7684\u662f\u6717\u4e4b\u4e07\u91c7\u6837\uff0c\u8fd9\u91cc\u7684\\(\\mu_\\theta\\)\u751a\u81f3\u5c31\u662fsm\u4e2d\u7684score\uff08wtf?\uff09\u539f\u56e0\u4e4b\u540e\u4f1a\u8bf4\u5230\u3002</p>"},{"location":"notes/ai/dgm/diffusion.html#training","title":"Training","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u4e24\u4e2a\u6a21\u5757\uff0cencoder &amp; decoder</p> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u8ba8\u8bba\u4e00\u4e0btraining\u7684\u95ee\u9898</p> <p>\u5982\u679c\u53ea\u5bf9Diffusion\u8fc7\u7a0b\u7684\u4e00\u6b65\u8fdb\u884c\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e00\u8fc7\u7a0b\u5f88\u50cf\u662fVAE\u5bf9\u9690\u53d8\u91cf\u89e3\u7801\u7684\u8fc7\u7a0b\uff1a</p> <p>\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u4e0eELBO\u7c7b\u4f3c\u7684\u53d8\u5206\u4e0b\u754c\u6765\u8fdb\u884c\u8bad\u7ec3</p> <p>\u6700\u539f\u59cb\u7684VAE loss\u662f\uff1a</p> <p>\u7136\u540e\u6211\u4eec\u770b\u589e\u52a0latent\u5c42\u6570\u540e\uff1a</p> <p>\u6309\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5c42\u6570\u4e3aT\u7684Diffusion Models\u7684loss\uff1a</p> <p>Loss of Diffusion Models</p> \\[ \\mathbb{E}_{q(\\mathbf{x}_{0})}\\left[-\\log p_{\\theta}(\\mathbf{x}_{0})\\right]\\leq\\mathbb{E}_{q(\\mathbf{x}_{0})q(\\mathbf{x}_{1:T}|\\mathbf{x}_{0})}\\left[-\\log\\frac{p_{\\theta}(\\mathbf{x}_{0:T})}{q(\\mathbf{x}_{1:T}|\\mathbf{x}_{0})}\\right]=:L \\] \u63a8\u5bfc <p> </p> <p>\u4f46\u662f\u73b0\u5728\u5f97\u5230\u7684\u8fd9\u4e2aloss\u662f\u5f88\u96be\u8ba1\u7b97\u7684\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884ccomputable\u8f6c\u6362\uff1a</p> <p> </p> <p>\u73b0\u5728\u6211\u4eec\u5f97\u5230\u7684\u8fd9\u4e09\u79cdL\u4e2d\\(L_0\\)\u662f\u5e38\u91cf\uff0c\u800c\\(L_T\\)\u4e2d\u7684\\(x_T\\)\u662f\u5df2\u77e5\u7684\uff0c\u6211\u4eec\u5ffd\u7565\u6389\u6700\u540e\u4e00\u9879\uff0c\u5c06\u7b2c\u4e00\u9879\u8bbe\u7f6e\u4e3a\u9ad8\u65af\u5206\u5e03</p> <p>\u73b0\u5728\u9700\u8981\u5904\u7406\\(L_t\\)\uff0c\u5bf9\u5176\u8fdb\u884c\u53c2\u6570\u5316\uff1a</p> <ul> <li>\u5bf9\\(\\mu_\\theta\\)\u8fdb\u884c\u53c2\u6570\u5316\uff0c\u56e0\u4e3a\u5728\u6bcf\u4e00\u6b65\u6211\u4eec\u662f\u77e5\u9053\\(x_t\\)\u7684\uff0c\u6240\u4ee5\u5c31\u662f\u5bf9\u566a\u58f0\\(\\epsilon_t\\)\u8fdb\u884c\u53c2\u6570\u5316\uff0c\u8fd9\u65f6\u7684Loss\u88ab\u53c2\u6570\u5316\u4e3aminimize \\(\\mu_\\theta\\) \u548c \\(\\tilde \\mu_t\\)\uff0c\u5e76\u6700\u7ec8\u5316\u7b80\u4e3a\uff1a</li> </ul> \\[ L_t =\\mathbb{E}_{\\mathbf{x}_0,\\mathbf{\\epsilon}}{\\left[\\frac{(1-\\alpha_t)^2}{2\\alpha_t(1-\\bar{\\alpha}_t)\\|\\mathbf{\\Sigma}_\\theta\\|_2^2}\\|\\mathbf{\\epsilon}_t-\\mathbf{\\epsilon}_\\theta(\\sqrt{\\bar{\\alpha}_t}\\mathbf{x}_0+\\sqrt{1-\\bar{\\alpha}_t}\\mathbf{\\epsilon}_t,t)\\|^2\\right]} \\] \u63a8\u5bfc <p>\u8fd9\u91cclilian\u7684\u535a\u5ba2\u4e2d\u76f4\u63a5\u7ed9\u51fa\u4e86\u5e26\u5165\u8fd1\u4f3c\u7684\\(\\mu_\\theta\\)\u7684\u7ed3\u679c\uff0c\u6211\u6765\u7a0d\u5fae\u63a8\u5bfc\u4e00\u4e0b\uff0c\u4e3b\u8981\u662f\u5229\u7528\u4e86KL\u5728\u8ba1\u7b97\u4e24\u4e2a\u9ad8\u65af\u5206\u5e03\u65f6\u7684\u6027\u8d28\uff0c\u5373\uff1a</p> \\[ D_{KL}(P_{1}\\mid\\mid P_{2})=\\frac{1}{2}\\left[\\log\\frac{\\det(\\mathbf{\\Sigma}_{2})}{\\det(\\mathbf{\\Sigma}_{1})}-d+\\mathrm{tr}(\\mathbf{\\Sigma}_{2}^{-1}\\mathbf{\\Sigma}_{1})+(\\mathbf{\\mu}_{2}-\\mathbf{\\mu}_{1})^{T}\\mathbf{\\Sigma}_{2}^{-1}(\\mathbf{\\mu}_{2}-\\mathbf{\\mu}_{1})\\right] \\] <p>\u5176\u4e2dd\u662f\u7ef4\u5ea6\uff0c\u56e0\u4e3a\u5728DDPM\u4e2d\u65b9\u5dee\u88ab\u56fa\u5b9a\u4e0d\u5b66\u4e60\u4e86\uff0c\u6a21\u578b\u4e0e\u771f\u5b9e\u5206\u5e03\u65b9\u5dee\u76f8\u7b49\u540e\uff0c\u4e0a\u5f0f\u5c31\u88ab\u7b80\u5316\uff1a</p> \\[ \\begin{gathered}D_{KL}(q\\mid\\mid p_\\theta)=\\frac{1}{2}\\left[0-d+d+(\\mathbf{\\mu}_\\theta-\\tilde{\\mathbf{\\mu}}_t)^T(\\tilde{\\beta}_t\\mathbf{I})^{-1}(\\mathbf{\\mu}_\\theta-\\tilde{\\mathbf{\\mu}}_t)\\right]\\\\=\\frac{1}{2\\tilde{\\beta}_t}(\\mathbf{\\mu}_\\theta-\\tilde{\\mathbf{\\mu}}_t)^T(\\mathbf{\\mu}_\\theta-\\tilde{\\mathbf{\\mu}}_t)\\\\=\\frac{1}{2\\tilde{\\beta}_t}\\|\\mathbf{\\mu}_\\theta(\\mathbf{x}_t,t)-\\tilde{\\mathbf{\\mu}}_t(\\mathbf{x}_t,\\mathbf{x}_0)\\|^2\\end{gathered} \\] <p>\u8fd9\u65f6\u6211\u4eec\u518d\u5e26\u5165\\(\\mu_\\theta\\)\u548c\\(\\tilde\\mu_t\\)\u5373\u53ef</p> <p>\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u4e2d\uff0cDDPM\u53d1\u73b0\u8bad\u7ec3\u76ee\u6807\u53ef\u4ee5\u8fdb\u884c\u5316\u7b80\uff0c\u653e\u5f03\u566a\u58f0\u8ddd\u79bb\u524d\u7684\u90a3\u4e2a\u6743\u91cd\uff0c\u6240\u4ee5\u6700\u7ec8\u6211\u4eec\u7684loss\u88ab\u7b80\u5316\u4e3a\uff1a</p> \\[ L_{\\text{simple}} = \\mathbb{E}_{t\\sim[1,T],\\mathbf{x}_0,\\mathbf{\\epsilon}_t}\\left\\lfloor\\|\\mathbf{\\epsilon}_t-\\mathbf{\\epsilon}_\\theta(\\sqrt{\\bar{\\alpha}_t}\\mathbf{x}_0+\\sqrt{1-\\bar{\\alpha}_t}\\mathbf{\\epsilon}_t,t)\\|^2\\right\\rfloor \\] <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5c31\u63a8\u5bfc\u51fa\u4e86Diffusion Models\u539f\u6587\u7b97\u6cd5\u4e2d\u7684\u5404\u9879\u5185\u5bb9\uff1a</p>"},{"location":"notes/ai/dgm/diffusion.html#relation-to-score-matching","title":"Relation to Score Matching","text":""},{"location":"notes/ai/dgm/energy.html","title":"Energy-based Models","text":"<p> \u7ea6 1748 \u4e2a\u5b57  6 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p> </p>"},{"location":"notes/ai/dgm/energy.html#intro","title":"Intro","text":"<p>EBMs \u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>Flexible model arch</li> <li>Stable training</li> <li>Flexible composition</li> </ul> <p>\u8fd9\u70b9\u4e0e\u4e4b\u524d\u7684\u4e24\u7c7b\u6a21\u578b\u4e0d\u540c\uff1a</p> <p>\u8fdb\u884c\u4e00\u4e2a\u5927\u4f53\u4e0a\u7684\u533a\u5206\u7684\u8bdd\uff0c\u5148\u524d\u5b66\u4e60\u7684</p> <ul> <li> <p>VAE\u3001Flow\u3001AR\u90fd\u5c5e\u4e8e\u57fa\u4e8e\u4f3c\u7136\u7684\u6a21\u578b\uff0c\u4ed6\u4eec\u7684\u7279\u70b9\u662f\u5177\u6709\u4e25\u683c\u7684\u6982\u7387\u89e3\u91ca\u548c\u8bad\u7ec3\u76ee\u6807\uff0c\u4f46\u662f\u6a21\u578b\u7ed3\u6784\u76f8\u5bf9\u56fa\u5b9a\uff0c\u96be\u4ee5\u7075\u6d3b\u8c03\u6574\u3002</p> </li> <li> <p>GANs\u5c5e\u4e8eimplicit models\uff0c\u4ed6\u4e0d\u5177\u6709\u6982\u7387\u89e3\u91ca\uff0c\u8fd9\u6837\u4f7f\u5f97\u6a21\u578b\u7684\u67b6\u6784\u66f4\u52a0\u7075\u6d3b\uff0c\u4f46\u540c\u65f6\u8bad\u7ec3\u4e0d\u592a\u65b9\u4fbf</p> </li> </ul> <p>EBMs\u4e5f\u662f\u57fa\u4e8e\u4f3c\u7136\u7684\u6a21\u578b</p>"},{"location":"notes/ai/dgm/energy.html#recap","title":"Recap","text":"<p>\u56de\u5fc6\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684\u6982\u7387\u6a21\u578b\uff0c\u6211\u4eec\u6784\u5efa\u7684pdf\u6709\u4ee5\u4e0b\u4e24\u70b9\u8981\u6c42\uff1a</p> <ul> <li>Non-negative</li> <li>Sum to 1</li> </ul> <p>\u901a\u5e38\u6765\u8bf4\u6784\u5efa\u4e00\u4e2a\u975e\u8d1f\u7684pdf\u662f\u5bb9\u6613\u7684\uff0c\u7528\u5e73\u65b9\u3001\u6307\u6570\u3001\u7edd\u5bf9\u503c\u90fd\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5f52\u4e00\u5316\u5e76\u4e0d\u7b80\u5355\uff0c\u9700\u8981\u8ba1\u7b97\u79ef\u5206</p> Common usage <ul> <li> <p>\\(g_{\\mu, \\sigma}(x) = e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\rightarrow \\sqrt{2\\pi\\sigma^2}\\)</p> </li> <li> <p>\\(g_{\\lambda}(x) = e^{-\\lambda x} \\rightarrow \\frac{1}{\\lambda}\\)</p> </li> <li> <p>Exponential family: Normal, Poisson, beta, gamma, etc</p> <ul> <li>\\(g_{\\theta}(x) = h(x) \\exp(\\theta \\cdot T(x)) \\rightarrow \\exp{A(\\theta)}\\) where \\(A(\\theta) = \\log \\int h(x) \\exp(\\theta \\cdot T(x)) dx\\)</li> </ul> </li> </ul> <p>\u5728\u8fdb\u884c\u5f52\u4e00\u5316\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u7ec4\u5408\u8fd9\u4e9b\u51fd\u6570\u8fdb\u884c\u5efa\u6a21\uff0c\u5c31\u6709\u4e86\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u6a21\u578b\u90fd\u662f\u5c06normalization constant\u786e\u5b9a\u4e3a1\uff0c\u800c\u5728EBMs\u4e2d\uff0c\u6211\u4eec\u4e0d\u4ec5\u4e0d\u4f1a\u63a7\u5236\u8fd9\u4e2a\u5e38\u6570\uff0c\u751a\u81f3\u4e0d\u4f1a\u7cbe\u786e\u7b97\u51fa\u6765\u5b83</p>"},{"location":"notes/ai/dgm/energy.html#build","title":"Build","text":"\\[ p_{\\theta}(x) = \\frac{1}{Z(\\theta)} e^{f_\\theta(x)} \\] <p>\\(Z(\\theta) = \\int e^{f_\\theta(x)} dx\\) is called the Partition Function</p> <p>\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4f7f\u7528\u4e86\u6307\u6570\u5f62\u5f0f\uff0c\u6709\u4ee5\u4e0b\u539f\u56e0\uff1a</p> <ul> <li>\u53ef\u4ee5\u6355\u83b7\u5de8\u5927\u7684\u6982\u7387\u53d8\u5316\uff0c\u5e76\u4e14\u4e00\u822c\u662f\u4f7f\u7528log-probability</li> <li>\u5f88\u591a\u7684\u6982\u7387\u5206\u5e03\u90fd\u662f\u6307\u6570\u65cf\u7684</li> <li>\u6ee1\u8db3\u4e00\u4e9b\u7269\u7406\u5b9a\u5f8b<ul> <li>\u5b9e\u9645\u4e0aenergy\u8fd9\u4e2a\u540d\u5b57\u7684\u6765\u6e90\u5c31\u662f\u7269\u7406\u5b66\uff08\u6700\u5927\u71b5\u3001\u70ed\u4e8c\u5b9a\u5f8b\uff09\uff0c\u5728\u8fd9\u91cc\u5c31\u662f\u6307\\(-f_\\theta(x)\\)</li> </ul> </li> </ul> <p>Pros: extreme flexibility(any function \\(f_\\theta\\) can be used)</p> <p>Cons: </p> <ul> <li>Z\u5982\u679c\u96be\u4ee5\u8ba1\u7b97\uff0c\u90a3\u4e48sampling\u5c31\u5f88\u96be\u8fdb\u884c</li> <li>No feature learning</li> <li>Curse of dimensionality</li> </ul>"},{"location":"notes/ai/dgm/energy.html#application","title":"Application","text":"<p>\u867d\u7136\u8fdb\u884c\u5355\u4e2a\u6837\u672c\u7684\u91c7\u6837\u5f88\u96be\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e24\u4e2a\u6837\u672c\u70b9\u7684\u6bd4\u8f83\u4f1a\u6bd4\u8f83\u5bb9\u6613\uff0c\u56e0\u4e3a\u505a\u6bd4\u503c\u540e\uff0cZ\u5c31\u7ea6\u53bb\u4e86\uff1a</p> \\[ \\frac{p_\\theta(x)}{p_\\theta(x')} = exp(f_\\theta(x) - f_\\theta(x')) \\]"},{"location":"notes/ai/dgm/energy.html#training","title":"Training","text":"<p>\u5728\u524d\u9762\u7684\u5185\u5bb9\u4e2d\u6211\u4eec\u8ba8\u8bba\u4e86EBMs\u7684\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5229\u7528EBMs\u8fdb\u884c\u4e24\u4e2a\u6837\u672c\u70b9\u6bd4\u8f83\uff0c\u4f46\u8fd9\u662f\u5efa\u7acb\u5728\u5df2\u7ecf\u6709\u4e00\u4e2a\u8bad\u7ec3\u597d\u7684EBM\u57fa\u7840\u4e0a\uff0c\u73b0\u5728\u6211\u4eec\u7684\u95ee\u9898\u662f\u5982\u4f55\u8bad\u7ec3\u4e00\u4e2aEBM\uff0c\u4e5f\u5c31\u662fmaximize \\(p_\\theta(x)\\)</p> <p>\u4e00\u4e2a\u76f4\u89c2\u7684\u611f\u53d7\u5c31\u662f\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u5206\u6570\uff0c\u5982\u679c\u6211\u4eec\u80fd\u589e\u5927\u5206\u5b50\uff0c\u51cf\u5c0f\u5206\u6bcd\uff0c\u90a3\u4e48\u5206\u6570\u503c\u5c31\u4f1a\u589e\u5927\uff0c\u8fd9\u5c31\u662f Contrastive Divergence</p> \\[ \\max_\\theta \\nabla_\\theta (f_\\theta(x_{train}) - f_\\theta(x_{sample})) \\] Prove <p> </p> <p>\u6700\u540e\u7684\u90a3\u6b65\u8fd1\u4f3c\u5c31\u662fsample\u7684MC\u8fd1\u4f3c</p>"},{"location":"notes/ai/dgm/energy.html#sampling","title":"Sampling","text":"<p>\u73b0\u5728\u7684\u95ee\u9898\u6765\u5230\u6211\u4eec\u5e94\u8be5\u5982\u4f55sample\uff1a</p> <p>\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u8ba1\u7b97\\(Z\\)\uff0c\u6240\u4ee5\u8fd8\u662f\u91c7\u53d6\u6bd4\u8f83\u7684\u601d\u60f3\uff1a</p> <pre>\n    \\begin{algorithm}\n    \\caption{Markov Chain Monte Carlo(MCMC) for EBM}\n    \\begin{algorithmic}\n    \\REQUIRE initial parameters\n    \\STATE Initialize $x^0$ randomly, set $t = 0$\n    \\REPEAT \n    \\STATE $x' \\gets x^t + \\text{noise}$ \\COMMENT{Perturb current solution}\n    \\IF{$f_\\theta(x') &gt; f_\\theta(x^t)$}\n        \\STATE $x^{t+1} \\gets x'$ \\COMMENT{Always accept better solutions}\n    \\ELSE\n        \\STATE $\\text{Accept } x^{t+1} = x' \\text{ with probability } \\exp(f_\\theta(x') - f_\\theta(x^t))$\n    \\ENDIF\n        \\STATE $t \\gets t + 1$ \n    \\UNTIL{t = T} \n\n    \\end{algorithmic}\n    \\end{algorithm}\n</pre> <p>\u8fd9\u6709\u70b9\u50cf\u6a21\u62df\u9000\u706b\uff0c\u4e3a\u4e86\u907f\u514d\u505c\u7559\u5728\u4e00\u4e2alocal\uff0c\u6211\u4eec\u53c2\u8003\u4e86\u4e00\u4e00\u4e2a\u6982\u7387\u9009\u62e9\u90a3\u4e2a\u8f83\u5dee\u7684sample</p> <ul> <li> <p>\u7406\u8bba\u4e0a\u6765\u8bf4\\(x^T\\)\u4f1a\u6536\u655b\u5230\\(p_\\theta(x)\\)(\u5728\\(T \\rightarrow \\infty\\)\u65f6)</p> <ul> <li>\u56e0\u4e3a\u4ed6\u6ee1\u8db3\u4e00\u4e2a\u53ebdetailed balance\u7684\u6761\u4ef6\uff1a\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u5f0f\u5b50\u5728x\u8fbe\u5230\\(p_\\theta(x)\\)\u65f6\uff0cx'\u4e0d\u4f1a\u518d\u8fdb\u884c\u66f4\u65b0</li> </ul> \\[ p_\\theta(x) \\cdot T(x, x') = p_\\theta(x') \\cdot T(x', x) \\] <p>\u8fd9\u91cc\\(T(x', x)\\)\u662f\u6307x\u5230x'\u7684transitioning\u6982\u7387</p> </li> <li> <p>\u5b9e\u9645\u4e2d\uff0c\u9700\u8981\u4e00\u4e2a\u5927\u91cf\u7684\u5faa\u73af\u624d\u80fd\u8fbe\u5230\u6536\u655b</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5373\u4f7f\u6211\u4eec\u62e5\u6709\u4e00\u4e2a\u5f88\u597d\u7684\\(f_\\theta\\)\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u5927\u91cf\u7684\u7cbe\u529b\u53bbsample\uff0c\u5e76\u4e14\u6211\u4eec\u770b\u5230\uff0c\u4f7f\u7528contrasive divergence\u8fdb\u884c\u7684\u8bad\u7ec3\u7684\u65f6\u5019\u672c\u8eab\u5c31\u662f\u4e00\u4e2asample\u7684\u8fc7\u7a0b\uff0c\u6240\u4ee5\u5373\u4f7f\u662f\u8bad\u7ec3\u4e5f\u662f\u5341\u5206\u6602\u8d35\u7684</p> </li> </ul> <p>\u4e00\u4e2a\u6539\u8fdb\uff1a</p> <pre>\n    \\begin{algorithm}\n    \\caption{unadjusted Langevin MCMC}\n    \\begin{algorithmic}\n    \\REQUIRE initial parameters\n    \\STATE Initialize $x^0 \\sim \\pi(x)$ randomly, set $t = 0$\n    \\REPEAT\n        \\STATE Add random noise $z \\sim N(0, 1)$\n        \\STATE $x^{t+1} \\gets x^t + \\epsilon \\nabla_{x} \\log p_\\theta(x^t) + \\sqrt{2 \\epsilon} z^t$\n    \\UNTIL{t = T}\n    \\end{algorithmic}\n    \\end{algorithm}\n</pre> <p>\u8fd9\u4e2a\u6717\u4e4b\u4e07\u52a8\u529b\u7b97\u6cd5\u7684\u601d\u8def\u548c\u4e4b\u524d\u7684\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u6cbf\u7740\u6709\u566a\u58f0\u7684\u5bf9\u6570\u4f3c\u7136\u68af\u5ea6\u4e0a\u5347\u65b9\u5411\u6765\u751f\u6210</p> <ul> <li>\u53ef\u4ee5\u5728T\u8d8b\u5411\u221e\u548c\\(\\epsilon \\rightarrow 0\\)\u65f6\u6536\u655b\u5230\\(p_\\theta(x)\\)</li> <li>\u5bf9\u4e8e\u8fde\u7eed\u7684EBMs\uff0c\\(\\nabla_{x} \\log p_\\theta(x) = \\nabla_{x} f_\\theta(x)\\)</li> </ul> <p>\u8fd9\u4e2a\u65b9\u6cd5\u7684\u597d\u5904\u5728\u4e8e\u6211\u4eec\u73b0\u5728\u4e0d\u662f\u968f\u673a\u6e38\u8d70\uff0c\u800c\u662f\u5728\u68af\u5ea6\u65b9\u5411\u4e0a\u8fdb\u884c\u79fb\u52a8</p>"},{"location":"notes/ai/dgm/energy.html#better-training","title":"Better Training","text":"<p>\u867d\u7136\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e9b\u6bd4\u8f83\u597d\u7684sample\u65b9\u5f0f\uff0c\u4f46\u662f\u5728\u8bad\u7ec3\u65f6\u5982\u679c\u8fd8\u662f\u4f7f\u7528\u5185\u90e8\u5faa\u73af\u7684\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f9d\u7136\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\uff0c\u4e0b\u9762\u63d0\u51fa\u4e00\u4e9b\u65b0\u7684\u8bad\u7ec3\u65b9\u6cd5</p>"},{"location":"notes/ai/dgm/energy.html#score-matching","title":"Score Matching","text":"<p>\u56de\u987e\u4e00\u4e0benergy-based\uff1a</p> \\[ p_\\theta(x) = \\frac{exp{f_\\theta(x)}}{Z(\\theta)}, \\text{ and } \\log p_\\theta(x) = f_\\theta(x) - \\log Z(\\theta) \\] <p>\u73b0\u5728\u7ed9\u51fascore function\uff1a</p> \\[ s_\\theta(x) = \\nabla_{x} \\log p_\\theta(x) = \\nabla_{x} f_\\theta(x) \\] <p>\u8fd9\u91cc\u548c\u4e4b\u524d\u6717\u4e4b\u4e07\u90a3\u8fb9\u4e00\u6837\uff0c\u6ca1\u6709Z\u662f\u56e0\u4e3a\u5bf9x\u6c42\u68af\u5ea6\u540e\uff0cZ\u5c31\u662f0\u4e86\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5f52\u4e00\u5316\u5e38\u6570\uff0c\u6211\u4eec\u7684score function\u6709\u5f88\u597d\u7684\u6548\u679c\uff1a</p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u7528\u6c42partition function\u4e86\uff0c\u672c\u8d28\u4e0a\u6211\u4eec\u6ca1\u6709\u8fdb\u884c\u6539\u53d8\uff0c\u4f46\u662f\u91cd\u65b0\u6362\u4e86\u4e00\u79cd\u8ba1\u7b97\u65b9\u5f0f\uff0c\u56e0\u4e3a\u57fa\u4e8e\u68af\u5ea6\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u8fdb\u884c\u4e24\u4e2a\u6982\u7387\u70b9\u7684\u6bd4\u8f83\uff0c\u800c\u4e0d\u662f\u5728partition function\u4e2d\u6bd4\u8f83\u5360\u6bd4\u5927\u5c0f</p> <p>\u73b0\u5728\u6211\u4eec\u63d0\u51fa\u8bad\u7ec3\u76ee\u6807\u51fd\u6570\uff1a</p> <p>Score Matching\uff1aminimize the Fisher divergence between \\(p_{data}\\) and the EBM \\(p_\\theta \\propto \\exp{f_\\theta(x)}\\)</p> \\[ \\frac{1}{2} \\mathbb{E}_{x \\sim p_{data}} \\| \\nabla_{x} \\log p_{data}(x) - s_\\theta(x) \\|_{2}^2 \\] <p>\u73b0\u5728\u7684\u95ee\u9898\u662f\uff1a\u6211\u4eec\u6ca1\u6709\\(p_{data}\\)\uff08\u6709\u4e86\u8fd8\u8bad\u7ec3\u4e2a\ud83e\udd5a\uff09</p> <p>\u597d\u6d88\u606f\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u5206\u90e8\u79ef\u5206\u628a\\(p_{data}\\)\u7ed9\u6d88\u6389\uff1a</p> Prove in 1 dimension <p> </p> <p> </p> <p>\u5728\u8fd9\u79cd\u4e00\u7ef4\u60c5\u51b5\u7684\u8bc1\u660e\u4e2d\uff0cnabla\u7b97\u5b50\u5c31\u662f\u6c42\u5bfc\uff0c\u5728\u8fdb\u884c\u79ef\u5206\u65f6\uff0c\\(p_{data}\\)\u5728\u6b63\u8d1f\u65e0\u7a77\u5904\u4e3a0\uff0c\u6240\u4ee5\u53ef\u4ee5\u6d88\u53bb</p> <p>\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u7684\u7ed3\u679c\u662f\uff1a</p> \\[ =E_{\\mathbf{x} \\sim p_{\\mathrm{data}}}[\\frac{1}{2}\\left\\|\\nabla_{\\mathbf{x}} \\log p_\\theta(\\mathbf{x})\\right\\|_2^2+\\operatorname{tr}(\\underbrace{\\nabla_{\\mathbf{x}}^2 \\log p_\\theta(\\mathbf{x})}_{\\text {Hessian of } \\log p_\\theta(\\mathbf{x})})]+\\text { const. } \\] <p>\u6b64\u65f6\u6211\u4eec\u60f3\u901a\u8fc7\u5c0f\u6837\u672cbatch\u8bad\u7ec3\u7684\u8bdd\uff0c\\({x_1, x_2, \\dots, x_n} \\sim p_{data}(x)\\)\uff0c\u7528\u7ecf\u9a8c\u5e73\u5747\u4f30\u8ba1\uff1a</p> \\[ \\begin{aligned} &amp; \\frac{1}{n} \\sum_{i=1}^n\\left[\\frac{1}{2}\\left\\|\\nabla_{\\mathbf{x}} \\log p_\\theta\\left(\\mathbf{x}_i\\right)\\right\\|_2^2+\\operatorname{tr}\\left(\\nabla_{\\mathbf{x}}^2 \\log p_\\theta\\left(\\mathbf{x}_i\\right)\\right)\\right] \\\\ = &amp; \\frac{1}{n} \\sum_{i=1}^n\\left[\\frac{1}{2}\\left\\|\\nabla_{\\mathbf{x}} f_\\theta\\left(\\mathbf{x}_i\\right)\\right\\|_2^2+\\operatorname{trace}\\left(\\nabla_{\\mathbf{x}}^2 f_\\theta\\left(\\mathbf{x}_i\\right)\\right)\\right] \\end{aligned} \\] <p>\u518d\u91c7\u7528stochastic gradient descent</p> <ul> <li>\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u7528\u5728EBM\u4e2d\u8fdb\u884csample\u4e86\uff01</li> <li>\u4f46\u662f\u6d77\u8d5b\u77e9\u9635\u5f88\u96be\u7b97\uff01\uff01\uff01\uff08\uff09\uff08\uff09\uff08\uff09\ud83e\udd75</li> </ul>"},{"location":"notes/ai/dgm/energy.html#noise-contrastive-estimation","title":"Noise contrastive estimation","text":"<p>TBD</p>"},{"location":"notes/ai/dgm/flow.html","title":"Normalizing Flow Models","text":"<p> \u7ea6 2156 \u4e2a\u5b57  30 \u884c\u4ee3\u7801  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>\u5728\u8fdb\u884cVAE\u7684\u5b66\u4e60\u65f6\u6211\u4eec\u5f15\u5165\u4e86\u6f5c\u53d8\u91cf\u5bf9\u6837\u672c\u8fdb\u884c\u7f16\u7801\uff0c\u4f46\u662fVAE\u7f3a\u4e4f\u4e00\u4e2atractable\u7684likelihood\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u4e86\u53d8\u5206\u63a8\u65ad\u6765\u8fd1\u4f3c\uff0c\u90a3\u6709\u6ca1\u6709\u4ec0\u4e48\u65b9\u5f0f\u80fd\u8ba9\u6211\u4eec\u4f7f\u7528\u6f5c\u7a7a\u95f4\u6765\u8868\u793a\u6837\u672c\uff0c\u5e76\u4e14\u6709tractable\u7684likelihood\u5462\uff1f\u8fd9\u5c31\u662fNormalizing Flow Model\u7684\u7528\u6b66\u4e4b\u5730\u3002</p> <p>Key</p> <p>Flow Model\u7684\u672c\u8d28\u662f\u4f7f\u7528\u4e00\u4e2a\u53ef\u9006\u7684\u3001\u5149\u6ed1\u7684\u53d8\u6362\uff0c\u5c06\u7b80\u5355\u5206\u5e03\u8f6c\u6362\u4e3a\u590d\u6742\u5206\u5e03\u3002</p> <p>\u56de\u987e\u4e00\u4e0bVAE\u7684\u601d\u8def\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6765\u8bad\u7ec3</p> \\[ p(x|z) = \\mathcal{N}(\\mu_{\\theta}(z),\\Sigma_{\\theta}(z)) \\] <p>\u4f46\u662f\u9700\u8981enumerate\u6240\u6709\u53ef\u80fd\u7684z\u2757\ufe0f</p> <p>\u800cFlow Model\u7684\u601d\u8def\u5c31\u662f\u5229\u7528\u53ef\u9006\u53d8\u6362\u6765\u786e\u5b9a\u5230\u5e95\u54ea\u4e9bz\u662f\u4e0e\u6211\u4eec\u7684x\u76f8\u5173\u7684\uff0c\u5e76\u4e14\u8fd9\u6837\u8fd8\u80fd\u786e\u5b9a\u552f\u4e00\u7684\u5bf9\u5e94\u5173\u7cfb:</p> \\[ \\text{invert } p(x|z) \\rightarrow p(z|x) \\] \\[ \\text{by finding a function } x = f_{\\theta}(z)  \\] <p>\u4f46\u662f\u8fd9\u6837\u6211\u4eec\u5c31\u9700\u8981\u4fdd\u8bc1z\u548cx\u6709\u76f8\u540c\u7684\u7ef4\u5ea6\u5e76\u4e14\u8fde\u7eed\uff08\u5728VAE\u4e2d\u901a\u8fc7encoder\u538b\u7f29\u4e86z\u7684\u7ef4\u5ea6\uff0c\u73b0\u5728\u4e0d\u884c\u4e86\uff09</p>"},{"location":"notes/ai/dgm/flow.html#build","title":"Build","text":"Recap on Probability <p>\u5148\u8ba9\u6211\u4eec \u9884\u4e60 \u56de\u5fc6\u4e00\u4e9b\u6982\u7387\u8bba\u7684\u77e5\u8bc6\uff1a</p> <p>\u9996\u5148\u662f\u5206\u5e03\u51fd\u6570\u548c\u5bc6\u5ea6\u51fd\u6570\u5728\u4ee5\u540e\u4f1a\u7528CDF\uff08cumulative distribution function\uff09\u548cPDF\uff08probability density function\uff09\u6765\u8868\u793a\u3002</p> <p>\u54e6\u5bf9\uff0c\u5bf9\u4e8e\u8054\u5408\u5206\u5e03\u968f\u673a\u5411\u91cf\\(X\\)\uff0c\u5982\u679c\u4ed6\u662f\u9ad8\u65af\u5206\u5e03\uff0c\u4ed6\u7684\u5bc6\u5ea6\u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[ p(x) = \\frac{1}{\\sqrt{(2\\pi)^n|\\Sigma|}} e^{-\\frac{1}{2}(x-\\mu)^T\\Sigma^{-1}(x-\\mu)} \\] <p>\u5bf9\u4e8e\u4e00\u4e2a\u53ef\u9006\u53d8\u5316\\(f\\)\uff0c\u4f5c\u7528\u5230\u968f\u673a\u53d8\u91cf\\(Z\\)\u540e\uff0c\\(X=f(Z)\\)\u5bc6\u5ea6\u51fd\u6570\u4f1a\u53d8\u6210\uff1a</p> \\[ p_{X}(x) = p_{Z}(f^{-1}(x)) \\left| det \\frac{\\partial f^{-1}(x)}{\\partial x} \\right| \\] <p>\u5bf9\u4e8e\u4e00\u4e2a\u53ef\u9006\u77e9\u9635\\(A\\)\uff0c\u6709\\(det(A^{-1})=det(A)^{-1}\\)\uff08\u56e0\u4e3a\\(det(M) det(M^{-1}) = det(I) = 1\\)\uff09</p> <p>\u5c31\u6709\uff1a</p> \\[ p_{Z}(z) = p_{X}(f(z)) \\left| det \\frac{\\partial f(z)}{\\partial z} \\right| ^{-1} \\] <p>\u4e5f\u5c31\u662f\u6c42\u7b97\u53cd\u51fd\u6570\u96c5\u5404\u6bd4\u77e9\u9635\u7684\u884c\u5217\u5f0f\u8f6c\u53d8\u4e3a\u4e86\u6c42\u7b97\u6b63\u51fd\u6570\u96c5\u5404\u6bd4\u77e9\u9635\u7684\u884c\u5217\u5f0f\u7684\u5012\u6570\u3002</p> <p>Idea</p> <p>\u5728\u5bf9\u4e00\u4e2a\u8fde\u7eed\u5206\u5e03\u8fdb\u884c\u53ef\u9006\u53d8\u6362\u65f6\uff0c\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u5ea6\u91cf\u5355\u4f4d\u8fdb\u884c\u53d8\u6362\uff08\u7c73-&gt;\u82f1\u5c3a\uff09\uff0c\u4f46\u662f\u663e\u7136\u5bf9\u5355\u4f4d\u8fdb\u884c\u53d8\u6362\u5e76\u4e0d\u4f1a\u8ba9\u6570\u636e\u53d8\u5f97\u7b80\u5355\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u505a\u7684\u662f\u975e\u7ebf\u6027\u53d8\u6362\uff0c\u90a3\u4e48\u5c06\u662f\u4ece\u4e0d\u540c\u89d2\u5ea6\u5ba1\u89c6\u6570\u636e\uff08\u6539\u53d8\u5750\u6807\u7cfb\uff09\uff0c\u8ba9\u5efa\u6a21\u53d8\u5f97\u7b80\u5355\uff0c\u5e76\u4e14\u7531\u4e8e\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u4e22\u5931\u4fe1\u606f\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u6765\u6b63\u5f0f\u7684\u5b9a\u4e49\u4e00\u4e2aFlow Model\uff1a</p> <p>Flow Model</p> <ul> <li>In a normalizing flow model, the mapping between \\(Z\\) and \\(X\\), given by \\(f_{\\theta}\\): \\(\\mathbb{R}^n \\rightarrow \\mathbb{R}^n\\) is deterministic and invertible such that:</li> </ul> <p> </p> <ul> <li>by using change of variables, the marginal likelihood \\(p(x)\\) is:</li> </ul> \\[ p_X(x,\\theta) = p_Z(f_{\\theta}^{-1}(x)) \\left| det \\frac{\\partial f_{\\theta}^{-1}(x)}{\\partial x} \\right| \\] <ul> <li>\\(x,z\\)\u8fde\u7eed\u4e14\u7ef4\u6570\u76f8\u540c</li> </ul> <p>\u6211\u4eec\u7684\u65b9\u6cd5\u662f\u65bd\u52a0\u4e00\u4e9b\u5217\u7684\u53ef\u9006\u53d8\u6362\uff0c\u5c06\u7b80\u5355\u5206\u5e03\u8f6c\u5316\u4e3a\u590d\u6742\u7684\uff1a</p> <p>\u53ef\u4ee5\u8fd9\u6837\u8868\u793a</p> \\[ \\begin{align} z_K &amp;= f_{\\theta_K} \\circ \\dots \\circ f_{\\theta_0}(z_0) \\\\ &amp;= f_{\\theta_K}(f_{\\theta_{K-1}}(\\dots f_{\\theta_0}(z_0)))  \\end{align} \\] <ul> <li>\u4ece\u4e00\u4e2a\u7b80\u5355\u5206\u5e03\\(z_0\\)\u5f00\u59cb\uff0c\u5e94\u7528\u4e00\u7cfb\u5217\u7684\u53ef\u9006\u53d8\u6362\uff0c\u6211\u6ca1\u6709\u7701\u7565\\(\\theta\\)\u7684\u811a\u6ce8\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u51fd\u6570\u7684\u8bad\u7ec3\u53c2\u6570\u90fd\u662f\u4e0d\u540c\u7684</li> </ul> <p>\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u6700\u540e\u7684\\(p_X(x)\\)\u600e\u4e48\u63a8\u5bfc\uff1a</p> <p>\u63a8\u5bfc</p> <p>\u5bf9Flow\u8fc7\u7a0b\u7684\u7b2c\\(i\\)\u4e2a\u51fd\u6570\uff0c\u6709\uff1a</p> \\[ \\begin{align} z_{i-1} &amp;\\sim p_{i-1}(z_{i-1}) \\\\ z_i &amp;= f_{i}(z_{i-1}),\\text{ thus }z_{i-1} = f_{i}^{-1}(z_i) \\\\ \\\\ \\text{then using change of variables formula:} \\\\ p_i(z_i) &amp;= p_{i-1}(f_{i}^{-1}(z_i)) \\left| det \\frac{\\partial f_{i}^{-1}(z_i)}{\\partial z_i} \\right| \\\\ &amp;= p_{i-1}(z_{i-1}) {\\left| det \\frac{\\partial f_{i}(z_{i-1})}{\\partial z_{i-1}} \\right|}^{-1} \\\\ \\end{align} \\] <p>\u5bf9\u7b49\u53f7\u4e24\u8fb9\u53d6\u5bf9\u6570\uff1a</p> \\[ \\log p_i(z_i) = \\log p_{i-1}(z_{i-1}) - \\log \\left| det \\frac{\\partial f_{i}(z_{i-1})}{\\partial z_{i-1}} \\right| \\] <p>\u6700\u540e\u5bf9\u6574\u4e2a\u8fc7\u7a0b\u7d2f\u52a0\uff1a</p> \\[ \\begin{aligned} \\log p(\\mathbf{x})=\\log f_K\\left(\\mathbf{z}_K\\right) &amp; =\\log f_{K-1}\\left(\\mathbf{z}_{K-1}\\right)-\\log \\left|\\operatorname{det} \\frac{d f_K}{d \\mathbf{z}_{K-1}}\\right| \\\\ &amp; =\\log f_{K-2}\\left(\\mathbf{z}_{K-2}\\right)-\\log \\left|\\operatorname{det} \\frac{d f_{K-1}}{d \\mathbf{z}_{K-2}}\\right|-\\log \\left|\\operatorname{det} \\frac{d f_K}{d \\mathbf{z}_{K-1}}\\right| \\\\ &amp; =\\ldots \\\\ &amp; =\\log f_0\\left(\\mathbf{z}_0\\right)-\\sum_{i=1}^K \\log \\left|\\operatorname{det} \\frac{d f_i}{d \\mathbf{z}_{i-1}}\\right| \\end{aligned} \\] <p>\u8fd9\u6837\u4e00\u4e2apath\u5c31\u662f\u4e00\u4e2aflow\uff0c\u5982\u679c\u6211\u4eec\u5c06\\(f\\)\u66ff\u6362\u4e3a\u8fde\u7eed\u7684\u5206\u5e03\\(\\pi_i\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5f97\u5230\u7684\u5c31\u662f\u4e00\u4e2anormalized flow</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a</p> <ul> <li>\\(f_i\\)\u7684\u9009\u62e9\u662feasily invertable\u7684\uff08\u56e0\u4e3a\u6211\u4eec\u8981\u5bf9\u5176\u8fdb\u884c\u8bad\u7ec3\uff0c\u6240\u4ee5\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u6539\u53d8\\(\\theta_i\\)\uff0c\u90fd\u8981\u4fdd\u8bc1\\(f_i\\)\u662f\u53ef\u9006\u7684\uff09</li> <li>\u96c5\u5404\u6bd4\u77e9\u9635\u7684\u884c\u5217\u5f0f\u8981\u6613\u4e8e\u8ba1\u7b97</li> </ul> <p>\u6700\u7ec8\u7684criterion\u5c31\u662f\u5bf9\u6570\u636e\u96c6\\(\\mathcal{D}\\)\u7684negative log-likelihood</p> \\[ \\mathcal{L}(\\mathcal{D}) = -\\frac{1}{|\\mathcal{D|}} \\sum_{x \\in \\mathcal{D}} \\log p(x) \\] <p>\u7136\u540e\u5728\u8fd9\u4e4b\u4e2d\u4f18\u5316\u4f60\u7684\u53c2\u6570\\(\\theta_i\\)</p> <p>\u5728\u5f97\u5230\u4e00\u4e2a\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u540e\uff0c\u76f4\u63a5sample\uff1a</p> \\[ z \\sim p_{Z}(z) \\space \\space x = f_{\\theta}(z) \\]"},{"location":"notes/ai/dgm/flow.html#optimize","title":"Optimize","text":"<p>\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u8bad\u7ec3\u6a21\u578b\u7684\u6574\u4f53\u601d\u8def\uff0c\u4f46\u662f\u53ef\u4ee5\u770b\u5230\u8ba1\u7b97\u96c5\u5404\u6bd4\u77e9\u9635\u7684\u8fc7\u7a0b\u662f\u6c42n\u9636\u77e9\u9635\u7684\u884c\u5217\u5f0f\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u590d\u6742\u5ea6\u662f\\(O(n^3)\\)\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e9b\u65b9\u6cd5\u6765\u7b80\u5316\u8fd9\u4e2a\u8fc7\u7a0b</p> <p>\u4e00\u4e2a\u601d\u8def\u5c31\u662f\u4f7f\u5f97\u96c5\u5404\u6bd4\u77e9\u9635\u662f\u4e00\u4e2a\u4e09\u89d2\u77e9\u9635\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\u6765\u8ba1\u7b97\u884c\u5217\u5f0f\uff0c\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86\\(O(n)\\)</p> <p>\u539f\u59cb\u7684\uff1a</p> \\[ \\mathbf{x} = (x_1, \\dots, x_n) = f(\\mathbf{z}) = (f_1(z_1, \\dots, z_n), \\dots, f_n(z_1, \\dots, z_n)) \\] \\[ J=\\frac{\\partial \\mathbf{f}}{\\partial \\mathbf{z}}=\\left(\\begin{array}{ccc} \\frac{\\partial f_1}{\\partial z_1} &amp; \\cdots &amp; \\frac{\\partial f_1}{\\partial z_n} \\\\ \\cdots &amp; \\cdots &amp; \\cdots \\\\ \\frac{\\partial f_n}{\\partial z_1} &amp; \\cdots &amp; \\frac{\\partial f_n}{\\partial z_n} \\end{array}\\right) \\] <p>\u5047\u5982\u6211\u4eec\u60f3\u8981\u8ba9J\u53d8\u4e3a\u4e0b\u4e09\u89d2\u77e9\u9635\uff0c\u90a3\u4e48\u5bf9\u89d2\u7ebf\u53f3\u4e0a\u7684\u90e8\u5206\u5168\u4e3a0\uff0c\u8fd9\u5c31\u8981\u6c42\u6bcf\u4e00\u4e2a\\(x_i=f_i(\\mathbf{z})\\)\u53ea\u4e0e\\(z_i\\)\u53ca\\(z_i\\)\u4e4b\u524d\u7684\u53d8\u91cf\u6709\u5173\uff08\u8fd9\u4e00\u70b9\u6709\u4e9b\u7c7b\u4f3c\u4e8eAutoRegressive Model\uff09</p>"},{"location":"notes/ai/dgm/flow.html#case-study","title":"Case Study","text":""},{"location":"notes/ai/dgm/flow.html#nice","title":"NICE","text":"<p>Non-linear Independent Component Estimation</p> <p>NICE\u662fFlow Model\u6bd4\u8f83\u65e9\u7684\u843d\u5730\uff0c\u57fa\u672c\u601d\u60f3\u662f\u91c7\u7528\u53ef\u9006\u7684\u4eff\u5c04\u53d8\u6362 \u662f\u8fd9\u4e48\u4e2a\u4e1c\u897f\u5427 \u6765\u6784\u9020\u4e00\u4e2adet = 1\u7684\u96c5\u5404\u6bd4\u77e9\u9635</p> <p>\u4f7f\u7528\u7684Flow\u5c42\u88ab\u79f0\u4e3aAdditive Coupling Layer\uff08\u52a0\u6027\u8026\u5408\u5c42\uff09\uff1a</p> \\[ \\begin{aligned} \\mathbf{z}_{1:d} &amp;= \\mathbf{x}_{1:d} \\\\ \\mathbf{z}_{d+1:n} &amp;= \\mathbf{z}_{d+1:n} + m_{\\theta}(\\mathbf{z}_{1:d}) \\end{aligned} \\] <p>\u4e5f\u5c31\u662f\u5c06z\u5207\u5272\u4e3a\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u4fdd\u6301\u4e0d\u53d8\uff0c\u7b2c\u4e8c\u90e8\u5206\u4ec5\u4ec5\u662f\u5e73\u79fb\u4e00\u4e0b\uff0c\u5e73\u79fb\u7684\u53c2\u6570\\(m_{\\theta}\\)\u662f\u4e00\u4e2a\u53ef\u5b66\u4e60\u7684\u795e\u7ecf\u7f51\u7edc</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u663e\u7136\u662f\u53ef\u9006\u7684\uff0c\u53ea\u9700\u8981\u79fb\u9879\u5c31\u80fd\u505a\u5230\uff0c\u540c\u65f6\u79fb\u9879\u540e\\(m_{\\theta}\\)\u7684\u9879\u662f\u5e38\u6570\u9879\uff0c\u6c42\u5bfc\u540e\u96c5\u5404\u6bd4\u77e9\u9635\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u4e3a1</p> <p>\u540c\u65f6\u5728\u5e94\u7528\u8fd9\u4e9baddictive coupling\u5c42\u540e\uff0c\u8fd8\u9700\u8981\u6700\u540e\u6709\u4e00\u4e2arescaling layer\uff1a</p> \\[ x_i = s_iz_i \\] <p>\u8fd9\u4e2a\u5c42\u7684\u96c5\u5404\u6bd4\u77e9\u9635\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u4e3a\\(s_i\\)\uff0c\u6240\u4ee5\u96c5\u5404\u6bd4\u77e9\u9635\u7684\u884c\u5217\u5f0f\u4e3a\\(\\prod_{i=1}^n s_i\\)</p>"},{"location":"notes/ai/dgm/flow.html#real-nvp","title":"Real-NVP","text":"<p>Real-valued non-volume preserving</p> <p>\u4e0d\u540c\u4e8eNICE\u7684 volume preserving\uff0cReal-NVP\u91c7\u7528\u4e86shifting+scale\uff08\u4ecd\u65e7\u662f\u4eff\u5c04\u53d8\u6362affine transformation\uff09\u7684\u65b9\u5f0f\uff1a</p> \\[ \\begin{align} \\mathbf{y}_{1:d} &amp;= \\mathbf{x}_{1:d} \\\\ \\mathbf{y}_{d+1:D} &amp;= \\mathbf{x}_{d+1:D} \\odot \\exp(s_{\\theta}(\\mathbf{x}_{1:d})) + t_{\\theta}(\\mathbf{x}_{1:d}) \\end{align} \\] <p>\u5176\u4e2d\u7684\\(s_{\\theta}\\)\u548c\\(t_{\\theta}\\)\u5206\u522b\u662f\u7f29\u653e\u56e0\u5b50\u548c\u5e73\u79fb\u56e0\u5b50\uff0c\u662fd\u7ef4\u8f93\u5165n-d\u7ef4\u8f93\u51fa\u7684\u51fd\u6570\uff0c\\(\\odot\\)\u662felement-wise product\uff08\u9010\u5143\u7d20\u4e58\u6cd5\uff09</p> <ul> <li>\u5728\u7f29\u653e\u56e0\u5b50\u524d\u4f7f\u7528\u4e86\u4e00\u4e2aexp\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u7f29\u653e\u56e0\u5b50\u4e3a\u6b63\u6570</li> </ul> <p>\u6700\u540e\u5f97\u5230\u7684\u96c5\u5404\u6bd4\u77e9\u9635\u884c\u5217\u5f0f\u4e3a\uff1a</p> \\[ \\det(\\mathbf{J}) = \\prod_{j=1}^{D-d} \\exp(s_{\\theta_j}(\\mathbf{x}_{1:d})) \\] code <pre><code>import torch\nimport torch.nn as nn\n\nclass AffineCouplingLayer(nn.Module):\ndef __init__(self, input_dim, hidden_dim):\n    super().__init__()\n    # \u5b9a\u4e49\u751f\u6210s\u548ct\u7684\u795e\u7ecf\u7f51\u7edc\n    self.scale_shift_net = nn.Sequential(\n        nn.Linear(input_dim // 2, hidden_dim),  # \u8f93\u5165x1\u7684\u7ef4\u5ea6\u4e3ainput_dim//2\n        nn.ReLU(),\n        nn.Linear(hidden_dim, input_dim)         # \u8f93\u51fas\u548ct\u7684\u62fc\u63a5\uff0c\u5404\u5360\u4e00\u534a\u7ef4\u5ea6\n\ndef forward(self, x, reverse=False):\n    x1, x2 = x.chunk(2, dim=-1)  # \u5c06\u8f93\u5165\u5206\u4e3ax1\u548cx2\n    st = self.scale_shift_net(x1)\n    s, t = st.chunk(2, dim=-1)    # \u62c6\u5206\u51fas\u548ct\n    s = torch.exp(s)              # \u5bf9s\u53d6\u6307\u6570\uff0c\u786e\u4fdd\u7f29\u653e\u56e0\u5b50\u6b63\u5b9a\n\n    if not reverse:\n        # \u6b63\u5411\u53d8\u6362\uff1ah2 = x2 * s + t\n        h2 = x2 * s + t\n        h = torch.cat([x1, h2], dim=-1)\n        log_det = torch.sum(torch.log(s), dim=-1)  # \u5bf9\u6570\u884c\u5217\u5f0f\n        return h, log_det\n    else:\n        # \u9006\u5411\u53d8\u6362\uff1ax2 = (h2 - t) / s\n        x2 = (x2 - t) / s\n        x = torch.cat([x1, x2], dim=-1)\n        log_det = -torch.sum(torch.log(s), dim=-1)\n        return x, log_det\n</code></pre>"},{"location":"notes/ai/dgm/flow.html#autoregressive-flow","title":"Autoregressive Flow","text":""},{"location":"notes/ai/dgm/flow.html#maf","title":"MAF","text":"<p>\u9996\u5148\u6211\u4eec\u5148\u6765\u4eceAutoRegressive Model\u5f00\u59cb\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u81ea\u56de\u5f52\u6a21\u578b\u7684\u5bc6\u5ea6\u51fd\u6570\u5b9a\u4e49\uff1a</p> \\[ p(x) = \\prod_{i=1}^n p(x_i|x_{&lt;i}) \\] <p>\u4ece\u5148\u524d\u7684\u81ea\u56de\u5f52\u89c6\u89d2\uff0c\u6211\u4eec\u5f88\u6e05\u695a\u7684\u77e5\u9053\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u6bcf\u4e2a\u5bc6\u5ea6\u51fd\u6570\u4f9d\u8d56\u4e8e\u524d\\(i-1\\)\u4e2a\u53d8\u91cf</p> <p>\u9996\u5148\u786e\u5b9a\u4e00\u4e2a\u521d\u59cb\u7684\\(z_1\\)\uff0c\u6211\u4eec\u5047\u8bbe\u670d\u4ece\u6807\u51c6\u9ad8\u65af\u5206\u5e03\uff0c\\(p(x)\\)\u670d\u4ece\u6b63\u6001\u5206\u5e03\\(\\mathcal{N}(\\mu(x), \\exp(\\alpha(x)^2))\\)</p> \\[ x_1 = \\exp(\\alpha_1)z_1 + \\mu_1 \\text{ and compute } \\mu_2 \\alpha_2 \\] <p>\u4ee5\u6b64\u7c7b\u63a8\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5b8c\u6574\u7684\u6b63\u5411\u63a8\u7406\u8fc7\u7a0b</p> <ul> <li>Flow interpre\uff1a\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u7684\u6d41\u53ef\u4ee5\u7406\u89e3\u4e3a\u7531\u6807\u51c6\u9ad8\u65af\u5206\u5e03\\(\\mathbf{z}\\) \u5230 \\(\\mathbf{x}\\) \u7684\u53d8\u6362\uff0c\u5176\u4e2d\u7684\u53ef\u9006\u53d8\u6362\u662f\u7531\u53c2\u6570\u5316\u7684\\(\\mu_{i},\\alpha_{i}\\)\u51b3\u5b9a\u7684</li> </ul> <p> </p> <ul> <li>forward\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e2ax\u662f\u6309\u7167\u987a\u5e8f\u8fdb\u884c\u751f\u6210\u7684</li> <li>\u56e0\u4e3a\u6211\u4eec\u5728forward\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u6c42\u7b97\u51fa\u5404\u4e2ax\uff0c\u56e0\u6b64\u5728backward\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\uff08\u4f7f\u7528MADE\u7b49\uff09\u53c2\u6570\u8868</li> </ul>"},{"location":"notes/ai/dgm/flow.html#iaf","title":"IAF","text":"<p>\u53ef\u4ee5\u770b\u5230MAF\u7684\u8bad\u7ec3\u8fc7\u7a0b\u662f\u53ef\u4ee5\u5e76\u884c\u5316\u7684\uff0c\u4f46\u662f\u63a8\u7406\u8fc7\u7a0b\u662f\u987a\u5e8f\u7684\uff0cInverse Autoregressive Flow \u901a\u8fc7\u98a0\u5012\u987a\u5e8f\uff0c\u5c06\u63a8\u7406\u8fc7\u7a0b\u8fdb\u884c\u5e76\u884c\u5316\uff1a</p> <ul> <li>\u60f3\u8981\u5feb\u901f\u8bad\u7ec3\uff1aMAF</li> <li>\u60f3\u8981\u5373\u65f6\u751f\u6210\uff1aIAF</li> </ul> <p>\u6709\u6ca1\u6709\u7ed3\u5408\u4e86\u4e24\u8005\u4f18\u70b9\u7684\u6a21\u578b\uff1f</p>"},{"location":"notes/ai/dgm/flow.html#parallel-wavenet","title":"Parallel Wavenet","text":"<p>\u5982\u679c\u6211\u4eec\u80fd\u7528MAF\u8bad\u7ec3\u4e00\u4e2ateacher model\uff0c\u518d\u4f7f\u7528\u4e00\u4e2aIAF\u4f5c\u4e3astudent model\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u5b66\u751f\u8001\u5e08\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\uff08KL Div\uff09\uff0c\u907f\u514d\u4e86MAF\u91c7\u6837\u7684\u56f0\u96be\u548cIAF\u8bad\u7ec3\u7684\u95ee\u9898\uff0c\u8fd9\u5c31\u662fParallel Wavenet\u7684\u601d\u8def</p> <p>code</p> <ul> <li>Training<ul> <li>Step 1: train MAF(teacher) via MLE</li> <li>Step 2: train IAF(student) to minimize KL div with teacher</li> </ul> </li> <li>Test-time: Using student singly</li> </ul>"},{"location":"notes/ai/dgm/flow.html#flow-matching","title":"Flow Matching","text":""},{"location":"notes/ai/dgm/flow.html#references","title":"References","text":"<p>Lil'Log</p>"},{"location":"notes/ai/dgm/score.html","title":"Score-based Models","text":"<p> \u7ea6 3899 \u4e2a\u5b57  25 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p> </p>"},{"location":"notes/ai/dgm/score.html#intro","title":"Intro","text":"<p>\u5728\u4e0a\u4e00\u4e2a\u6a21\u578bEnergy-based Models\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6784\u5efascore matching\u6765\u8bad\u7ec3EBMs\uff0c\u597d\u5904\u5c31\u662f\u6211\u4eec\u4e0d\u518d\u9700\u8981\u5173\u5fc3pdf\u662f\u5426\u662f\u6807\u51c6\u5316\u7684\uff08\u56e0\u4e3a\u4e0d\u9700\u8981\u8ba1\u7b97partition function\uff09\uff0c\u53ea\u9700\u8981\u8003\u8651\u68af\u5ea6\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230\u53f3\u8fb9\u7684\u68af\u5ea6\u66f2\u7ebf\uff0c\u65e0\u9700\u8003\u8651\u9762\u79ef\u95ee\u9898\uff0c\u6211\u4eec\u4e0d\u518d\u4f7f\u7528density\u6765\u8861\u91cf\u6a21\u578b\uff0c\u800c\u662f\u4f7f\u7528score</p> <p>\u4f46\u662f\u53ef\u4ee5\u770b\u5230Fisher divergence\u662f\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684\u51fd\u6570\uff0c\u4e0d\u5c40\u9650\u5728EBM\u7684\u8bad\u7ec3\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06EBM\u7684\u8bad\u7ec3\u63a8\u5e7f\u5230score-based models\u4e2d</p> <p>\u5728score-based models\u4e2d\uff0c\u6211\u4eec\u4e0d\u518d\u8003\u8651\u4e00\u4e2a\u80fd\u91cf\uff08\u6216\u8005\u8bf4\u5728EBM\u7684\u8bad\u7ec3\u76ee\u6807\u4e2d\\(f_\\theta\\)\u662f\u4e00\u4e2a\u6807\u91cf\u51fd\u6570\uff0c\u7c7b\u4f3c\u4e8e\u52bf\u80fd\uff09\uff0c\u800c\u662f\u76f4\u63a5\u6784\u5efa\u4e00\u4e2avector field of gradient\uff0c\u8fd9\u65f6\u6211\u4eec\u7684\u5bf9\u8c61\u5c31\u4e0d\u4ec5\u662f\u6807\u91cf\u51fd\u6570\u4e86\uff0c\u800c\u662farbitrary vector fields</p> <p>\u73b0\u5728\u6211\u4eec\u6765\u91cd\u7533\u4e00\u4e0bscore-based models\u7684\u4efb\u52a1\uff1a</p> <ul> <li>Given: i.i.d. samples\\({x_1, x_2, \\cdots, x_n} \\sim p_{data}(x)\\)</li> <li>Task: Estimating the score \\(\\nabla \\log p_{data}(x)\\)</li> <li>Score Model: A learnable vector-valued function \\(s_\\theta(x)\\)</li> <li>Goal: \\(s_\\theta(x) \\approx \\nabla \\log p_{data}(x)\\)</li> </ul> <p>\u4e5f\u5c31\u662f</p> \\[ \\begin{aligned} &amp;\\min_\\theta \\frac{1}{2} \\mathbb{E}_{x \\sim p_{data}} \\| \\nabla_{x} \\log p_{data}(x) - s_\\theta(x) \\|_{2}^2 \\\\ &amp;=\\min_{\\theta} E_{\\mathbf{x} \\sim p_{\\mathrm{data}}}[\\frac{1}{2}\\left\\|\\mathbf{s}_\\theta (\\mathbf{x})\\right\\|_2^2+\\operatorname{tr}(\\underbrace{\\nabla_{\\mathbf{x}}^2 \\mathbf{s}_\\theta(\\mathbf{x})}_{\\text {Jacobian of } \\mathbf{s}_\\theta(\\mathbf{x})})] \\end{aligned} \\] <p>\u4f46\u662f\u8fd9\u4e2a\u5f0f\u5b50\u4e2d\u7684\u96c5\u5404\u6bd4\u77e9\u9635\u7684trace\u5f88\u96be\u8ba1\u7b97</p> <p>Not Scalable!</p> <p> </p> <p>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u63a5\u4e0b\u6765\u7684\u65b9\u6cd5\u8fdb\u884c\u4f18\u5316</p>"},{"location":"notes/ai/dgm/score.html#denoising-score-mathching","title":"Denoising Score Mathching","text":"<p>\u603b\u4f53\u7684\u601d\u60f3\u662f\uff1a\u6211\u4eec\u4e0d\u518d\u5bf9\u539f\u5148\u7684\\(p_{data}\\)\u8fdb\u884c\u4f30\u8ba1\uff0c\u800c\u662f\u5bf9\u539f\u59cb\u6570\u636e\u52a0\u5165\u566a\u58f0\u540e\uff0c\u5bf9\u52a0\u5165\u566a\u58f0\u540e\u7684\u6570\u636e\\(\\tilde{x}\\)\u8fdb\u884c\u4f30\u8ba1</p> <p>\u8bbe\u7f6e\u566a\u58f0\uff1a</p> <p>\u7ed9\u5b9a\u539f\u59cb\u6570\u636e\u5206\u5e03 \\(p_{data}(x)\\)\uff0c\u52a0\u566a\u540e\u7684\u6570\u636e\\(\\tilde{x}\\)\u901a\u8fc7\u4ee5\u4e0b\u6761\u4ef6\u5206\u5e03\u751f\u6210\uff1a</p> \\[ q_{\\sigma}(\\tilde{x} | x) = \\mathcal{N}(x; \\tilde{x}, \\sigma^2 I) \\] <p>\u5373\\(\\tilde{x} = x + \\delta z, z \\sim \\mathcal{N}(0, I)\\)</p> <p>\u6270\u52a8\u540e\u7684\u8fb9\u9645\u5206\u5e03\u662f\u539f\u59cb\u5206\u5e03\u4e0e\u566a\u58f0\u7684\u5377\u79ef\uff1a</p> \\[ p_{\\sigma}(\\tilde{x}) = \\int q_{\\sigma}(\\tilde{x} | x) p_{data}(x) d\\tilde{x} \\] <p>\u73b0\u5728\u6211\u4eec\u6765\u770bscore matching\u7684\u4f18\u5316\u76ee\u6807\uff0c\u8fdb\u884c\u5316\u7b80\u5f97\u5230\uff1a</p> Prove unfoldsimplify the tricky partfinal <p> </p> <p> </p> <p>\u8fd9\u91cc\u7684\u5316\u7b80\u5c31\u662f\u5c06\\(q_{\\sigma}(\\tilde{x})\\)\u5c55\u5f00\uff0c\u7136\u540e\u5229\u7528\u4ed6\u7684\u7ebf\u6027\u6027\u5c06gradient\u79fb\u5230\u91cc\u9762\uff0c\u968f\u540e\u91cd\u5199\u8fd9\u4e00\u9879\uff08\u52a0\u4e2alog\uff09\uff0c\u65b9\u4fbf\u5c06\u79ef\u5206\u53d8\u4e3a\u5173\u4e8e\u4e24\u4e2a\u53d8\u91cf\u7684\u671f\u671b</p> <p> </p> <p>\u56e0\u4e3a\u6211\u4eec\u53d6q\u662fGaussian\u7684\uff0c\u6240\u4ee5\u73b0\u5728\u5c31\u6709\\(\\nabla_{\\tilde{x}} \\log q_{\\sigma}(\\tilde{x} | x) = \\frac{\\tilde{x} - x}{\\sigma^2}\\)</p> <ul> <li>Pros: efficient for high-dimensional data</li> <li>Cons: cannot estimate the score of clean(original) data </li> </ul> <p>\u56de\u987e\u4e00\u4e0b\u6574\u4e2a\u6d41\u7a0b\uff0c\u6211\u4eec\u5c06score matching\u7684\u4f18\u5316\u76ee\u6807\u8fdb\u884c\u5316\u7b80\uff0c\u5f97\u5230\uff08\u9ad8\u65af\u566a\u58f0\u4e0b\u7684\uff09denoising \u5f62\u5f0f</p> <p>\u5982\u4f55\u7406\u89e3\u8fd9\u4e2adenoising\u5462\uff1f</p> <p>\u6211\u7684\u7406\u89e3\u5c31\u662f\u5728\u4e0d\u77e5\u9053\\(p_{data}\\)\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u8ba9\u5206\u6570\u95f4\u63a5\u5339\u914d\u539f\u59cb\u6570\u636e\u5206\u6570\uff0c\u53ef\u4ee5\u770b\u5230\u516c\u5f0f\u4e2d\u7684\\(s_\\theta\\)\u5c31\u662f\u8981\u5728\\(\\delta \\to 0\\)\u65f6\u903c\u8fd1\\(\\nabla \\log q_{\\sigma}(\\tilde{x} | x)\\)</p> <p>\u8349 \u6211\u65e0\u6cd5\u8bf4\u670d\u81ea\u5df1\u4e86</p> <p>\u6362\u4e2a\u89d2\u5ea6\u8003\u8651\uff0c\u6211\u4eec\u5728\u601d\u8003optimal training object\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u73b0\u4e0a\u9762\u6211\u8bf4\u7684\u662f\u6210\u7acb\u7684\uff08\u4e5f\u5c31\u662f\u201c\u5c3d\u91cf\u201d\uff09\u7684\u610f\u601d\uff0c\u5c31\u662f\u6307\u600e\u4e48\u8ba9\u672a\u5316\u7b80\u7684\u516c\u5f0f\u548c\u5316\u7b80\u540e\u7684\u516c\u5f0f\u4ece\u903b\u8f91\u4e0a\u7b49\u4ef7\uff08\u56e0\u4e3a\u5316\u7b80\u524dscore\u662f\u9700\u8981\u903c\u8fd1\u6270\u52a8\u540e\u7684\u6570\u636e\u68af\u5ea6\uff0c\u4f46\u5316\u7b80\u540escore\u770b\u8d77\u6765\u903c\u8fd1\u7684\u662f\u566a\u58f0\u7684\u68af\u5ea6\uff09</p> <p>\u8fd9\u91cc\u5f15\u5165\u4e00\u4e2a\u5b9a\u7406</p> <p>Tweedie's formula</p> <p>Optimal denoising strategy is to follow the gradient:</p> \\[ \\begin{aligned} E_{\\mathbf{x} \\sim p(\\mathbf{x} \\mid \\tilde{\\mathbf{x}})}[\\mathbf{x}] &amp; =\\tilde{\\mathbf{x}}+\\sigma^2 \\nabla_{\\mathbf{x}} \\log q_\\sigma(\\tilde{\\mathbf{x}}) \\\\ &amp; \\approx \\tilde{\\mathbf{x}}+\\sigma^2 \\mathbf{s}_\\theta(\\tilde{\\mathbf{x}}) \\end{aligned} \\] <p>\u5c31\u662f\u8bf4\uff0c\u7ed9\u51fa\u52a0\u566a\u540e\u7684\u56fe\u50cf\uff0c\u6e05\u6670\u56fe\u50cf\u7684\u9884\u671f\u503c\u7b26\u5408\u4e0a\u9762\u7684\u516c\u5f0f</p>"},{"location":"notes/ai/dgm/score.html#sliced-score-matching","title":"Sliced Score Matching","text":"<p>\u5bf9\u4e8e\u9ad8\u7ef4\u6570\u636e\u8fdb\u884cscore matching\u65f6\uff0c\u8ba1\u7b97\u96c5\u5404\u6bd4\u77e9\u9635\u7684trace\u975e\u5e38\u56f0\u96be\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u8fd1\u4f3c\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u60f3\u5230\u4e00\u79cd\u65b9\u5f0f\u5c06\u9ad8\u7ef4\u6570\u636e\u964d\u7ef4\uff0c\u901a\u8fc7\u968f\u673a\u6295\u5f71\uff08projection\uff09</p> <p>\u6211\u4eec\u5047\u8bbe\u5c06\u4e24\u4e2a\u5206\u6570\uff08\u771f\u5b9e\u548c\u9884\u6d4b\uff09\u6295\u5f71\u5230\u968f\u673a\u5411\u91cf\\(v\\)\u4e0a\u540e\u5982\u679c\u4ed6\u4eec\u76f8\u7b49\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u4e24\u4e2a\u5206\u6570\u76f8\u7b49</p> \\[ \\begin{aligned} &amp;\\frac{1}{2} E_{\\mathbf{v} \\sim p_{\\mathbf{v}}} E_{\\mathbf{x} \\sim p_{\\text {data }}}\\left[\\left(\\mathbf{v}^{\\top} \\nabla_{\\mathbf{x}} \\log p_{\\text {data }}(\\mathbf{x})-\\mathbf{v}^{\\top} \\mathbf{s}_\\theta(\\mathbf{x})\\right)^2\\right]\\\\ &amp;\\text { Integration by parts :}\\\\ &amp;E_{\\mathbf{v} \\sim p_{\\mathbf{v}}} E_{\\mathbf{x} \\sim p_{\\text {data }}}\\left[\\mathbf{v}^{\\top} \\nabla_{\\mathbf{x}} \\mathbf{s}_\\theta(\\mathbf{x}) \\mathbf{v}+\\frac{1}{2}\\left(\\mathbf{v}^{\\top} \\mathbf{s}_\\theta(\\mathbf{x})\\right)^2\\right] \\end{aligned} \\] <p>\u8fd9\u91cc\u7684\\(\\mathbf{v^T}\\)\u4e0e\\(\\mathbf{s_\\theta}\\)\u7684\u4e58\u79ef\uff08\u70b9\u4e58\uff09\u662f\u4e00\u4e2a\u6807\u91cf\uff0c\u6240\u4ee5\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e00\u7ef4\u7684\uff0c\u901a\u5e38\u6211\u4eec\u968f\u673a\u9009\u53d6\\(v\\)\uff0c\u53ef\u4ee5\u4ece\\(p_v\\)\uff08Gaussian\u3001Rademacher\u4e2d\u91c7\u6837\uff09\u4e2d\u91c7\u6837</p> <p>\u73b0\u5728\u6765\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8ba1\u7b97\u8fd9\u91cc\u7684\\(\\mathbf{v^T \\nabla_{x} s_\\theta \\mathbf{v}}\\)\u662fscalable\u7684</p> <p>Tip</p> <p> </p> <ul> <li>\u7b2c\u4e00\u6b65\u524d\u5411\u4f20\u64ad\u8ba1\u7b97\\(\\mathbf{s_\\theta}\\)</li> <li>\u7b2c\u4e8c\u6b65\u901a\u8fc7\u6295\u5f71\u5c06\\(\\mathbf{s_\\theta}\\)\u964d\u7ef4\u5230\u4e00\u7ef4</li> <li>\u901a\u8fc7\u4e00\u6b21\u53cd\u5411\u4f20\u64ad\u6765\u8ba1\u7b97\u8fd9\u4e2a\u6807\u91cf\u5bf9\u4e8e\u6240\u6709\u8f93\u5165\u7684\u68af\u5ea6</li> <li>\u518d\u53d6\u4e00\u4e2a\u70b9\u79ef\u5c06\u8fd9\u4e2a\u68af\u5ea6\u964d\u5230\u4e00\u7ef4</li> </ul> <ul> <li>Pros: <ul> <li>\u540c\u6837\u662fmore scalable</li> <li>\u662f\u5bf9clean data\u7684score\u4f30\u8ba1</li> </ul> </li> <li>Cons: <ul> <li>slower than denoising sm</li> </ul> </li> </ul>"},{"location":"notes/ai/dgm/score.html#inference","title":"Inference","text":"<p>\u6211\u4eec\u77e5\u9053\u53ef\u4ee5\u6309\u7167\u5206\u6570\u7684\u68af\u5ea6\u65b9\u5411\u8fdb\u884c\u91c7\u6837\uff0c\u4f46\u662f\u90a3\u6837\u6570\u636e\u5206\u5e03\u4f1a\u5b8c\u5168\u6536\u655b\u5230\u4e00\u4e2a\u5355\u70b9\uff0c\u6240\u4ee5\u9700\u8981\u5f15\u5165\u566a\u58f0</p> <p>\u91c7\u7528Langevin dynamics MCMC\u8fdb\u884c\u63a8\u7406\uff1a</p> \\[ \\tilde{\\mathbf{x}}_{t+1} \\leftarrow \\tilde{\\mathbf{x}}_t+\\frac{\\epsilon}{2} \\mathrm{~S}_\\theta\\left(\\tilde{\\mathbf{x}}_t\\right)+\\sqrt{\\epsilon} \\mathbf{z}_t \\] <p>\u4f46\u662f\u8fd9\u79cdnaive\u7684\u65b9\u5f0f\u6548\u679c\u975e\u5e38\u5dee\uff0c\u539f\u56e0\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a</p> <ul> <li> <p>Manifold hypothesis: \u6570\u636e\u5206\u5e03\u5728\u4f4e\u7ef4\u6d41\u5f62\u4e0a\uff0c\u5f53\u6570\u636e\u9010\u6e10\u6536\u655b\u65f6\uff0c\u6211\u4eec\u7684\u5206\u6570\u4f1a\u5931\u53bb\u5b9a\u4e49</p> <p> </p> <p>\u53ef\u4ee5\u770b\u5230\u5373\u4f7fPCA\u964d\u7ef4\u540e\uff0c\u6837\u672c\u4ecd\u6ca1\u6709\u592a\u591a\u53d8\u5316</p> </li> <li> <p>\u6570\u636e\u5bc6\u5ea6\u5728\u4e0d\u540c\u533a\u57df\u4e0d\u540c\uff0c\u4f1a\u5728\u4f4e\u6570\u636e\u5bc6\u5ea6\u533a\u57df\u8ff7\u5931\u65b9\u5411</p> </li> </ul> <p>\u8fd9\u4e00\u70b9\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u6211\u7684\u7406\u89e3\u5c31\u662f\u5728\u4f4e\u5bc6\u5ea6\u6570\u636e\u533a\u57df\uff0c\u6570\u636e\u7684\u5206\u5e03\u5f88\u7a00\u758f\uff0c\u68af\u5ea6\u65b9\u5411\u4e0d\u7a33\u5b9a\uff0c\u5f88\u96be\u6536\u655b\u5230\u9ad8\u6570\u636e\u5bc6\u5ea6\u533a\u57df\uff0c\u9020\u6210\u91c7\u6837\u5931\u8d25</p> <ul> <li>\u6df7\u5408\u5bc6\u5ea6\u5206\u5e03\u7684\u6bd4\u4f8b\u7cfb\u6570\u4f1a\u6d88\u5931</li> </ul>"},{"location":"notes/ai/dgm/score.html#gaussian-perturbation","title":"Gaussian Perturbation","text":"<p>\u901a\u8fc7Gaussian Perturbation\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u6548\u7684\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230\u5728\u52a0\u5165Gaussian Perturbation\u540e\uff0c\u4f4e\u5bc6\u5ea6\u533a\u57df\u7684\u6570\u636e\u5bc6\u5ea6\u5f97\u5230\u63d0\u5347\uff0c\u80fd\u591f\u66f4\u597d\u7684\u8ba1\u7b97score\uff0c\u8fdb\u800c\u63d0\u5347\u4e86\u5176\u5728\u4f4e\u5bc6\u5ea6\u533a\u57df\u7684\u51c6\u786e\u6027\u3002</p> Difference between denoising and Gaussian Perturbation <p>\u6211\u5728\u542cstefano\u8bb2\u8bfe\u7684\u65f6\u5019\u611f\u89c9\u540c\u5b66\u4eec\u4e5f\u6ca1\u6709\u5b8c\u5168get\u5230\u4ed6\u8fd9\u91cc\u63d0\u5230\u7684perturbation\u548cdenoising SM\u7684\u533a\u522b\uff0c\u6211\u7684\u7406\u89e3\u662f\uff1a</p> <p>\u5728\u8fd9\u91cc\u7684perturb\u548cDSM\u5176\u5b9e\u662f\u7b49\u4ef7\u7684\uff0c\u672c\u8d28\u90fd\u662f\u901a\u8fc7\u5411\u6570\u636e\u52a0\u5165\u566a\u58f0\u7684\u4e00\u4e2a\u5904\u7406\uff0c\u4f46\u662f\u5728DSM\u4e2d\uff0c\u6211\u4eec\u5f3a\u8c03\u7684\u662f\u901a\u8fc7\u5f15\u5165\u566a\u58f0\u6765\u5316\u7b80\u8ba1\u7b97\uff0c\u800cperturbation\u5f3a\u8c03\u7684\u662f\u901a\u8fc7\u5f15\u5165\u566a\u58f0\u6765\u63d0\u5347\u6570\u636e\u5bc6\u5ea6\uff0c\u8fdb\u800c\u63d0\u5347score\u7684\u51c6\u786e\u6027\uff0c\u8fd9\u91cc\u63d0\u51fa\u7684perturb\u662f\u53ef\u4ee5\u4f7f\u7528\u5728\u4efb\u4f55score matching\u7684\u7b97\u6cd5\u4e2d\u7684\uff0c\u540c\u65f6\u4e5f\u4e3a\u4ed6\u5728\u4e0b\u6587\u4e2d\u5f15\u51fa\u7684multi-noise perturbation\u505a\u94fa\u57ab</p> <p>\u6240\u4ee5\u73b0\u5728\u7684\u95ee\u9898\u6765\u5230\u4e86\u600e\u4e48\u6dfb\u52a0noise\uff0c\u9009\u62e9\\(\\sigma\\)\uff0c\u56e0\u4e3a\uff1a</p> <ul> <li>\u5982\u679c\\(\\sigma\\)\u592a\u5c0f\uff0c\u90a3\u4e48\u6570\u636e\u5206\u5e03\u7684\u6539\u53d8\u4e0d\u4f1a\u592a\u5927\uff0c\u90a3\u4e48score\u7684\u4f30\u8ba1\u4e5f\u4e0d\u4f1a\u6539\u53d8\u592a\u591a</li> <li>\u5982\u679c\\(\\sigma\\)\u592a\u5927\uff0c\u90a3\u4e48\u6570\u636e\u5206\u5e03\u7684\u6539\u53d8\u4f1a\u592a\u5927\uff0c\u6211\u4eec\u5f97\u5230estimation\u4e0etrue data\u7684\u5dee\u5f02\u4f1a\u5f88\u5927</li> </ul> <p>trade off\uff1a</p>"},{"location":"notes/ai/dgm/score.html#multi-noise-perturbation","title":"Multi-noise Perturbation","text":"<p>Understanding</p> <p>\u6211\u4eec\u5f15\u5165\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\uff0c\u5c1d\u8bd5\u4f7f\u7528\u591a\u4e2a\u566a\u58f0\u8fdb\u884c\u52a0\u566a\u7136\u540e\u5b66\u4e60\u5206\u6570\uff0c\u539f\u56e0\u7528\u4e0b\u9762\u8fd9\u5f20\u56fe\u6765\u8bf4\u660e\uff1a</p> <p> </p> <p>\u5047\u8bbe\u6211\u4eec\u7684\u6570\u636e\u843d\u5728\u8fd9\u4e2a\u9ed1\u8272\u7c97\u7ebf\u9644\u8fd1\uff0c\u4f46\u662f\u6211\u4eec\u7684\u91c7\u6837\u53ef\u80fd\u4f1a\u5728\u8fd9\u4e2a\u5e73\u9762\u4e2d\u8fdc\u79bb\u7c97\u7ebf\u7684\u5730\u65b9\uff0c\u8fd9\u65f6\u8f83\u4f4e\u7684\u6570\u636e\u5bc6\u5ea6\u5bfc\u81f4\u6211\u4eec\u4e0d\u80fd\u5f88\u597d\u7684\u4f30\u8ba1\u68af\u5ea6\u65b9\u5411\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\\(\\sigma\\)\u8fdb\u884c\u52a0\u566a\uff0c\u8ba9\u6211\u4eec\u7684\u91c7\u6837\u80fd\u591f\u8bfb\u5230\u66f4\u597d\u7684\u68af\u5ea6\u65b9\u5411\u3002</p> <p>\u8fd9\u5c31\u662fscore based model\u548cdiffusion model\u80cc\u540e\u7684\u601d\u60f3\uff0c\u6211\u4eec\u4e0d\u4ec5\u8981\u5b66\u4e60\u6570\u636e\u5206\u5e03\uff0c\u4e0d\u4ec5\u8981\u5b66\u4e60\u6570\u636e\u5206\u5e03\u52a0\u4e0a\u5355\u4e00\u566a\u58f0\u7684\u5206\u5e03\uff0c\u6211\u4eec\u8981\u5b66\u4e60\u6570\u636e\u88ab\u4e0d\u540c\u566a\u58f0\u91cf\u6270\u52a8\u540e\u7684\u5206\u6570</p> <p>\u5177\u4f53\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <ul> <li> <p>Training:</p> <ul> <li>simultaneously\u4f7f\u7528\u6b63\u4ea4\u7684\u9ad8\u65af\u566a\u58f0\\(\\sigma_i\\), \\(\\mathcal{N}(0, \\sigma_i^2 I), i = 1, 2, \\cdots, L\\)\u8fdb\u884c\u52a0\u566a\uff08\u52a0\u566a\u7684\u65b9\u5f0f\u662f\u548cDSM\u4e00\u6837\u7684\uff09</li> <li>\u6bcf\u6b21\u52a0\u566a\u540e\uff0c\u8ba1\u7b97score\\(\\nabla_{x} \\log p_{\\sigma_i}(x)\\)\uff0c\u8fd9\u4e00\u6b65\u662f\u901a\u8fc7\u8bad\u7ec3Noise Conditional Score Based Model \\(\\mathbf{s}_\\theta(\\mathbf{x}, i)\\)\u6765\u5b9e\u73b0\u7684</li> </ul> </li> </ul> <p>Noise Conditional Score Based Model</p> <p> </p> <p>\u5982\u679c\u6211\u4eec\u76f4\u63a5\u8ba1\u7b97L\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u5c06\u4f1a\u5341\u5206expensive\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u901a\u8fc7\u8c03\u6574\u4e0d\u540c\u7684\\(\\sigma_i\\)\u6765\u8ba1\u7b97\u4e0d\u540c\u7684score</p> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230L\u4e2ascore\uff0c\u4f46\u662f\u76ee\u6807\u9700\u8981\u7ecf\u8fc7\u52a0\u6743\uff1a</p> \\[ \\sum_{i=1}^{L} \\lambda(i) \\mathbb{E}_{p_{\\sigma_i}(x)} [|| \\left( \\nabla_{x} \\log p_{\\sigma_i}(x) - \\nabla_{x} \\log p_{data}(x) \\right) ||_{2}^2] \\] \\[ \\begin{aligned} &amp; =\\frac{1}{L} \\sum_{i=1}^L \\lambda\\left(\\sigma_i\\right) E_{\\mathbf{x} \\sim p_{\\mathrm{data}}, \\mathbf{z} \\sim \\mathcal{N}(\\mathbf{0}, \\mathbf{I})}\\left[\\left\\|\\nabla_{\\tilde{\\mathbf{x}}} \\log q_{\\sigma_i}(\\tilde{\\mathbf{x}} \\mid \\mathbf{x})-\\mathbf{s}_\\theta\\left(\\tilde{\\mathbf{x}}, \\sigma_i\\right)\\right\\|_2^2\\right]+\\text { const. } \\\\ &amp; =\\frac{1}{L} \\sum_{i=1}^L \\lambda\\left(\\sigma_i\\right) E_{\\mathbf{x} \\sim p_{\\mathrm{data}}, \\mathbf{z} \\sim \\mathcal{N}(\\mathbf{0}, \\mathbf{I})}\\left[\\left\\|\\mathbf{s}_\\theta\\left(\\mathbf{x}+\\sigma_i \\mathbf{z}, \\sigma_i\\right)+\\frac{\\mathbf{z}}{\\sigma_i}\\right\\|_2^2\\right]+\\text { const. } \\end{aligned} \\] <p>\u8fd9\u91cc\u7684\u52a0\u6743\u51fd\u6570\\(\\lambda(i)\\)\u901a\u5e38\u7b49\u4e8e\\(\\sigma_i^2\\)</p> <ul> <li> <p>Sampling:</p> <ul> <li>\u4f7f\u7528Annealed Langevin dynamics for \\(i = L, L-1, \\cdots, 1\\)\u8fdb\u884c\u91c7\u6837</li> </ul> </li> </ul> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u9000\u706b\u6717\u4e4b\u4e07\uff0c\u5e76\u4e14\u5c06\u6bcf\u6b21\u7684sample\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u7684\u521d\u59cb\u503c</p> <ul> <li>Noise Choice</li> </ul> <p>\u6700\u540e\u8fd8\u6d89\u53ca\u5230\u4e00\u4e9b\u566a\u58f0\u7684\u9009\u62e9\u95ee\u9898\uff0c\u6211\u4eec\u77e5\u9053\u566a\u58f0\u662f\u4e00\u4e2a\u9012\u8fdb\u7684/\u9012\u51cf\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6d89\u53ca\u5230\u8fd9\u4e2a\u566a\u58f0\u7684\u53d8\u5316\u8fc7\u7a0b\uff1a</p> <p>key point\u662f\uff1a</p> <ul> <li>\u76f8\u90bb\u7684\u566a\u58f0\u4e4b\u95f4\u9700\u8981overlap to facilitate transitioning across noise scales</li> <li>\u91c7\u7528geometry progression with sufficient length\uff1a</li> </ul> \\[ \\sigma_1 &lt; \\sigma_2 &lt; \\cdots &lt; \\sigma_L \\] \\[ \\frac{\\sigma_i}{\\sigma_{i+1}} = \\text{constant} \\]"},{"location":"notes/ai/dgm/score.html#score-based-models-with-sdes","title":"Score-based models with SDEs","text":"<p>\u901a\u8fc7\u5c06noide level\u63d0\u5347\u5230 infinity, we obtain not only higher quality samples, but also, among others, exact log-likelihood computation, and controllable generation for inverse problem solving.</p> <p>\u6211\u4eec\u5c06\u4e0a\u4e00\u6b65\u4e2d\u7684noise\u5728\u65f6\u95f4\u7ef4\u5ea6\u53d6\u6781\u9650\uff0c\u5f97\u5230\u4e00\u4e2a\u8fde\u7eed\u7684noise level\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08SDE\uff09</p> <p>\u8fd9\u6837\u5f97\u5230\u7684\u5c31\u662f\u4e00\u4e2a\u5b8c\u5168\u7684\u566a\u58f0\uff1a</p> <p>\u73b0\u5728\u6211\u4eec\u7528SDE\u6765\u8868\u793a\u8fd9\u4e2a\u8fc7\u7a0b\uff1a</p> \\[ \\mathrm{d} \\mathbf{x} = \\mathbf{f(\\mathbf{x}, t)} \\mathrm{d} t + \\mathbf{g(t)} \\mathrm{d} \\mathbf{w} \\] <p>Notation</p> <ul> <li>\\(f(x, t)\\): drift coefficient\uff0c\u6f02\u79fb\u7cfb\u6570\u51b3\u5b9a\u6570\u636e\u7684\u786e\u5b9a\u6027\u6f14\u5316\u65b9\u5411</li> <li>\\(g(t)\\): diffusion coefficient\uff0c\u6269\u6563\u7cfb\u6570\u51b3\u5b9a\u6570\u636e\u7684\u968f\u673a\u6027\u6f14\u5316\u65b9\u5411\uff0c\u63a7\u5236\u566a\u58f0\u7684\u5f3a\u5ea6</li> <li>\\(\\mathbf{dw}\\): Wiener process\uff0c\u6807\u51c6\u5e03\u6717\u8fd0\u52a8\uff08\u7ef4\u7eb3\u8fc7\u7a0b\uff09\uff0c\u8868\u793a\u65e0\u7a77\u5c0f\u7684\u9ad8\u65af\u767d\u566a\u58f0</li> </ul> <p>Choice of SDEs</p> Variance Exploding SDEVariance Preserving SDE <p>\u566a\u58f0\u65b9\u5dee\u968f\u65f6\u95f4\u589e\u5927\uff0c\u6700\u7ec8\u8986\u76d6\u6574\u4e2a\u7a7a\u95f4\uff0c\u5feb\u901f\u7206\u70b8\u566a\u58f0</p> \\[ dx = \\sqrt{\\frac{d\\sigma^2(t)}{dt}}dw, \\text{  } \\sigma(t) \\rightarrow \\infty, t\\rightarrow T \\] <p>\u603b\u4f53\u65b9\u5dee\u4fdd\u6301\u7a33\u5b9a\uff0c\u5e38\u7528\u4e8ediffusion model</p> \\[ \\mathrm{d} \\mathbf{x} = -\\frac{1}{2} \\beta(t) x \\mathrm{d} t + \\sqrt{\\beta(t)} \\mathrm{d} \\mathbf{w} \\] <p>\u8fd9\u4e2a\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u7684\u89e3\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u968f\u673a\u53d8\u91cf\u96c6\u5408\\({x(t)}_{t \\in [0, T]}\\)\uff0c\u8868\u793a\u5728\u65f6\u95f4\\([0, T]\\)\u5185\uff0c\u6570\u636e\\(x\\)\u7684\u6f14\u5316\u8fc7\u7a0b\uff08trace stochastic trajectory as t increases\uff09\uff0c\u8fd9\u65f6\u6211\u4eec\u7684\u6570\u636e\u5206\u5e03\\(p_t(x)\\)\u5c31\u662f\u8868\u793a\u5728\u65f6\u95f4\\(t\\)\u65f6\uff0c\u6570\u636e\\(x(t)\\)\u7684marginal distribution density function\uff0c\u6240\u4ee5\u5728\\(t \\rightarrow T\\)\u65f6\uff0c\\(p_t(x)\\)\u5c31\u662f\u566a\u58f0\u6270\u52a8\u540e\u7684\u6570\u636e\u5206\u5e03\\(\\pi(x)\\)</p> <p>\u73b0\u5728\u6211\u4eec\u6765\u8003\u8651\u600e\u4e48\u8fdb\u884csample\uff0c\u9996\u5148\u56de\u987e\u6211\u4eec\u7684finite version\uff0c\u6211\u4eec\u901a\u8fc7Annealed Langevin dynamics\u8fdb\u884c\u91c7\u6837\uff0c\u5373sequentially \u5728\u4e0d\u540c\u7684\u566a\u58f0\u9636\u6bb5\u8fdb\u884c\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u91c7\u6837\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u52a0\u566a\u8fc7\u7a0b\u53d8\u6210\u4e86\u4e00\u4e2a\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff0c\u90a3\u4e48\u81ea\u7136\u7684\u6211\u4eec\u60f3\u6c42\u89e3\u8fd9\u4e2aSDE\u7684reverse\uff1a</p> <p>\u7406\u8bba\u4e0a\u6bcf\u4e2aSDE\u90fd\u6709\u4e00\u4e2areverse SDE\uff1a</p> \\[ \\mathrm{d} \\mathbf{x}=\\left[\\mathbf{f}(\\mathbf{x}, t)-g^2(t) \\nabla_{\\mathbf{x}} \\log p_t(\\mathbf{x})\\right] \\mathrm{d} t+g(t) \\mathrm{d} \\mathbf{w} \\] <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u91cc\u7684\\(\\nabla_x log p_t(x)\\)\u5c31\u662f\u6211\u4eec\u7684score!</p> <p>\u73b0\u5728\u6765\u770b\u770b\u8bad\u7ec3\u601d\u8def\uff1a</p> <p>\u6839\u636e\u4e0a\u9762\u7684\u5f0f\u5b50\uff0c\u4e0d\u96be\u89c2\u5bdf\u51fa\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\uff1a</p> <ul> <li>terminal distribution \\(p_T(x)\\)\uff1a\u5c31\u662f\u6211\u4eec\u7684\u52a0\u566a\u6570\u636e\u5206\u5e03\uff0ctractable</li> <li>score function \\(\\nabla_x \\log p_t(x)\\)\uff1a\u6211\u4eec\u9700\u8981\u8bad\u7ec3\u4e00\u4e2aTime-Dependent Score-Based Model\\(s_\\theta(x, t)\\)\uff0csuch that \\(\\nabla_x \\log p_t(x) \\approx s_\\theta(x, t)\\)\uff0c\u8fd9\u548c\u6211\u4eec\u5bf9finite\u7684\u8bad\u7ec3\u662f\u76f8\u4f3c\u7684: \\(\\nabla_x \\log p_{\\sigma_i}(x) \\approx s_\\theta(x, i)\\)</li> </ul> <p>\u8fd9\u65f6\u6211\u4eec\u7684training obj\u5c31\u662f\uff1a</p> \\[ \\mathbb{E}_{t \\in \\mathcal{U}(0, T)} \\mathbb{E}_{p_t(\\mathbf{x})}\\left[\\lambda(t)\\left\\|\\nabla_{\\mathbf{x}} \\log p_t(\\mathbf{x})-\\mathbf{s}_\\theta(\\mathbf{x}, t)\\right\\|_2^2\\right] \\] <p>\u8fd9\u91cc\uff0c\\(mathcal{U}\\)\u8868\u793a0\uff0cT\u4e4b\u95f4\u7684\u5747\u5300\u5206\u5e03\uff0c\\(\\lambda\\)\u8fd8\u662f\u90a3\u4e2a\u6b63\u9879\u6743\u91cd\u51fd\u6570\uff0c\u901a\u5e38\u9009\u62e9\\(\\lambda(t) \\propto \\frac{1}{\\mathbb{E}[\\|\\nabla_{\\mathbf{x}(t)} \\log p(\\mathbf{x}(t) \\mid \\mathbf{x}(0))\\|^2_2]}\\)\u6765\u5bf9\u4e0d\u540c\u65f6\u95f4\u7684score\u8fdb\u884c\u5e73\u8861\u3002</p> <p>\u8fd9\u65f6\u5bf9score function\u8fdb\u884c\u8bad\u7ec3\uff0c\u7528sliced\u6216\u8005denoising sm\u4f18\u5316\u540e\uff0c\u5c06\u7ed3\u679c\u63d2\u5165SDE\uff1a</p> \\[d\\mathbf{x} = [\\mathbf{f}(\\mathbf{x}, t) - g^2(t)\\mathbf{s}_{\\theta}(\\mathbf{x}, t)]dt + g(t)d\\mathbf{w}\\] <p>\u4ece\\(x(T) \\sim \\pi\\)\u5f00\u59cb\uff0c\u6211\u4eec\u5f00\u59cb\u8fdb\u884creverse SDE\u89e3\uff0c\u5f97\u5230\\(x(0)\\)\uff0c\u5f53score well-trained\u65f6\uff0c\u8fd9\u65f6\u7684\\(x(0)\\)\u5c31\u662f\u4e00\u4e2aapproximate sample from distribution \\(p_0\\)</p> <p>likelihood weighting function</p> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5f15\u5165likelihood\uff0c\u901a\u8fc7\u9009\u62e9\u4e00\u4e2aweighting function \\(\\lambda(t) = g^2(t)\\)\u4f7f\u5f97</p> \\[\\text{KL}(p_0(\\mathbf{x}) \\| p_{\\theta}(\\mathbf{x})) \\leq \\frac{T}{2}\\mathbb{E}_{t \\in \\mathcal{U}(0,T)}\\mathbb{E}_{p_t(\\mathbf{x})}[\\lambda(t)\\|\\nabla_{\\mathbf{x}} \\log p_t(\\mathbf{x}) - \\mathbf{s}_{\\theta}(\\mathbf{x}, t)\\|^2_2] + KL(p_T || \\pi)\\] <p>\u7531\u4e8e\u8fd9\u4e2a\u5f0f\u5b50\u4e2d\u5e26\u6709\u7684KL\u6563\u5ea6\uff0c\u5e76\u4e14\u6700\u5c0f\u5316KL\u6563\u5ea6\u548c\u6700\u5927\u5316\u6a21\u578b\u8bad\u7ec3\u4e2d\u7684\u4f3c\u7136\u662f\u7b49\u4ef7\u7684\uff0c\u6211\u4eec\u7ed9\u8fd9\u4e2a\u52a0\u6743\u51fd\u6570\u624d\u8d77\u540d\u4e3a\u4f3c\u7136\u52a0\u6743\u51fd\u6570\uff0c\u5e76\u4e14Yang Song\u7684\u535a\u5ba2\u4e2d\u63d0\u5230\u8fd9\u4e2a\u8ffd\u6c42\u4f3c\u7136\u7684\u8bad\u7ec3\u7ed3\u679c\u4f1a\u6bd4\u5f53\u65f6\u6700\u597d\u7684AR\u6a21\u578b\u66f4\u597d</p>"},{"location":"notes/ai/dgm/score.html#predictor-corrector","title":"Predictor-Corrector","text":"<p>\u9996\u5148\u770b\u600e\u4e48\u89e3SDE\uff1a</p> <ul> <li>Euler-Maruyama method: \u91c7\u7528\u79bb\u6563\u5316SDE\uff0c\u7528finite step\u6765\u9010\u6e10\u903c\u8fd1SDE\u7684\u89e3\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5f88\u50cf\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\uff0c\u90fd\u662f\u5728\u9010\u6e10\u903c\u8fd1\u76ee\u6807\u5206\u5e03\u7684\u540c\u65f6\u52a0\u5165\u6270\u52a8</li> </ul> \\[\\Delta\\mathbf{x} \\leftarrow [\\mathbf{f}(\\mathbf{x}, t) - g^2(t)\\mathbf{s}_{\\theta}(\\mathbf{x}, t)]\\Delta t + g(t)\\sqrt{|\\Delta t|}\\mathbf{z}_t, \\text{  } \\mathbf{z}_t \\sim \\mathcal{N}(0, \\mathbf{I})\\] \\[\\mathbf{x} \\leftarrow \\mathbf{x} + \\Delta\\mathbf{x}\\] \\[t \\leftarrow t + \\Delta t\\] <ul> <li> <p>Predictor\uff1a</p> <p>\u4f7f\u7528\u4efb\u4f55\u4e00\u79cdnumerical method that predicts \\(x(t + \\Delta t) \\sim p_{t+\\Delta t}(x)\\) from existing sample \\(x(t)\\sim p_t(x)\\)</p> </li> <li> <p>Corrector\uff1a</p> <p>\u4efb\u4f55\u72ec\u7acb\u4f9d\u8d56score function\u7684MCMC procedure\uff0c\u4f8b\u5982\u6717\u4e4b\u4e07\u6216\u8005\u662f\u6c49\u5bc6\u5c14\u987fMC</p> </li> </ul> <p>\u4f7f\u7528\u4e2d\u5c31\u662f\u5148\u7528predictor\u9884\u6d4b\uff0c\u518d\u7528corrector\u7ea0\u6b63</p>"},{"location":"notes/ai/dgm/score.html#controllable-generation","title":"Controllable generation","text":"<p>\u5173\u4e8e\u52a0\u5165\u9650\u5b9a\u6761\u4ef6\u7684\u751f\u6210\u4efb\u52a1\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u8d1d\u53f6\u65af\u516c\u5f0f\u5bf9\u6982\u7387\u8fdb\u884c\u6761\u4ef6\u7ea6\u675f\uff0c\u5728\u8fd9\u91ccscore function\u662f\u5f88\u5408\u9002\u505a\u8fd9\u4e2a\u4efb\u52a1\u7684\uff0c\u56e0\u4e3a\u5bf9\u8d1d\u53f6\u65af\u516c\u5f0f\uff1a</p> <p>\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u6b63\u5411\u751f\u6210\u7ed3\u679c\\(p(y|x)\\)</p> \\[ p(\\mathbf{x} \\mid \\mathbf{y}) = \\frac{p(\\mathbf{x}, \\mathbf{y})}{p(\\mathbf{y})} = \\frac{p(\\mathbf{y} \\mid \\mathbf{x})p(\\mathbf{x})}{\\int p(\\mathbf{y} \\mid \\mathbf{x})p(\\mathbf{x})d\\mathbf{x}} \\] <p>\u901a\u8fc7\u53d6\u68af\u5ea6\u53ef\u4ee5\u6781\u5927\u7684\u5316\u7b80\u8fd9\u4e2a\u5f0f\u5b50\uff1a</p> \\[ \\nabla_x \\log p(\\mathbf{x} \\mid \\mathbf{y}) = \\nabla_x \\log p(\\mathbf{y} \\mid \\mathbf{x}) + \\nabla_x \\log p(\\mathbf{x}) \\] <p>\u56e0\u4e3a\u540e\u4e24\u9879\u5206\u522b\u662f\u5df2\u77e5\u7684\u548cscore function\uff0c\u6240\u4ee5\u5148\u9a8c\u6982\u7387\u5f88\u597d\u5f97\u5230\u4e86</p> <p>\u4ee5\u4e0a\u5185\u5bb9\u572825 Summer \u671f\u672b\u5468\u524d\u5b8c\u6210\uff0ccoding\u90e8\u5206\u5982\u679c\u6709\u65f6\u95f4\u7684\u8bdd\u6211\u4e5f\u60f3\u597d\u597d\u770b\u770b\u7684\uff0c\u4f46\u662f\u4e34\u8fd1\u671f\u672b\uff0c\u5148\u4e0d\u770b\u4e86\uff0c\u540e\u9762\u6709\u65f6\u95f4\u7684\u8bdd\u53ef\u4ee5\u8865\u4e0a\uff0c\u4f46\u6211\u8fd8\u662f\u503e\u5411\u4e8e\u5c06flow matching\u65b9\u5411\u7684\u7406\u89e3\u5148\u5b8c\u6210</p>"},{"location":"notes/ai/dgm/vae.html","title":"Variational Autoencoder(VAE)","text":"<p> \u7ea6 1834 \u4e2a\u5b57  4 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p> </p> <p>Key</p> <p>\u6211\u5728\u5b66\u4e60\u8fd9\u90e8\u5206\u65f6\u88ab\u5927\u91cf\u7684\u6982\u7387\u516c\u5f0f\u6240\u56f0\uff0c\u4ee5\u81f3\u4e8e\u5fd8\u8bb0\u4e86\u6a21\u578b\u7684\u521d\u8877\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u76f4\u63a5\u653e\u4e00\u4e0b\u6982\u5ff5\u56fe\u4ee5\u53ca\u6838\u5fc3\u601d\u60f3</p> <p> </p> <ul> <li> <p>\u6838\u5fc3\uff1a</p> <p>\u901a\u8fc7\u7f16\u7801\u5668\u5c06\u8f93\u5165\u6570\u636e\u6620\u5c04\u5230\u6f5c\u5728\u7a7a\u95f4\uff0c\u518d\u901a\u8fc7\u89e3\u7801\u5668\u4ece\u6f5c\u5728\u53d8\u91cf\u91cd\u6784\u8f93\u5165\u6570\u636e\u5b9e\u73b0\u751f\u6210</p> </li> </ul>"},{"location":"notes/ai/dgm/vae.html#build","title":"Build","text":"<p>\u5728\u6982\u7387\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u8ba1\u7b97\u6570\u636e\u7684\u8fb9\u9645\u4f3c\u7136\uff08marginal likelihood\uff09\uff0c\u5373\u5728\u7ed9\u5b9a\u89c2\u6d4b\u6570\u636e\\(x\\)\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u5176\u5728\u6f5c\u5728\u53d8\u91cf\\(z\\)\u4e0a\u7684\u8fb9\u9645\u5206\u5e03\u3002</p> \\[ p_{\\theta}(x) = \\int p(x, z) dz = \\int p_{\\theta}(x|z) p(z) dz \\] <p>\u4f46\u662f\uff1a</p> <ul> <li>\u8fd9\u4e2a\u79ef\u5206\u5f80\u5f80\u662f\u975e\u5e38\u590d\u6742\u751a\u81f3\u4e8e\u4e0d\u53ef\u89e3\u7684</li> <li>\\(p(z)\\)\u662f\u6f5c\u53d8\u91cf\u7684\u5206\u5e03\uff0c\u901a\u5e38\u662f\u4e0d\u53ef\u89c2\u6d4b\uff08\u6216\u8005\u8bf4\u5f88\u96be\u5f97\u5230\u6b63\u786e\u7684\u5206\u5e03\uff09</li> </ul> <p>\u8fd9\u65f6\u6211\u4eec\u5f15\u5165\u4e00\u4e2acontrollable\u7684\u5206\u5e03\\(q(x)\\)</p> \u53d8\u5206\u5206\u5e03 <p>\u53d8\u5206\u5206\u5e03\uff08variational distribution\uff09\u662f\u7528\u4e8e\u8fd1\u4f3c\u771f\u5b9e\u5206\u5e03\u7684\u4e00\u79cd\u5206\u5e03\u3002</p> <p>\u5728\u6982\u7387\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u5173\u5fc3\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u8ba1\u7b97\u540e\u9a8c\u5206\u5e03\uff0c\u5373\u7ed9\u5b9a\u89c2\u6d4b\u6570\u636e\\(x\\)\u540e\uff0c\u6f5c\u5728\u53d8\u91cf\\(z\\)\u7684\u5206\u5e03\\(p(z|x)\\)\u3002\u6839\u636e\u8d1d\u53f6\u65af\u5b9a\u7406\uff1a</p> \\[ p(z|x) = \\frac{p(x|z)p(z)}{p(x)} \\] <p>\u8fd9\u91cc\u5bf9\u4ed6\u8ba1\u7b97\u5341\u5206\u4e0d\u4fbf\uff0c\u56e0\u4e3a\\(p(x)\\)\u7684\u79ef\u5206\u975e\u5e38\u590d\u6742\uff08\u5c24\u5176\u5728\\(p(x)\\)\u662f\u9ad8\u7ef4\u6570\u636e\u65f6\uff09\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u53d8\u5206\u5206\u5e03\\(q(z|x)\\)\uff0c\u6765\u8fd1\u4f3c\\(p(z|x)\\)\uff0c\u8fd9\u4e2a\u5206\u5e03\u901a\u5e38\u6bd4\u8f83\u7b80\u5355\uff0c\u4e14\u53ef\u4ee5\u88ab\u63a7\u5236\u3002</p> \u53d8\u5206\u63a8\u65ad <p>pick a variational parameter \\(\\phi\\) so that \\(q_{\\phi}(z)\\) is close to \\(p_{\\theta}(z|x)\\)</p> <p> </p> <p>\u6211\u4e2a\u4eba\u7684\u7406\u89e3\u662f\uff0c\u6211\u4eec\u7684\u4f18\u5316\u5bf9\u8c61\u662f\u56fa\u5b9a\u7684\uff0c\u5373\\(p(x)\\)\uff0c\u4f46\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u901a\u5e38\u5f88\u96be\u5f97\u5230\uff0c\u6240\u4ee5\u8fd9\u4e9b\u5de5\u4f5c\u90fd\u662f\u5728\u627e\u4e00\u4e9b\u8fd1\u4f3c\u65b9\u6cd5\u6765\u6c42\u89e3\uff0c\u81f3\u4e8e\u6211\u4eec\u80fd\u4e0d\u80fd\u53ef\u89c6\u5316\u7684\u7406\u89e3/\u4ece\u610f\u4e49\u4e0a\u7406\u89e3\u8fd9\u4e2a\u5206\u5e03\u6211\u89c9\u5f97\u53ef\u80fd\u4e0d\u91cd\u8981\uff1f</p> <p>\u4e0b\u9762\u6211\u63a8\u5bfc\u5b8cELBO\u5b9a\u4e49\u8fc7\u7a0b\u4e4b\u540e\uff0c\u53ef\u80fd\u4f1a\u6709\u66f4\u6df1\u7684\u7406\u89e3\u3002</p> <p>\u6211\u4eec\u5b9a\u4e49\u76ee\u6807 \u6700\u5927\u5316\\(\\mathcal{L}\\) function:</p> \\[ \\mathcal{L}_{\\theta,\\phi(x)} = \\mathbb{E}_{z \\sim q_{\\phi}(z|x)}[\\log p_{\\theta}(x|z)] - \\mathcal{D}_{KL}(q_{\\phi}(z|x) || p_(z)) \\] <p>\u8fd9\u4e2a\u516c\u5f0f\u662f\u5728VAE\u4e2d\u5e7f\u6cdb\u91c7\u7528\u7684\u5b9a\u4e49\uff0c\u540c\u65f6\u4e5f\u6709\u4e00\u4e2a\u5f62\u5f0f\u66f4\u7b80\u5355\u7684\uff08\u4e0d\u6253\u5f00\\(p(x, z)\\)\uff09\u5f62\u5f0f\uff1a</p> \\[ \\begin{aligned} \\mathcal{L}_{\\theta,\\phi}(x) &amp;= \\sum_{z} q_{\\phi}(z) \\log p_{\\theta}(z, x) + H(q_{\\phi}(z)) \\\\  &amp;= \\mathbb{E}_{q_{\\phi}(z)}[\\log p_{\\theta}(z, x) - \\log q_{\\phi}(z)] \\end{aligned} \\] ELBO \u7684\u5b9a\u4e49\u8fc7\u7a0b <p>\u9996\u5148\u5bf9\\(p(x)\\)\u53d6\u5bf9\u6570\uff0c\u91cd\u5199\u5b83\u5728\u6f5c\u5206\u5e03\\(z\\)\u4e0a\u7684\u5bf9\u6570\u4f3c\u7136</p> \\[ \\begin{aligned} \\log p_{\\theta}(x) &amp;= \\int_{z} q(z) \\log p_{\\theta}(x) dz \\space \\space \\space \\text{for any distribution q}\\\\ &amp;= \\int_{z} q(z) \\log \\frac{p_{\\theta}(x|z)p_{\\theta}(z)}{p_{\\theta}(z|x)} dz \\\\ &amp;= \\int_{z} q(z) \\log( \\frac{p_{\\theta}(x|z)p_{\\theta}(z)}{p_{\\theta}(z|x)} \\frac{q(z)}{q(z)} ) dz \\\\ &amp;= \\int_{z} q(z)(\\log p_{\\theta}(x|z) + \\log \\frac{p_{\\theta}(z)}{q(z)} + \\log \\frac{q(z)}{p_{\\theta}(z|x)}) dz \\\\ &amp;= \\mathbb{E}_{z \\sim q(z)}[\\log p_{\\theta}(x|z)]  - \\mathcal{D}_{KL}(q(z) || p_{\\theta}(z)) + \\mathcal{D}_{KL}(q(z)||p_{\\theta}(z|x)) \\end{aligned} \\] <p>\u6211\u4eec\u77e5\u9053\u5173\u4e8e\\(p(x)\\)\u548c\u57fa\u4e8ex\u5148\u9a8c\u7684z\u7684\u9879\u90fd\u662f\u4e0d\u6613\u89e3\u51b3\u7684\uff08intractable\uff09</p> <p> </p> <p>\u6211\u4eec\u5c06\u8fd9\u4e24\u5757tractable\u7684\u90e8\u5206\u653e\u5728\u4e00\u8d77\u79f0\u4e3aEvidence Lower Bound(ELBO)</p> <p>\u6700\u540e\u6211\u4eec\u5728\u8fdb\u884c\u4e00\u6b65\u5904\u7406\uff1a</p> <p>\u7528\u53c2\u6570\u5316\u7684\\(q_{\\theta}(z|x)\\)\u4ee3\u66ff\\(q(z)\\)\uff0c\u5e76\u5c06\\(p_{\\theta}(z)\\)\u7b80\u5355\u5316\u5904\u7406\u4e3a\\(p(z)\\)</p> <p>\u5176\u5b9e\u597d\u50cf\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u4e0d\u7b49\u5f0f\u5904\u7406\u65b9\u5f0f\uff0c\u5229\u7528\u51fd\u6570\u7684convex\u6027\u8d28\u548cJensen\u4e0d\u7b49\u5f0f\uff0c\u6211\u4eec\u91cd\u5199\\(p_{\\theta}(x)\\)\u7684log likelihood\uff0c\u7136\u540e\u518d\u5bf9\u5f97\u5230\u7684\u7ed3\u679clog\u5c55\u5f00\u5373\u53ef</p> \\[ \\log p_{\\theta}(x) = \\log \\sum_{z} p_{\\theta}(x,z) = \\log \\sum_{z} q(z) \\frac{p_{\\theta}(x,z)}{q(z)} \\geq \\sum_{z} q(z) \\log \\frac{p_{\\theta}(x,z)}{q(z)} = ELBO \\] <p>\u8fd9\u91cc\u7684\u4e0d\u7b49\u5f0f\u5f53\u4e14\u4ec5\u5f53\\(p_{\\theta}(z|x) = q(z)\\)\u65f6\u6210\u7acb\uff0c\u8fd9\u662f\u56e0\u4e3a\u9009\u62e9\u4e0d\u540c\u7684\u540e\u9a8c\u5206\u5e03\u5176\u903c\u8fd1\u7a0b\u5ea6\u4e0d\u540c\uff0c\u4ece\u8fd9\u91cc\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\\(q(z)\\)\u53ea\u8981\u9009\u62e9\u7684\u597d\uff0c\u90a3\u4e48\\(ELBO\\)\u7684\u503c\u5c31\u8d8a\u903c\u8fd1\\(\\log p_{\\theta}(x)\\)\uff0c\u4e5f\u5c31\u662f\u8bf4 \\(ELBO\\)\u662f\u5bf9\u6570\u4f3c\u7136\\(\\log p_{\\theta}(x)\\)\u7684\u4e0b\u754c\uff0c\u54c8\u54c8\uff01\u8fd9\u4e0d\u5c31\u662fEvidence Lower Bound\u7684\u542b\u4e49\u5417\uff01</p> <p> </p> <p> \u53d6\u5f97\u7b49\u53f7\u5373\u610f\u5473\u7740KL\u6563\u5ea6\u4e3a0 </p> <ul> <li> <p>Reconstruction Loss</p> <p>\u7b2c\u4e00\u9879\\(\\mathbb{E}_{z \\sim q_{\\phi}(z|x)}[\\log p_{\\theta}(x|z)]\\)\u662f\u91cd\u6784\u5bf9\u6570\u4f3c\u7136\u9879\uff0c\u7528\u4e8e\u8861\u91cf\u6a21\u578b\u91cd\u6784\u8f93\u5165\u6570\u636e\u7684\u80fd\u529b\uff0c\u4e5f\u5c31\u662f\u6a21\u578b\u80fd\u591f\u751f\u6210\u4e0e\u8f93\u5165\u6570\u636e\u76f8\u4f3c\u7684\u6570\u636e\u7684\u80fd\u529b\u3002</p> </li> <li> <p>Regularization Loss</p> <p>\u7b2c\u4e8c\u9879\\(\\mathcal{D}_{KL}(q_{\\phi}(z|x) || p_{\\theta}(z))\\)\u662f\u6b63\u5219\u5316\u635f\u5931\uff0c\u7528\u4e8e\u7ea6\u675f\u6f5c\u5728\u53d8\u91cf\\(z\\)\u7684\u5206\u5e03\uff0c\u8868\u793a\u53d8\u5206\u5206\u5e03\\(q(z|x)\\)\u4e0e\u5148\u9a8c\u5206\u5e03\\(p(z)\\)\u7684\u5dee\u5f02\uff0c\u9632\u6b62\u53d8\u5206\u5206\u5e03\u8fc7\u5ea6\u504f\u79bb\u5148\u9a8c\u5206\u5e03\u3002</p> </li> </ul>"},{"location":"notes/ai/dgm/vae.html#optimize","title":"Optimize","text":"<p>\u5728\u524d\u6587\u4e2d\u6211\u4eec\u5b9a\u4e49\u597d\u4e86\u4f18\u5316\u76ee\u6807\uff0c\u73b0\u5728\u6211\u4eec\u770b\u4e00\u4e9b\u5177\u4f53\u7684\u4f18\u5316\u95ee\u9898\uff1a</p> <ul> <li>\\(\\phi,\\theta\\) \u7684\u4f18\u5316</li> </ul> <p>\u5728Latent Variable Model\u4e2d\uff0c\u6211\u4eec\u63d0\u5230\u4e86\\(\\theta\\)\u662f\u4e00\u4e2alearnable\u7684\u53c2\u6570\uff08\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u5b66\u4e60\uff09\uff0c\u4ed6\u88ab\u7528\u4f5cgenerator\u4e2d\uff0c\u6211\u7684\u7406\u89e3\u5c31\u662f\u8fd9\u91cc\u7684\\(\\theta\\)\u7528\u4f5c\u7ec4\u5408\u5404\u4e2a \u6f5c\u53d8\u91cf\u7136\u540e\u8f93\u51fa\u4e00\u4e2a\u9884\u6d4b\u5206\u5e03\\(p_{\\theta}(x)\\)</p> <p>\u7136\u540e\u5c31\u662f\u5bf9\u53d8\u91cf\\(\\phi\\)\u7684\u7406\u89e3\uff1a\u56e0\u4e3a\\(p_{\\theta}(z|x)\\)\u662fintractable\u7684\uff0c\u6211\u4eec\u91c7\u7528\u53d8\u5206\u63a8\u65ad\\(q_{\\phi}(z)\\)\u6765\u903c\u8fd1\u3002\u800c\u7531\u4e8e\u540e\u9a8c\u5206\u5e03\\(p_{\\theta}(z|x^{i})\\)\u5bf9\u6bcf\u4e2a\u6837\u672c\u5206\u5e03\\(x^i\\)\u662f\u4e0d\u4e00\u6837\u7684\uff08\u4f8b\u5982\u98de\u673a\u548c\u5927\u8c61\u7684\u9ad8\u9636\u7279\u5f81\u4e0d\u540c\uff09\uff0c\u5e94\u8be5\u5bf9\u6bcf\u4e00\u4e2a\u6837\u672c\u6709\u4e00\u4e2avariational parameter\uff0c\u5f97\u5230\u4f18\u5316\u76ee\u6807\u5c31\u662f\uff1a</p> \\[ \\max_{\\theta, \\phi^{1}, \\phi^{2}, ...} \\sum_{x^i \\in D} \\mathcal{L}(x^i, \\theta, \\phi^i) = \\max_{\\theta, \\phi^{1}, \\phi^{2}, ...} \\mathbb{E}_{q_{\\phi^i}(z)}[\\log p_{\\theta}(z, x) - \\log q_{\\phi^i}(z)] \\] <p>\u73b0\u5728\u6211\u4eec\u7528 Stochastic Variational Inference(SVI) \u6765\u8fdb\u884c\u4f18\u5316\uff1a</p> <p>\u5c31\u662f\u4f7f\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7684\u53d8\u5206\u63a8\u65ad</p> <p>\u6211\u4eec\u5148\u524d\u4f7f\u7528\u7684\\(\\phi^i\\)\u662f\u5355\u6837\u672c\u6620\u5c04\uff0c\u4f46\u662f\u7531\u4e8e\u53c2\u6570\u8fc7\u591a\u5f88\u96be\u8bad\u7ec3\uff0c\u6211\u4eec\u53d6\u4e00\u4e2aamortized inference\uff0c\u4e5f\u5c31\u662f\u5bf9\u5168\u4f53\u6837\u672c\u90fd\u9002\u7528\u7684\u4e00\u4e2a\\(\\phi\\)\u3002</p> <p>Amortization</p> <p>\u901a\u8fc7\u5b66\u4e60\u4e00\u4e2a\u5355\u53d8\u91cf\u51fd\u6570\\(f_{\\lambda}\\)\uff0c\u5c06\u8f93\u5165\u7684\u6bcf\u4e2a\u6837\u672c\\(x^i\\)\u6620\u5c04\u5230\u4e00\u7ec4\u597d\u7684\u53d8\u5206\u53c2\u6570</p> <p>\u533a\u522b\u5c31\u662f\u5355\u6837\u672c\u6620\u5c04\u9700\u8981\u5bf9\u6bcf\u4e2a\u6837\u672c\u5355\u72ec\u8ba1\u7b97\u53c2\u6570\uff0c\u800camortized inference\u901a\u8fc7\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u5c06\u8f93\u5165\u76f4\u63a5\u6620\u5c04\u5230\u5171\u4eab\u53c2\u6570</p> <p>\u603b\u7684\u7b97\u6cd5\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <pre>\n    \\begin{algorithm}\n    \\caption{VAE Training Algorithm}\n    \\begin{algorithmic}\n    \\REQUIRE dataset $\\mathcal{D}$\n    \\STATE Initialize $\\theta$ and $\\phi$\n    \\WHILE{not converged}\n    \\STATE Randomly sample a data $x^i$ from dataset $\\mathcal{D}$\n    \\STATE Compute gradient $\\nabla_{\\theta} \\mathcal{L}$ and $\\nabla_{\\phi} \\mathcal{L}$\n    \\STATE Update $\\theta$ and $\\phi$ in the direction of the gradient\n    \\ENDWHILE\n    \\end{algorithmic}\n    \\end{algorithm}\n</pre> <p>\u73b0\u5728\u6765\u770b\u5177\u4f53\u7684\u68af\u5ea6\u8ba1\u7b97\uff1a\u6211\u4eec\u4f7f\u7528Monte Carlo\u6765\u8fd1\u4f3c</p> <p>\u53ef\u4ee5\u770b\u5230\\(\\theta\\)\u7684\u68af\u5ea6\u8ba1\u7b97\u662f\u76f4\u63a5\u7684\uff1a</p> \\[ \\nabla_{\\theta} \\mathbb{E}_{q_{\\phi}(z)}[\\log p_{\\theta}(z, x) - \\log q_{\\phi}(z)] \\approx \\frac{1}{K} \\sum_{k=1}^{K} \\nabla_{\\theta} \\log p_{\\theta}(z_k, x) \\] <p>\u4f46\u662f\\(\\phi\\)\u7684\u68af\u5ea6\u8ba1\u7b97\u9700\u8981\u4f7f\u7528reparameterization trick\uff1a</p> <p>Reason</p> <p>\u6211\u4eec\u77e5\u9053\u6240\u6c42\u671f\u671b\u662f\u4f9d\u8d56\u4e8e\\(\\phi\\)\u7684\uff0c\u5bf9\\(z\\)\u7684\u91c7\u6837\u64cd\u4f5c\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u65e0\u6cd5\u4f7f\u7528backpropagation\uff0c\u5982\u679c\u628a\u91c7\u6837\u64cd\u4f5c\u8f6c\u79fb\u5230\u4e0d\u9700\u8981backpro\u7684\u90e8\u5206\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53ea\u9700\u8981\u5bf9\u53c2\u6570\u6c42\u5bfc</p> <p>\u5177\u4f53\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <p>\u5047\u8bbe\\(z\\)\u5c5e\u4e8e\u6b63\u6001\u5206\u5e03\uff0c\u5c06\u5176\u6539\u5199\uff1a</p> \\[ z = \\mu + \\delta \\epsilon = g(\\epsilon, \\phi) \\text{ g is determinstic} \\] <p>\u5176\u4e2d\\(\\epsilon \\sim \\mathcal{N}(0, I)\\)\u662f\u4e00\u4e2a\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u566a\u58f0\u9879\uff0c\\(\\mu\\)\u548c\\(\\delta\\)\u662f\u5b66\u4e60\u7684\u53c2\u6570</p>"},{"location":"notes/ai/dgm/vae.html#expectation-maximization","title":"Expectation Maximization","text":"<p>\u8fd9\u90e8\u5206\u662f\u5173\u4e8eVAE\u6a21\u578b\u4e0eEM\u4e4b\u95f4\u7684\u5173\u7cfb</p>"},{"location":"notes/ai/dgm/vae.html#vector-quantizedvq-vae","title":"Vector Quantized(VQ-VAE)","text":""},{"location":"notes/cs/index.html","title":"Computer Science Notes","text":"<p>Abstract</p> <p>\"This is a collection of notes on computer science.\"</p>"},{"location":"notes/cs/HPC/index.html","title":"HPC learning notes","text":"<p>Abstract</p> <p>This is a collection of notes on high performance computing. I took a course called HPC101 in the summer of 2024, maybe I'll not work on HPC in the future, but I'll keep these notes for reference. BTW HPC101 is definitely a good course, and I wanted to gain something from it so I took these notes.</p>"},{"location":"notes/cs/HPC/index.html#table-of-contents","title":"Table of Contents","text":""},{"location":"notes/cs/Sys/CO/index.html","title":"CO","text":"<p>Abstract</p> <p>\"\u672c\u6765\u4e0d\u60f3\u5199CO\u7684\u7b14\u8bb0\u7684\uff0c\u4e0a\u5b66\u671f\u8ba1\u903b\u7684\u7b14\u8bb0\u4e00\u76f4\u662f\u5728PPT\u65c1\u8fb9\u5199\u7684\uff0c\u4f46\u662f\u8fd9\u5b66\u671f\u611f\u89c9\u6709\u70b9\u61c8\u6020\uff0cmade\u6851\u4e0a\u8bfe\u8fd8\u4e0d\u559c\u6b22\u63d0\u524d\u53d1PPT\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u8fd8\u662f\u6574\u7406\u4e00\u4e0b\u4e0a\u8bfe\u7684\u77e5\u8bc6\uff0c\u505a\u4e00\u70b9\u63d0\u70bc\u548c\u6d53\u7f29\uff0c\u65b9\u4fbf\u81ea\u5df1\u590d\u4e60\u548c\u56de\u987e\u3002\"</p> <p>\u8fd9\u5b66\u671f\u7684CO\u4e3b\u8981\u7248\u5757\u5f88\u660e\u786e\uff1a</p> <ul> <li>\u8ba1\u7b97\u673a\u6982\u8981</li> <li>\u8ba1\u7b97\u673a\u7b97\u672f\u8fd0\u7b97</li> <li>\u6307\u4ee4</li> <li>\u5904\u7406\u5668</li> <li>\u5185\u5b58\u5c42\u6b21\u67b6\u6784</li> <li>I/O</li> </ul>"},{"location":"notes/cs/Sys/CO/arithmetic.html","title":"Arithmetic","text":""},{"location":"notes/cs/Sys/CO/arithmetic.html#numbers","title":"Numbers","text":"<ul> <li>Two's Complement</li> </ul> <p>\u6b63\u6570\u6700\u9ad8\u4f4d\u4e3a0\uff0c\u8d1f\u6570\u6700\u9ad8\u4f4d\u4e3a1\u3002</p> <p>\u6b63\u6570\u6b63\u5e38\u8868\u793a\uff0c\u8d1f\u6570\u53d6\u53cd\u52a01\u3002</p>"},{"location":"notes/cs/Sys/CO/arithmetic.html#add-sub","title":"Add &amp; Sub","text":""},{"location":"notes/cs/Sys/CO/arithmetic.html#multiplication","title":"Multiplication","text":"<p>\u4e58\u6cd5\u5668\u7684\u5b9e\u73b0\u5c31\u662f\u52a0\u6cd5\u5668\uff0c\u4f46\u662f\u9700\u8981\u8fdb\u884c\u79fb\u4f4d\u548c\u591a\u6b21\u52a0\u6cd5\u3002</p> <p>Version 1</p> <p>\u5b9e\u73b0\u4e00\u4e2a64\u4f4d\u7684\u4e58\u6cd5\u5668\uff0c\u9700\u8981128\u4f4d\u7684\u52a0\u6cd5\u5668\uff1a</p> <p></p> <p>\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\uff0c\u5c31\u662f\u6a21\u4eff\u624b\u5199\u4e58\u6cd5\u7684\u8fc7\u7a0b\uff1a\u975e\u5e38\u7684\u590d\u6742\u7f13\u6162\uff0c\u8fd0\u7528128\u4f4d\u52a0\u6cd5\u5668\uff0c\u4f46\u662f\u771f\u6b63\u5728\u76f8\u52a0\u7684\u53ea\u670964\u4f4d\u3002</p> <p>\u5728\u4e58\u6570(Multiplier)\u7684\u5f53\u524d\u4f4d\u4e3a1\u65f6\uff0c\u5c06\u88ab\u4e58\u6570(Multiplicand)\u52a0\u5230\u4e58\u79ef(Product)\u4e0a\uff0c\u7136\u540e\u4e58\u6570\u53f3\u79fb\uff0c\u88ab\u4e58\u6570\u5de6\u79fb\u3002\uff08\u8fd9\u91cc\u4e58\u6570\u53f3\u79fb\u662f\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u53ea\u770b\u4e58\u6570\u7684\u6700\u4f4e\u4f4d\u662f\u5426\u4e3a1\uff0c\u5728\u770b\u5b8c\u4e86\u4e4b\u540e\u9700\u8981\u770b\u4e0b\u4e00\u4f4d\uff0c\u6240\u4ee5\u9700\u8981\u53f3\u79fb\uff09</p> <p>\u5728\u4e58\u6570(Multiplier)\u7684\u5f53\u524d\u4f4d\u4e3a0\u65f6\uff0c\u4e58\u6570\u53f3\u79fb\uff0c\u88ab\u4e58\u6570\u5de6\u79fb\u3002</p> <p>\u8fdb\u884c64\u6b21\u5faa\u73af\u540e\u7ed3\u675f\u3002</p> <p>Version 2</p> <p></p> <p>\u6539\u53d8\u601d\u8def\uff0c\u79fb\u52a8\u4e58\u79ef\uff0c\u8fd9\u6837\u907f\u514d\u4e86\u4f7f\u7528\u8f83\u5927\u7684\u52a0\u6cd5\u5668\u3002</p> <p>\u8fd9\u91cc\u9700\u8981\u4e00\u4e2a128\u4f4d\u7684\u5bc4\u5b58\u5668\u4f5c\u4e3a\u4e58\u79ef\u5bc4\u5b58\u5668\uff0c\u5206\u4e3a\u9ad864\u4f4d\u548c\u4f4e64\u4f4d\uff0c\u521a\u5f00\u59cb\u7b2c\u4e00\u4e2a\u4e58\u79ef\u653e\u5728\u6700\u9ad8\u4f4d\u3002</p> <p>\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u5982\u679c\u4e58\u6570\u6700\u4f4e\u4f4d\u4e3a1\uff0c\u5c06\u88ab\u4e58\u6570\u52a0\u5230\u4e58\u79ef\u5bc4\u5b58\u5668\u7684\u7684\u9ad864\u4f4d\uff0c\u7136\u540e\u4e58\u79ef\u5bc4\u5b58\u5668\u53f3\u79fb\uff0c\u4e58\u6570\u53f3\u79fb\uff1b</p> <p>\u5982\u679c\u4e58\u6570\u6700\u4f4e\u4f4d\u4e3a0\uff0c\u4e58\u79ef\u5bc4\u5b58\u5668\u53f3\u79fb\uff0c\u4e58\u6570\u53f3\u79fb\u3002</p> <p>\u7ecf\u8fc764\u6b21\u5faa\u73af\u540e\uff0c\u4e58\u79ef\u5bc4\u5b58\u5668\u7684\u4f4e64\u4f4d\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u4e86\u3002</p> <p>Version 3</p> <p></p> <p>\u5728\u5148\u524d\u7684\u7248\u672c\u4e2d\uff0c\u4e58\u79ef\u5bc4\u5b58\u5668\u6700\u7ec8\u4f1a\u6709\u4e00\u534a\u7684\u7a7a\u95f4\u662f\u6d6a\u8d39\u6389\u7684\uff0c\u8fd9\u4e00\u534a\u7684\u957f\u5ea6\u6b63\u597d\u4e0e\u4e58\u6570\u7684\u957f\u5ea6\u76f8\u540c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528128\u4f4d\u4e58\u79ef\u5bc4\u5b58\u5668\u521d\u59cb\u7684\u53f3\u534a\u90e8\u5206\u6765\u5b58\u50a8\u4e58\u6570\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u4e58\u6570\u5bc4\u5b58\u5668\u4e86\u3002</p> Example <p></p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662fVersion 3\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u8fd0\u7528\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u9002\u914d\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u548c\u957f\u5ea6\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4e66\u5199\u8fc7\u7a0b\u4e2d\u5c31\u662f\u75286-bit\u7684\u516b\u8fdb\u5236\u6570\u8fdb\u884c\u8fd0\u7b97\uff0c\u540c\u65f6\u4e0b\u65b9\u8fd8\u7ed9\u51fa\u4e86\u540c\u6837\u6570\u636e\u5982\u679c\u662f8-bit\u7684\u5341\u516d\u8fdb\u5236\u6570\u8fdb\u884c\u8fd0\u7b97\u7684\u7ed3\u679c\u3002</p> <p>\u5bf9\u6709\u7b26\u53f7\u6570\u4e58\u6cd5\uff0c\u9700\u8981\u5b58\u50a8\u7b26\u53f7\u4f4d\uff0c\u7136\u540e\u8fdb\u884c\u65e0\u7b26\u53f7\u6570\u4e58\u6cd5\uff0c\u6700\u540e\u6839\u636e\u7b26\u53f7\u4f4d\u786e\u5b9a\u7ed3\u679c\u7684\u7b26\u53f7\u3002</p> <p>\u4f46\u662f\u6ce8\u610f</p> <p>Warning</p> <p>\u4e58\u6cd5\u4e0d\u80fd\u7528\u8865\u7801\u8ba1\u7b97</p> <ul> <li>Improved Multiplier</li> </ul> <p>Booth's Algorithm</p> <p>\u6211\u4e0d\u60f3\u5199\u4e86\uff0c\u653e\u4e86xyx\u5b66\u957f\u7684\u7b14\u8bb0\uff1a \ud83d\udd17</p>"},{"location":"notes/cs/Sys/CO/arithmetic.html#division","title":"Division","text":"<p>Version 1 \u9664\u6cd5\u6700\u521d\u7684\u7248\u672c\u4e5f\u662f\u6a21\u4eff\u624b\u5199\u9664\u6cd5\uff1a</p> <p></p> <p>\u8fdb\u884c\u9664\u6cd5\u65f6\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u5224\u65ad\u4f59\u6570\u7684\u6b63\u8d1f\u6765\u8fdb\u884c\u7684</p> <p>\u9664\u6570\u521d\u59cb\u65f6\u5b58\u653e\u5728\u9664\u6570\u5bc4\u5b58\u5668\u7684\u9ad8\u4f4d\u534a\u8fb9\uff0c\u4f59\u6570\u5bc4\u5b58\u5668\u521d\u59cb\u65f6\u662f\u5b58\u653e\u88ab\u9664\u6570\u5e76\u653e\u5728\u4f4e\u4f4d\u534a\u8fb9\u7684\uff0c</p> <p>\u4ece\u4f59\u6570\u5bc4\u5b58\u5668\u4e2d\u51cf\u53bb\u9664\u6570\uff0c\u5982\u679c\u7ed3\u679c\u4e3a\u6b63\uff0c\u5de6\u79fb\u5546\u5bc4\u5b58\u5668\uff0c\u5c06\u6700\u65b0\u7684\u53f3\u4f4d\u8bbe\u4e3a1\uff0c\u5982\u679c\u7ed3\u679c\u4e3a\u8d1f\uff0c\u5c06\u9664\u6570\u5bc4\u5b58\u5668\u52a0\u56de\u5230\u4f59\u6570\u5bc4\u5b58\u5668\uff0c\u5de6\u79fb\u5546\u5bc4\u5b58\u5668\uff0c\u5c06\u6700\u65b0\u7684\u53f3\u4f4d\u8bbe\u4e3a0\u3002</p> <p>\u8fd9\u4e4b\u540e\u5c06\u9664\u6570\u5bc4\u5b58\u5668\u53f3\u79fb\u4e00\u4f4d\uff0c\u91cd\u590d65\u6b21\u5faa\u73af\u540e\u7ed3\u675f\u3002</p> <p>Version 2</p> <p></p> <p>\u9664\u6570\u4e0d\u52a8\uff0c\u88ab\u9664\u6570\u653e\u5728128\u4f4d\u4f59\u6570\u7684\u4f4e\u4f4d\u534a\u8fb9</p> <p>\u5faa\u73af\u5f00\u59cb\u65f6\uff0c\u5148\u5c06\u4f59\u6570\u90e8\u5206\u5de6\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u51cf\u53bb\u9664\u6570\uff0c\u5982\u679c\u7ed3\u679c\u4e3a\u6b63\uff0c\u5de6\u79fb\u4f59\u6570\u5bc4\u5b58\u5668\uff0c\u5c06\u6700\u65b0\u7684\u53f3\u4f4d\u8bbe\u4e3a1\uff0c\u5982\u679c\u7ed3\u679c\u4e3a\u8d1f\uff0c\u5c06\u9664\u6570\u5bc4\u5b58\u5668\u52a0\u56de\u5230\u4f59\u6570\u5bc4\u5b58\u5668\uff0c\u5de6\u79fb\u4f59\u6570\u5bc4\u5b58\u5668\uff0c\u5c06\u6700\u65b0\u7684\u53f3\u4f4d\u8bbe\u4e3a0\u3002</p> <p>\u8fd9\u6837\u6700\u540e\u4f59\u6570\u5bc4\u5b58\u5668\u4f4e\u534a\u4f4d\u5c31\u662f\u5546\uff0c\u9ad8\u534a\u4f4d\u5c31\u662f\u4f59\u6570\u3002</p> 7/2 <p></p> <ul> <li>Signed Division</li> </ul> <p>Reminder \u9700\u8981\u4e0e\u88ab\u9664\u6570\u540c\u53f7</p>"},{"location":"notes/cs/Sys/CO/arithmetic.html#floating-point","title":"Floating Point","text":"<p>32\u4f4d\u5904\u7406\u5668\u7684\u6570\u8868\u793a\u8303\u56f4\uff1a</p> <p>\\(-2^{31} \u5230 2^{31}-1\\)</p> <p>\u6d6e\u70b9\u6570\u7684\u8868\u793a\uff1a</p> <ul> <li>Sign</li> <li>Significand \u589e\u52a0\u7cbe\u786e\u5ea6</li> <li>Exponent \u589e\u52a0\u8303\u56f4</li> </ul> <p>\u4e8c\u8fdb\u5236\u6570\u7684\u6807\u51c6\u8868\u793a\u65b9\u6cd5\uff1a</p> <p>\\(1.xxx * 2^{yyy}\\)</p> <p>\u5bf9\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0cy\u67098\u4f4d\uff0cx\u670923\u4f4d</p> <p>\u5bf9\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0cy\u670911\u4f4d\uff0cx\u670952\u4f4d</p> <p></p> <p>\u7b2c\u4e00\u4f4d\u76841\u662f\u4e00\u5b9a\u7684\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u8ba1\u5165\u5b58\u50a8\uff0cExponent\u662f\u5e26\u6709Bias\u7684</p> <p>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570Bias\u4e3a127\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570Bias\u4e3a1023</p> <p>\u56e0\u6b64\u6700\u540e\u603b\u7684\u8868\u793a\u65b9\u6cd5\u662f\uff1a</p> \\[ (-1)^{\\text{Sign}} * (1 + \\text{Significand(Fraction)}) * 2^{\\text{Exponent - Bias}} \\] 0.75 \u548c -0.4375 <p></p> <p></p> <ul> <li>Single Precision Range</li> </ul> <p>\u6307\u6570\u4e2d 00000000 \u548c 11111111 \u662f\u7279\u6b8a\u503c</p> <p>\u5f53Exponent\u4e3a11111111\uff0cFraction\u4e3a00000000\u65f6\uff0c\u8868\u793a\u65e0\u7a77\u5927</p> <p>\u5f53Exponent\u4e3a11111111\uff0cFraction\u4e0d\u4e3a00000000\u65f6\uff0c\u8868\u793aNaN(Not a Number)</p> <p>\u56e0\u6b64\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u8303\u56f4\u662f\uff1a</p> <p>Smallest Number: \\(1.0 * 2^{1-127} \\approx 1.2 * 10^{-38}\\)</p> <p>Largest Number: \\(1.111... * 2^{254-127} \\approx 2 * 2^{127} \\approx 3.4 * 10^{38}\\)</p> <p>\u6bcf\u4e00\u4f4d\u90fd\u662f1\u7684\u65f6\u5019\uff081.111...\uff09\uff0c\u8868\u793a\u65e0\u9650\u63a5\u8fd1\u4e8e2</p>"},{"location":"notes/cs/Sys/CO/arithmetic.html#floating-point-arithmetic","title":"Floating Point Arithmetic","text":"<ul> <li>Addition and Subtraction</li> </ul> <ol> <li>Alignment</li> </ol> <p>\u5c06\u4e24\u4e2a\u6570\u8fdb\u884c\u5bf9\u9f50\uff0c\u901a\u5e38\u662f\u5c06\u8f83\u5c0f\u7684\u6570\u5f80\u5927\u7684\u9760\u8fd1\uff0c\u56e0\u4e3a\u5982\u679c\u5c06\u5927\u7684\u5411\u5c0f\u7684\u5bf9\u9f50\uff0c\u635f\u5931\u7684\u4f4d\u6570\u662f\u66f4\u9ad8\u7684\u4f4d\u6570\uff0c\u635f\u5931\u7684\u7cbe\u5ea6\u66f4\u591a</p> <ol> <li> <p>Addition</p> </li> <li> <p>Normalization</p> </li> <li> <p>Rounding</p> </li> </ol> 0.5 + -0.4375 <p></p> <ul> <li>Multiplication</li> </ul> <p>\u76f8\u5bf9\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u6307\u6570\u76f8\u52a0\uff0c\u5c3e\u6570\u76f8\u4e58\u5373\u53ef\u3002</p> <p>\u9664\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684</p>"},{"location":"notes/cs/Sys/CO/arithmetic.html#accurate-arithmetic","title":"Accurate Arithmetic","text":"<p>\u4e3a\u4e86\u63d0\u9ad8\u820d\u5165\u7684\u7cbe\u5ea6\uff0cIEEE 754 \u6807\u51c6\u89c4\u5b9a\u4e3a\u6d6e\u70b9\u6570\u989d\u5916\u6dfb\u52a0 2 \u4f4d\uff0c\u4ece\u5de6\u5230\u53f3\u5206\u522b\u79f0\u4e3aGuard\u548cRound\uff0c\u8fd9\u4e24\u4f4d\u6570\u5b57\u4fdd\u7559\u4e86\u6d6e\u70b9\u6570\u8ba1\u7b97\u7684\u4e2d\u95f4\u8fc7\u7a0b\uff0c\u4ece\u800c\u5c3d\u53ef\u80fd\u5730\u907f\u514d\u7cbe\u5ea6\u4e0a\u7684\u635f\u5931\u3002</p> <ul> <li>Sticky Bit\uff1aSticky \u4f4d\u7528\u4e8e\u8bb0\u5f55\u79fb\u51fa\u7684\u5c3e\u6570\u4e2d\u7684\u975e\u96f6\u4fe1\u606f\uff0c\u662f\u6307\u53ea\u8981\u5728Round\u53f3\u8fb9\u51fa\u73b0\u8fc71\uff0c\u90a3\u4e48sticky\u4f4d\u5c31\u4e3a1</li> </ul> <p>\u6d6e\u70b9\u6570\u7684\u820d\u5165</p> <ol> <li>\u5982\u679cGuard\u4f4d\u4e3a0\uff0c\u90a3\u4e48\u76f4\u63a5\u820d\u53bbRound\u548cSticky\u4f4d</li> <li>\u5982\u679cGuard\u4f4d\u4e3a1\uff0cRound\u4f4d\u4e3a1\u6216\u8005Sticky\u4f4d\u4e3a1\uff1a\u7ed3\u679c\u5411\u4e0a\u820d\u5165\uff0c\u5982\u679c\u90fd\u4e3a0\uff0c\u7ed3\u679c\u5411\u4e0b\u820d\u5165\uff08\u4fdd\u6301\u4e0d\u53d8\uff09</li> </ol> Example <p></p>"},{"location":"notes/cs/Sys/CO/instruction.html","title":"Instruction","text":"<p>Outline:</p> <ul> <li>\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u64cd\u4f5c Operation</li> <li>\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u64cd\u4f5c\u6570 Operand</li> <li>\u6709\u7b26\u53f7\u6570\u548c\u65e0\u7b26\u53f7\u6570 Signed and Unsigned Numbers</li> <li>\u6307\u4ee4\u7684\u8868\u793a Instruction Representation</li> <li>\u903b\u8f91\u64cd\u4f5c Logical Operations</li> <li>\u51b3\u7b56\u6307\u4ee4 Making Decisions</li> <li>\u8ba1\u7b97\u673a\u5bf9\u8fc7\u7a0b\u7684\u652f\u6301 Procedure Support</li> <li>\u6307\u4ee4\u7684\u5bfb\u5740 Instruction Addressing</li> </ul> <p>\u6307\u4ee4-&gt;Statement</p> <p>\u6307\u4ee4\u96c6-&gt;Syntax</p>"},{"location":"notes/cs/Sys/CO/instruction.html#operation","title":"Operation","text":"<p>\u5728RISC-V\u4e2d\uff0c\u6bcf\u4e00\u6761\u6307\u4ee4\u53ea\u652f\u6301\u4e00\u4e2a\u64cd\u4f5c</p>"},{"location":"notes/cs/Sys/CO/instruction.html#operands","title":"Operands","text":"<p>\u5728\u7b97\u672f\u8fd0\u7b97\u4e2d\uff0c\u64cd\u4f5c\u6570\u53ea\u80fd\u662f\u5bc4\u5b58\u5668\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u505a\u8fd0\u7b97\u65f6\uff0c\u4e00\u5b9a\u8981\u5148\u628a\u6570\u636e\u5b58\u653e\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u518d\u5bf9\u4e24\u4e2a\u5bc4\u5b58\u5668\u8fdb\u884c\u8fd0\u7b97\u3002</p> <p>RISC-V\u4e2d\u7684\u5bc4\u5b58\u5668\u662f <code>32 x 64-bit</code> \u7684Register File(\u5b9e\u9a8c\u4e2d\u5b9e\u73b0\u7684\u662f32 x 32-bit)</p> <p>64bit\u662fdouble word\uff0c32bit\u662fword</p> <p>32\u4e2a\u5bc4\u5b58\u5668\uff1a</p> <p></p>"},{"location":"notes/cs/Sys/CO/instruction.html#memory-operand","title":"Memory Operand","text":"<p>Main Memory\u7528\u6765\u5b58\u50a8\u590d\u6742\u7684\u6570\u636e\uff0c\u5728\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u65f6\uff0c\u9700\u8981<code>load</code>\u5c06\u6570\u636e\u4eceMemory\u4e2d\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u9700\u8981<code>store</code>\u56deMemory\u4e2d\u3002</p> <p>Memory is byte addressed: \u6bcf\u4e2a\u5730\u5740\u90fd\u662f\u4e00\u4e2a8-bit\u7684byte\uff0c\u8bbf\u95ee\u65f6\u662f\u6309\u7167byte\u8bbf\u95ee\u7684\u3002</p> <ul> <li>Endian</li> </ul> <p>\u5927\u5c0f\u7aef\uff1a\u5c31\u662f\u6307\u6570\u636e\u5728\u5185\u5b58\u4e2d\u5b58\u50a8\u7684\u987a\u5e8f\u3002</p> Big or Little Endian <p></p> <ul> <li>Word Alignment </li> </ul> <p>RISC-V\u4e2d\uff0c\u4e0d\u8981\u6c42\u8fdb\u884c\u5730\u5740\u5bf9\u9f50\uff0c\u4f46\u662f\u5bf9\u9f50\u7684\u60c5\u51b5\u662f\u66f4\u597d\u7684</p> <p>\u4e00\u4e2aword\u662f\u56db\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u5bf9\u9f50\u7684\u8d77\u59cb\u5730\u5740\u4e00\u5b9a\u662f4\u7684\u500d\u6570\uff0c\u4e5f\u5c31\u662f0\uff0c4\uff0c8\u2026\u2026\uff0c\u8fd9\u4e9b\u5730\u5740\u7684\u4e8c\u8fdb\u5236\u7801\u90fd\u662f\u672b\u7aef\u4e24\u4e2abit\u4e3a0\u7684\uff0c\u800c\u5982\u679c\u6309\u7167halfword\u8bbf\u95ee\uff0c\u5730\u5740\u7684\u672b\u7aef\u4e00\u4e2abit\u4e3a0\u5373\u53ef\u3002</p> Memory Alignment <p></p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\u8bb2\u89e3\u600e\u6837\u8fdb\u884c\u4e00\u6b21\u8fd0\u7b97\uff1a\u8bb2\u89e3\u7684\u4f8b\u5b50\u90fd\u662f\u6309\u7167double word\uff088 bytes 64-bit\uff09\u8fdb\u884c\u64cd\u4f5c\u7684\u3002</p> <pre><code>    A[12] = h + A[8]\n    //h in x21, base address of A in x22\n</code></pre> <pre><code>    ld x9, 64(x22) \n    add x9, x21, x9\n    sd x9, 96(x22)\n</code></pre> <p><code>ld</code>\u6307\u4ee4\u768464\u662f\u504f\u79fb\u91cf\uff08offset\uff09\uff0cx22\u662f\u57fa\u5730\u5740\uff0cx9\u662f\u76ee\u6807\u5bc4\u5b58\u5668</p> <p>\u56e0\u4e3a\u6211\u4eec\u7684\u57fa\u5740\u662fx22\uff0c\u7b2c\u516b\u4e2adouble word\u7684\u5730\u5740\u5c31\u662f8 * 8 = 64\uff0c\u6240\u4ee5\u504f\u79fb\u91cf\u662f64</p> <p>\u540c\u7406\u5728<code>sd</code>\u6307\u4ee4\u4e2d\uff0c96\u662f\u504f\u79fb\u91cf</p>"},{"location":"notes/cs/Sys/CO/instruction.html#immediate-operand","title":"Immediate Operand","text":"<p>\u5982\u679c\u8bf4\u4e00\u4e2a\u5e38\u6570\u5b58\u5728\u4e8e\u4e00\u4e2a\u5730\u5740\u4e2d\uff0c\u90a3\u4e48\u5728\u5bf9\u4e00\u4e2a\u5bc4\u5b58\u5668\u589e\u52a0\u4e00\u4e2a\u5e38\u6570\u65f6\uff0c\u5c31\u9700\u8981\u4f7f\u7528<code>ld</code>\u6307\u4ee4\uff0c\u5c06\u5e38\u6570\u4eceMemory\u4e2d\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u518d\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u3002</p> <p>\u4e3a\u4e86\u51cf\u5c11\u6307\u4ee4\u4e2a\u6570\uff08\u4e0d\u4f7f\u7528ld\u6307\u4ee4\uff09\uff0cRISC-V\u4e2d\u5f15\u5165\u4e86\u7acb\u5373\u6570\uff08Immediate\uff09\uff0c\u7acb\u5373\u6570\u662f\u76f4\u63a5\u7f16\u7801\u5728\u6307\u4ee4\u4e2d\u7684\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u518d\u4eceMemory\u4e2d\u52a0\u8f7d\u3002</p> <pre><code>    ld x9, AddressConstant4(x3) // x9 = constant 4\n    add x22, x22, x9\n\n    ||\n\n    addi x22, x22, x9\n</code></pre>"},{"location":"notes/cs/Sys/CO/instruction.html#representation-of-instructions","title":"Representation of Instructions","text":"<p>\u6240\u6709\u7684\u6307\u4ee4\u5728\u673a\u5668\u4e2d\u90fd\u662f\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u7684\uff0c\u88ab\u79f0\u4f5cMachine Code\u673a\u5668\u7801\uff0c\u4efb\u4f55\u7684\u6307\u4ee4\u5728\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u90fd\u662f\u5bf9Machine Code\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u4e00\u90e8\u5206\u5c06\u4f1a\u8bb2\u89e3\u5982\u4f55\u5bf9\u6307\u4ee4\u8fdb\u884c\u7f16\u7801\u4f7f\u5176\u6210\u4e3aMachine Code\u3002</p> <p>\u6211\u4eec\u5c06x0-x31\u5bc4\u5b58\u5668\u6620\u5c04\u52300-31\u8fd9\u4e9b\u6570\u5b57\uff0c\u56e0\u6b64\u5bc4\u5b58\u5668\u7684\u540d\u5b57\u5c31\u53d8\u6210\u4e860-31</p> <p>RISC-V\u4e2d\uff0c\u6307\u4ee4\u7684\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c32-bit</p> <p>\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6211\u4eec\u752816\u8fdb\u5236\u8868\u793a\u6307\u4ee4\uff0c\u56e0\u4e3a16\u8fdb\u5236\u8868\u793a\u7684\u6307\u4ee4\u66f4\u77ed\uff0c\u66f4\u65b9\u4fbf\u3002</p> <p>\u6709\u56db\u79cd\u57fa\u7840\u7684\u6307\u4ee4\u683c\u5f0f(R/I/S/U),\u518d\u6839\u636e\u7acb\u5373\u6570\u89e3\u7801\u7684\u4e0d\u540c\u5206\u51fa\u4e24\u79cd(B/J),\u5171\u516d\u79cd</p> \u5e38\u89c1\u6307\u4ee4\u7f16\u7801 <p></p>"},{"location":"notes/cs/Sys/CO/instruction.html#r-type","title":"R-Type","text":"<p>\u4f7f\u7528\u5bc4\u5b58\u5668\u8fdb\u884c\u6570\u5b57\u903b\u8f91\u8fd0\u7b97\u7684\u6307\u4ee4</p> \\[ rd = rs1 \\text{ op } rs2 \\] <p>\u5bf9\u4e8e\u79fb\u4f4d\u8fd0\u7b97\uff0crs2\u662fshift amount</p> <ul> <li>opcode: \u64cd\u4f5c\u7801\uff0c\u6709128\u79cd\u64cd\u4f5c\uff0c\u4f5c\u4e3a\u6307\u4ee4\u7684\u5927\u7c7b\u533a\u5206</li> <li>rd: \u76ee\u6807\u5bc4\u5b58\u5668</li> <li>rs1: \u7b2c\u4e00\u4e2a\u6e90\u5bc4\u5b58\u5668</li> <li>rs2: \u7b2c\u4e8c\u4e2a\u6e90\u5bc4\u5b58\u5668</li> <li>funct3\u30017: \u529f\u80fd\u7801\uff0c\u4f5c\u4e3aopcode\u7684\u8865\u5145</li> </ul> <p>\u6bd4\u5982\u8bf4\u52a0\u6cd5\u548c\u51cf\u6cd5\uff0c\u4ed6\u4eec\u7684opcode\u90fd\u662f0110011\uff0c\u4f46\u662f\u4ed6\u4eec\u7684funct3\u4e0d\u540c\uff0c\u52a0\u6cd5\u662f000\uff0c\u51cf\u6cd5\u662f001</p>"},{"location":"notes/cs/Sys/CO/instruction.html#i-type","title":"I-Type","text":"<p>\u4f7f\u7528\u5bc4\u5b58\u5668\u548c\u7acb\u5373\u6570\u8fdb\u884c\u6570\u5b57\u903b\u8f91\u8fd0\u7b97\u7684\u6307\u4ee4\uff0c\u4ee5\u53caload\u6307\u4ee4</p> \\[ rd = rs1 \\text{ op } imm \\] <ul> <li>rs1: \u6e90\u5bc4\u5b58\u5668</li> <li>rd: \u76ee\u6807\u5bc4\u5b58\u5668</li> <li>imm: \u7acb\u5373\u6570 \u7531rs2\u548cfunct7\u5408\u5e76\u768412\u4f4d\u7acb\u5373\u6570 2's Complement, sign extended</li> <li>funct3: \u529f\u80fd\u7801</li> </ul> <p>\u7acb\u5373\u6570\u662f<code>{{20{inst[31]}}, inst[31:20]}</code>\uff0c\u4e5f\u5c31\u662f\u5bf9<code>imm[11:0]</code>\u8fdb\u884c\u7b26\u53f7\u6269\u5c55\u523032\u4f4d</p> <p>\u79fb\u4f4d\u64cd\u4f5c\u4e5f\u5c5e\u4e8e\u662fI-Type\u7684\u4e00\u79cd\uff0c\u4f46\u662f\u79fb\u4f4d\u64cd\u4f5c\u5c06I-Type\u7684imm\u5206\u4e3a\u4e86\u4e24\u90e8\u5206\uff0c\u9ad86\u4f4d\u7684\u90e8\u5206\u662ffunct6,\u4f4e6\u4f4d\u7684\u90e8\u5206\u662fimmed</p> <p>\u5bf9<code>sll srl</code>\u6307\u4ee4\u662f\u79fb\u4f4d\u5e76\u88650</p> <p>\u5bf9<code>slli srli</code>\u6307\u4ee4\u662f\u79fb\u4f4di\u4f4d,\u4e5f\u5c31\u662f\u4e58\u6216\u9664\u4ee52\u7684i\u6b21\u65b9(unsigned)</p> <p>\u5728\u7b97\u6570\u903b\u8f91\u79fb\u4f4d(<code>sra</code>)\u4e2d,\u7b26\u53f7\u4f4d\u4fdd\u6301\u4e0d\u53d8,\u56e0\u6b64\u79fb\u4f4d\u540e\u9700\u8981\u8865\u5168\u7b26\u53f7\u4f4d</p>"},{"location":"notes/cs/Sys/CO/instruction.html#s-type","title":"S-Type","text":"<p>store\u7c7b\u6307\u4ee4</p> \\[ rs1 = [rs2 + imm] \\] <ul> <li>rs1: \u653ebase address</li> <li>rs2: \u653esource operand</li> <li>funct3: \u5bf9\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b(byte, halfword, word)\u8fdb\u884c\u533a\u5206</li> </ul> <p>\u7acb\u5373\u6570\u662f<code>{{20{inst[31]}}, inst[31:25], inst[11:7]}</code></p>"},{"location":"notes/cs/Sys/CO/instruction.html#b-typesb","title":"B-Type(SB)","text":"<p>\u7531S-Type\u6307\u4ee4\u5206\u5316\u800c\u6765\uff0c\u533a\u522b\u662f\u7acb\u5373\u6570\u7684\u8bfb\u53d6\u65b9\u5f0f\u4e0d\u540c\uff0c\u662f\u6240\u6709\u5206\u652f\u7c7b\u6307\u4ee4\u7684\u7f16\u7801\u65b9\u5f0f</p> <p>\u5de6\u8fb9\u9ad8\u4f4dimm\u662f<code>imm[12, 10:5]</code>\uff0c\u53f3\u8fb9\u4f4e\u4f4dimm\u662f<code>imm[4:1, 11]</code></p> <p>\u7acb\u5373\u6570\u662f<code>{{19{inst[31]}}, inst[31], inst[7], inst[30:25], inst[11:8], 1'b0}</code></p>"},{"location":"notes/cs/Sys/CO/instruction.html#u-type","title":"U-Type","text":"<p>\u53ea\u6709lui\u6307\u4ee4\u548cauipc\u6307\u4ee4\uff0c\u7528\u4e8e\u5b58\u653e\u9ad8\u4f4d\u7acb\u5373\u6570</p> <p>\u7acb\u5373\u6570\u662f<code>{inst[31:12], 12'b0}</code></p> <p>\u5c31\u662f\u586b\u5145\u9ad820\u4f4d\uff0c\u4f4e12\u4f4d\u4e3a0</p>"},{"location":"notes/cs/Sys/CO/instruction.html#j-typeuj","title":"J-Type(UJ)","text":"<p>\u4ec5\u6709jal\u6307\u4ee4\uff0c\u7528\u4e8e\u5b58\u653e\u8df3\u8f6c\u5730\u5740</p> <p>\u7531U-Type\u6307\u4ee4\u5206\u5316\u800c\u6765\uff0c\u533a\u522b\u662f\u7acb\u5373\u6570\u7684\u8bfb\u53d6\u65b9\u5f0f\u4e0d\u540c</p> <p>\u5c06U-Type\u7684\u7acb\u5373\u6570\u90e8\u5206\u6539\u4e3a\u4e86\uff1a</p> <p><code>{{11{inst[31]}}, inst[31], inst[19:12], inst[20], inst[30:21], 1'b0}</code></p>"},{"location":"notes/cs/Sys/CO/instruction.html#instructions-for-making-decisions","title":"Instructions for Making Decisions","text":""},{"location":"notes/cs/Sys/CO/instruction.html#branch","title":"Branch","text":"<pre><code>beq reg1, reg2, Label // branch if equal\n</code></pre> <p>\u5982\u679c<code>reg1 == reg2</code>\uff0c\u5219\u8df3\u8f6c\u5230Label\u5904\u6267\u884c</p> <pre><code>bne reg1, reg2, Label // branch if not equal\n</code></pre> <p>\u5982\u679c<code>reg1 != reg2</code>\uff0c\u5219\u8df3\u8f6c\u5230Label\u5904\u6267\u884c</p> <pre><code>blt reg1, reg2, Label // branch if less than\n</code></pre> <p>\u5982\u679c<code>reg1 &lt; reg2</code>\uff0c\u5219\u8df3\u8f6c\u5230Label\u5904\u6267\u884c</p> <pre><code>bge reg1, reg2, Label // branch if greater than or equal\n</code></pre> <p>\u5982\u679c<code>reg1 &gt;= reg2</code>\uff0c\u5219\u8df3\u8f6c\u5230Label\u5904\u6267\u884c</p> if-else <p></p> while loop <p></p>"},{"location":"notes/cs/Sys/CO/instruction.html#slt","title":"SLT","text":"<pre><code>slt rd, rs1, rs2 // set on less than\n</code></pre> <p>\u901a\u5e38\u7528\u6765\u6bd4\u8f83\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5b58\u653e\u5728\u4e00\u4e2a\u4e34\u65f6\u5bc4\u5b58\u5668\u4e2d\u4f5c\u4e3a\u6807\u8bb0\uff0c\u5982\u679c<code>rs1 &lt; rs2</code>\uff0c\u5219\u5c06\u4e34\u65f6\u5bc4\u5b58\u5668\u7f6e1\uff0c\u5426\u5219\u7f6e0\uff0c\u8fd9\u4e2a\u4e34\u65f6\u5bc4\u5b58\u5668\u548c0\u76f8\u6bd4\u662f\u5426\u76f8\u7b49\u53ef\u4ee5\u4f5c\u4e3a<code>beq</code>\u6307\u4ee4\u7684\u5224\u65ad\u6761\u4ef6</p>"},{"location":"notes/cs/Sys/CO/instruction.html#jump","title":"Jump","text":"<pre><code>jalr rd, imm(rs1) // jump and link register\n</code></pre> <p>\u5f53\u524dpc\u5730\u5740\u7684\u4e0b\u4e00\u4e2a\u5730\u5740(pc+4)\u5b58\u653e\u5728rd\u4e2d(\u4e3a\u4e86\u80fd\u56de\u6765)\uff0c\u7136\u540e\u8df3\u8f6c\u5230rs1+imm\u5904</p> <p>pc = (imm+rs1) &amp; 0xFFFFFFFE \u5373\u6700\u4f4e\u4f4d\u4f1a\u88ab\u8bbe\u4e3a 0</p> switch <p></p> <p>x6\u5185\u5b58\u50a8\u7684\u662f\u5bf9\u5e94\u7684\u51e0\u4e2acase\u4e2d\u7684\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\u2014\u2014\u8df3\u8f6c\u8868</p> <p>\u8df3\u8f6c\u8bed\u53e5\u5148\u5bf9\u8df3\u8f6c\u8fb9\u754c\u8fdb\u884c\u68c0\u67e5\uff0c\u68c0\u67e5\u65e0\u8bef\u540e\u628ak\u5de6\u79fb\u4e09\u4f4d\u653e\u5230\u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u4e0e\u8df3\u8f6c\u5730\u5740\u7684\u57fa\u5740\u76f8\u52a0</p> <p>\u8fd9\u91ccload\u6307\u4ee4\u7684\u4f5c\u7528\uff1a</p> <p>\u5148\u524d\u6211\u4eec\u7528x7\u4f5c\u4e3a\u4e00\u4e2a\u4e34\u65f6\u5bc4\u5b58\u5668\u7528\u4e8e\u5b58\u50a8\u8df3\u8f6c\u8868\u4e2d\u9700\u8981\u8df3\u8f6c\u7684\u5730\u5740\uff0c\u8fdb\u884cload\u540e\uff0cx7\u4ecd\u7136\u662f\u4e00\u4e2a\u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u4f46\u662f\u8fd9\u65f6x7\u88c5\u8f7d\u7684\u5c31\u662f\u8fd9\u4e2a\u5730\u5740\u4e2d\u7684\u4fe1\u606f\uff0c\u4e5f\u5c31\u662fjalr\u9700\u8981\u8df3\u8f6c\u5230\u7684\u7a0b\u5e8f\u7684\u4f4d\u7f6e\uff08\u4ecd\u7136\u662f\u4e2a\u5730\u5740\uff09</p> <pre><code>jal rd, imm // jump and link\n</code></pre> <p>rd = pc+4, pc = pc+imm \u5373\u5c06\u5f53\u524d\u6307\u4ee4\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\u5b58\u5165 rd\uff0c\u7136\u540e\u76f8\u5bf9\u8df3\u8f6c\u5230 imm \u5904</p>"},{"location":"notes/cs/Sys/CO/instruction.html#basic-block","title":"Basic Block","text":"<p>\u57fa\u672c\u5757\uff1a\u6700\u5c0f\u7684\u7a0b\u5e8f\u4ee3\u7801\u5757\uff0c\u4e00\u4e2a\u5757\u5185\u7684\u6307\u4ee4\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u5757\u4e0e\u5757\u4e4b\u95f4\u901a\u8fc7\u8df3\u8f6c\u6307\u4ee4\u8fde\u63a5\uff0c\u4f46\u662f\u4e0d\u4f1a\u6709\u6307\u4ee4\u8df3\u8f6c\u5230\u57fa\u672c\u5757\u7684\u5185\u90e8</p>"},{"location":"notes/cs/Sys/CO/instruction.html#procedure-support","title":"Procedure Support","text":"<p>\u5bf9\u51fd\u6570\u7684\u652f\u6301:</p> <ul> <li>Place parameters</li> <li>Transfer control(jump)</li> <li>Acquire storage resources</li> <li>Perform tasks</li> <li>Place results </li> <li>Return control</li> </ul>"},{"location":"notes/cs/Sys/CO/instruction.html#caller","title":"Caller","text":"<p>use <code>jal</code>\u6307\u4ee4 jump and link</p> <pre><code>jal x1 ProcedureAddress\n</code></pre> <ul> <li>x1: \u5b58\u653epc+4\uff0c\u4e5f\u5c31\u662f\u8c03\u7528\u51fd\u6570\u540e\u9700\u8981\u8fd4\u56de\u7684\u5730\u5740\uff0c\u540c\u65f6\u8df3\u8f6c\u5230<code>PC = PC+ProcedureAddress</code>\u7684\u4f4d\u7f6e</li> </ul>"},{"location":"notes/cs/Sys/CO/instruction.html#callee","title":"Callee","text":"<p>use <code>jalr</code>\u6307\u4ee4 jump and link register</p> <pre><code>jalr x0, 0(x1)\n</code></pre> <ul> <li>x0: \u56fa\u5b9a\u4e3a0</li> <li>x1: \u8df3\u56de\u5230\u8fd4\u56de\u7684\u4e0b\u4e00\u4e2a\u6307\u4ee4\u7684\u5730\u5740</li> </ul> <p>x0 \u662f\u5728 rd\u7684\u4f4d\u7f6e\u4e0a\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u672c\u6765\u662f\u5b58\u653ePC+4\u7684\uff0c\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u7528x0\u6765\u63a5\u6536\uff0c\u56e0\u4e3a\u5728\u51fd\u6570\u8fd4\u56de\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u6b64\u6211\u4eec\u7528\u4e0d\u4f1a\u88ab\u6539\u53d8\u7684x0\u6765\u63a5\u6536</p>"},{"location":"notes/cs/Sys/CO/instruction.html#arguments","title":"Arguments","text":"<p>\u901a\u8fc7\u5bc4\u5b58\u5668\u4f20\u9012\u53c2\u6570</p> <p>\u7528\u7684\u662fx10-x17\u8fd98\u4e2a\u5bc4\u5b58\u5668\uff0c\u5728\u8fd9\u91cc\u8fd9\u51e0\u4e2a\u5bc4\u5b58\u5668\u88ab\u79f0\u4e3aa0-a7\u5bc4\u5b58\u5668</p> <p>x1\u5bc4\u5b58\u5668\u662f\u4fdd\u7559\u8fd4\u56de\u5730\u5740\u7684\u5bc4\u5b58\u5668\uff0c\u5728\u8fd9\u91cc\u88ab\u79f0\u4e3ara\u5bc4\u5b58\u5668</p>"},{"location":"notes/cs/Sys/CO/instruction.html#leaf-function","title":"Leaf Function","text":"<p>\u662f\u4e3a\u4e86\u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u80fd\u591f\u4fdd\u5b58\u8fd4\u56de\u5730\u5740\u548c\u4e00\u4e9b\u4e34\u65f6\u53d8\u91cf</p> <p>\u6808\u7684\u5730\u5740\u5206\u914d\u662f\u4ece\u9ad8\u5730\u5740\u5230\u4f4e\u5730\u5740\u7684</p> <p>\u6808\u9876\u7684\u6307\u9488\u662fsp\u5bc4\u5b58\u5668\uff0c\u6307\u5411\u538b\u5165\u6808\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u6570\u636e</p> <ul> <li>Push\uff1a</li> </ul> <pre><code>addi sp, sp, -8\nsd xxx, 0(sp)\n</code></pre> <ul> <li>Pop</li> </ul> <pre><code>ld xxx, 0(sp)\naddi sp, sp, 8\n</code></pre> <p></p> leaf function <p></p> <p>\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5728\u8fdb\u884c\u8fd0\u7b97\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7528\u5230\u4e86x5\uff0cx6\uff0cx20\u8fd9\u4e09\u4e2a\u975e\u53c2\u6570\u5bc4\u5b58\u5668\u4f5c\u4e3ag+h\uff0ci+j\u7684\u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u4f46\u662f\u5728\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u4fdd\u5b58\u8fd9\u4e09\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\uff0c\u56e0\u6b64\u5982\u679c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u8fd9\u4e09\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u503c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\uff0c\u5c06\u8fd9\u4e09\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u538b\u5165\u6808\u4e2d\uff0c\u7136\u540e\u5728\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u518d\u5c06\u8fd9\u4e09\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u5f39\u51fa\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e09\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u51fd\u6570\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u6808\u5728\u8fd9\u91cc\u8d77\u5230\u4e86\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u5b58\u50a8\u7684\u4f5c\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u79f0\u8c03\u7528\u8005\u548c\u88ab\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u8fd9\u6bb5\u6808\u4e3a\u8c03\u7528\u6808\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u505a\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u6d6a\u8d39\u4e86\u5927\u91cf\u6307\u4ee4\u5728\u6808\u7684\u538b\u5165\u548c\u5f39\u51fa\u4e0a\uff0c\u6548\u7387\u4e0d\u9ad8\uff0c\u6211\u4eec\u7ea6\u5b9a\uff1a</p> <p>\u5bf9\u5bc4\u5b58\u5668\u8fdb\u884c\u5212\u5206\uff1a</p> <ul> <li>t0-t6: \u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u5b58\u653e\u4e34\u65f6\u53d8\u91cf(\u5185\u90e8\u4e34\u65f6\u7528 \u4e0d\u4fdd\u5b58)</li> <li>s0-s11: \u4fdd\u5b58\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u5b58\u653e\u9700\u8981\u4fdd\u5b58\u7684\u53d8\u91cf(\u5916\u90e8\u7528 \u4f1a\u4fdd\u5b58)</li> </ul> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c3d\u91cf\u4f7f\u7528t0-t6\u8fd9\u4e9b\u4e0d\u7528\u5165\u6808\u7684\u5bc4\u5b58\u5668\uff0c\u5982\u679c\u9700\u8981\u4fdd\u5b58\u7684\u53d8\u91cf\u592a\u591a\uff0c\u90a3\u4e48\u518d\u4f7f\u7528s0-s11\u8fd9\u4e9b\u9700\u8981\u5165\u6808\u7684\u5bc4\u5b58\u5668\u3002</p> <p>\u4e0b\u9762\u662f\u5bc4\u5b58\u5668\u7684\u5e38\u7528\u7528\u9014\uff1a</p> \u5bc4\u5b58\u5668 \u540d\u79f0 \u7528\u9014\u63cf\u8ff0 saver x0 zero \u786c\u4ef60 x1 ra \u8fd4\u56de\u5730\u5740 caller x2 sp \u6808\u6307\u9488 callee x3 gp \u5168\u5c40\u6307\u9488 x4 tp \u7ebf\u7a0b\u6307\u9488 x5 t0 \u4e34\u65f6\u53d8\u91cf/\u5907\u7528\u94fe\u63a5\u5bc4\u5b58\u5668 caller x6-7 t1-2 \u4e34\u65f6\u53d8\u91cf caller x8 s0/fp \u4fdd\u5b58\u5bc4\u5b58\u5668/\u5e27\u6307\u9488 callee x9 s1 \u4fdd\u5b58\u5bc4\u5b58\u5668 callee x10-11 a0-1 \u51fd\u6570\u53c2\u6570/\u8fd4\u56de\u503c caller x12-17 a2-7 \u51fd\u6570\u53c2\u6570 caller x18-27 s2-11 \u4fdd\u5b58\u5bc4\u5b58\u5668 callee x28-31 t3-6 \u4e34\u65f6\u53d8\u91cf caller"},{"location":"notes/cs/Sys/CO/instruction.html#nested-function","title":"Nested Function","text":"<p>leaf func\u4e2d\u7684\u6808\u662f\u5355\u6b21\u7684\uff0c\u521a\u5f00\u59cbpush\uff0c\u7ed3\u675fpop</p> n! <p></p> <p>\u5bf9\u6574\u4f53\u7684\u8fc7\u7a0b\u8fdb\u884c\u5206\u6790\uff1a</p> <ol> <li>\u9012\u5f52\u8c03\u7528     \u5728\u8fdb\u884c\u9012\u5f52\u65f6\uff0c\u7531\u4e8en\u4e00\u76f4&gt;0\uff0c\u56e0\u6b64\u4f1a\u4e00\u76f4\u9012\u5f52\u4e0b\u53bb\uff0c\u76f4\u5230n==0\u4e3a\u6b62\uff0c\u4e5f\u5c31\u662f\u5728fact\u90e8\u5206bge\u524d\u548cL1\u90e8\u5206jal\u8bed\u53e5\u4e4b\u95f4\u6765\u56de\u8df3\u8f6c\u5230n==0</li> <li> <p>\u6062\u590d\u5e76\u8ba1\u7b97     \u5230n==0\u540e\uff0c\u5148\u8fdb\u884c\u4e00\u6b21\u5bf9base case\u7684\u5904\u7406\uff0c\u4e5f\u5c31\u662ffact(0) = 1\uff0c\u7136\u540e\u8fdb\u884c\u6062\u590d\uff0c\u6062\u590d\u7684\u8fc7\u7a0b\u662fL1\u90e8\u5206jal\u8bed\u53e5\u7684\u8fd4\u56de\uff0c\u4e00\u76f4\u5728L1\u90e8\u5206jal\u8bed\u53e5\u548cjalr\u8bed\u53e5\u4e4b\u95f4\u6765\u56de\u8df3\u8f6c\uff0c\u76f4\u5230\u8fd4\u56de\u5230\u6808\u9876</p> </li> <li> <p>\u8ba1\u7b97\u6700\u7ec8\u7ed3\u679c     \u6700\u7ec8jalr\u8bed\u53e5\u8fd4\u56de\u540e\uff0cx10\u4e2d\u5b58\u50a8\u7684\u5c31\u662f\u6700\u7ec8\u7684\u7ed3\u679c</p> </li> </ol> <p>\u4ee5n=3\u4e3a\u4f8b\uff1a</p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p></p> <p>FP\u662f\u5e27\u6307\u9488frame pointer\uff0c\u7528\u6765\u6307\u5411\u5f53\u524d\u51fd\u6570\u7684\u6808\u5e27\u7684\u6808\u5e95\uff0c\u53ea\u6709\u5f53\u8df3\u8f6c\u51fd\u6570\u65f6\uff0c\u624d\u4f1a\u6539\u53d8FP\u7684\u503c</p>"},{"location":"notes/cs/Sys/CO/instruction.html#memory-layout","title":"Memory Layout","text":"<ul> <li>Text: program code \u5c31\u662f\u653e\u6307\u4ee4</li> <li>Static data: global variables</li> <li>Dynamic data: heap \u52a8\u6001\u6570\u636e-malloc\u7528\u7684</li> <li>Stack: automatic variables \u81ea\u52a8\u53d8\u91cf</li> </ul>"},{"location":"notes/cs/Sys/CO/instruction.html#comunicate","title":"Comunicate","text":"<p>\u4e0d\u540c\u7f16\u7801\u6709\u4e0d\u540c\u7684\u6570\u636e\u957f\u5ea6\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u4e0d\u540c\u7684load\u548cstore\u6307\u4ee4</p> <ul> <li>lb: load byte </li> <li>lh: load halfword</li> <li>lw: load word</li> <li> <p>ld: load doubleword</p> </li> <li> <p>lbu: load byte unsigned</p> </li> <li>lhu: load halfword unsigned</li> </ul> <p>\u56e0\u4e3a\u5bc4\u5b58\u5668\u662f64\u4f4d\u7684\uff0c\u56e0\u6b64\u8bfb\u53d6\u51fa\u6765\u7684\u6570\u636e\u9700\u8981\u8fdb\u884c\u7b26\u53f7\u6269\u5c55\uff08<code>lb</code>\uff09\u6216\u96f6\u6269\u5c55\uff08<code>lbu</code>\uff09</p> <p>\u6bd4\u5982\u5728\u8bfb\u53d6A[i]\u65f6\uff0c\u5982\u679cA\u662fint\u578b\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8bfb\u53d64\u4e2a\u5b57\u8282\uff0c\u5982\u679cA\u662fshort\u578b\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8bfb\u53d62\u4e2a\u5b57\u8282</p> <ul> <li>sb: store byte</li> <li>sh: store halfword</li> <li>sw: store word</li> <li>sd: store doubleword</li> </ul> <p>store\u6307\u4ee4\u5c31\u4e0d\u9700\u8981\u8fdb\u884c\u7b26\u53f7\u6269\u5c55\u6216\u96f6\u6269\u5c55\u4e86\uff0c\u6211\u4eec\u53ea\u662f\u628a\u5bf9\u5e94\u90e8\u5206\u653e\u5230\u5bf9\u5e94\u4f4d\u7f6e\u4e0a</p> <p>\u4e0a\u8ff0\u56db\u4e2a\u6307\u4ee4\u5c31\u662f\u5b58\u5728\u5bc4\u5b58\u5668\u7684rightmost 8/16/32/64 bits</p> string copy <p></p> <p>\u4f46\u662fi\u5e94\u8be5\u5b58\u5728\u4e34\u65f6\u5bc4\u5b58\u5668\u800c\u4e0d\u662fs3\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u6808\u6765\u5b58\u4e86</p>"},{"location":"notes/cs/Sys/CO/instruction.html#addressing","title":"Addressing","text":""},{"location":"notes/cs/Sys/CO/instruction.html#wide-immediate","title":"Wide Immediate","text":"<p>\u5bf9\u4e8ejal\u6307\u4ee4\uff0c\u5982\u679c\u7acb\u5373\u6570\u662f32\u4f4d\u7684\u5c31\u8d85\u8fc7\u4e86\u4ed6\u7684\u8df3\u8f6c\u8303\u56f4\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4f7f\u7528<code>lui</code>\u8fd9\u4e2a\u6307\u4ee4\u5148\u5c06\u6240\u9700\u8981\u8df3\u8f6c\u7684\u6307\u4ee4\u7684\u5730\u5740\u7684\u9ad820\u4f4d\u653e\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u7136\u540e\u7528<code>jalr</code>\u6307\u4ee4\u5c06\u8fd9\u4e2a\u5bc4\u5b58\u5668\u548c\u504f\u79fb\u91cf\u76f8\u52a0\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7684\u8df3\u8f6c\u5730\u5740</p> 32-bit immediate <p></p> <p>\u8fd9\u91cc\u662f\u52a0\u4e0a977\u800c\u4e0d\u662f976\uff0c\u56e0\u4e3a\u5728lui\u65f6\u6269\u5c55\u4e86\u7b26\u53f7\u4f4d\uff0c\u5176\u5b9e\u6211\u4e5f\u4e0d\u662f\u5f88\u61c2\u4e3a\u4ec0\u4e48\u52a0\u4e0a1\uff0c\u4f46\u662f\u65e2\u7136\u8bf4\u4e86\u5c31\u8bb0\u4f4f\u5427\uff08\u6700\u8fd1\u4e8b\u60c5\u592a\u591a \u5988\u7684 \u6446\u4e86\u3002\u3002\u3002\uff09</p> <p>po\u4e00\u5f20\u4e66\u4e0a\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u91ca\u5427 \u6211\u89c9\u5f97\u5927\u4f53\u610f\u601d\u5c31\u662f\u770b\u7b2c11\u4f4d\u662f0\u8fd8\u662f1\uff0c\u5982\u679c\u662f0\uff0c\u90a3\u4e48\u5c31\u52a0976\uff0c\u5982\u679c\u662f1\uff0c\u90a3\u4e48\u5c31\u52a0977</p> <p></p>"},{"location":"notes/cs/Sys/CO/instruction.html#branch-addressing","title":"Branch Addressing","text":"<p>\u662f\u76f8\u5bf9\u5730\u5740\u8df3\u8f6c</p> <ul> <li>PC-relative addressing\uff1a</li> </ul> \\[ \\begin{align} Target &amp;= PC + Branch\\_offset \\\\            &amp;= PC + 2\\times imm \\end{align} \\] <p>\u5728B-Type\u6307\u4ee4\u4e2d\uff0c\u7acb\u5373\u6570\u662f<code>{{19{inst[31]}}, inst[31], inst[19:12], inst[20], inst[30:25], inst[11:8], 1'b0}</code>\uff0c\u53ef\u4ee5\u770b\u5230\u6700\u4f4e\u4f4d\u662f0\uff0c\u56e0\u6b64Branch_offset\u4e00\u5b9a\u662f\u5076\u6570</p> <p>Instruction to Code</p> <p></p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u9700\u8981\u8fdb\u884c2000\u7684\u8df3\u8f6c\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u8fdb\u884c\u7f16\u7801\u65f6\uff0cinstruction\u4e2d\u7684\u7acb\u5373\u6570\u88ab\u7f16\u7801\u5230\u4e86\u5bc4\u5b58\u5668\u7684\u9ad811\u4f4d\uff0c\u7b2c0\u4f4d\u662f0\uff0c\u56e0\u6b64\u5728instruction\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7f16\u78011000\u7684\u7acb\u5373\u6570\uff0c\u5c31\u53ef\u4ee5\u5b8c\u62102000\u7684\u8df3\u8f6c</p> Encode while loop <p></p> <p></p> <ul> <li>bne: \u8fdb\u884c\u8df3\u8f6c\u662f\u7531\u81ea\u8eab\u5230Exit\u7684\u5730\u5740\uff0coffset = 80024-80012 = 12\uff0c\u4f46\u662f\u7f16\u7801\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728rd\u4e5f\u5c31\u662foffset\u4e2d\u7f16\u78010110 = 6</li> </ul> <p>beq\u4e5f\u662f\u540c\u7406\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cbeq\u7684offset\u662f\u8d1f\u7684\uff0c</p> <p>RISC-V Addressing Summary</p> <p></p> <pre><code>1. addi x5, x6, 4 \n2. add x5, x5, x6\n3. ld x5, 100(x6)\n4. beq x5, x0, L1\n</code></pre>"},{"location":"notes/cs/Sys/CO/instruction.html#disassembly","title":"Disassembly","text":"<p>\u53cd\u6c47\u7f16\uff1a\u5c06Machine Code\u8f6c\u6362\u4e3aAssembly Code</p> Table <p></p>"},{"location":"notes/cs/Sys/CO/instruction.html#synchronization-and-prgram-translation","title":"Synchronization and Prgram Translation","text":"<p>\u8fd9\u91ccmade\u8bf4\u662f\u4e86\u89e3\u4e00\u4e0b\u7684\uff0c\u8865\u96ea\u5566</p> <p>\u653e\u4e00\u4e0bnoughtq\u7684\u7b14\u8bb0\u94fe\u63a5\ud83d\udd17\u5427 \u5199\u7684\u8d85\u7ea7\u597d </p>"},{"location":"notes/cs/Sys/CO/instruction.html#c-in-risc-v","title":"C in RISC-V","text":""},{"location":"notes/cs/Sys/CO/instruction.html#sort","title":"Sort","text":""},{"location":"notes/cs/Sys/CO/memory.html","title":"Memory","text":""},{"location":"notes/cs/Sys/CO/memory.html#memory-technology","title":"Memory Technology","text":"<ul> <li> <p>SRAM: Static Random Access Memory \u9759\u6001\u968f\u673a\u5185\u5b58\u8bbf\u95ee\u5b58\u50a8\u5668</p> <ul> <li>\u5b83\u53ea\u6709\u4e00\u4e2a\u8bbf\u95ee\u7aef\u53e3\uff0c\u5177\u5907\u8bfb\u548c\u5199\u7684\u80fd\u529b</li> <li>\u8bbf\u95ee\u4efb\u4f55\u6570\u636e\u6240\u9700\u7684\u65f6\u95f4\u662f\u56fa\u5b9a\u7684</li> <li>\u7531\u4e8e\u65e0\u9700\u5237\u65b0 (refresh)\uff0c\u56e0\u6b64\u8bbf\u95ee\u65f6\u95f4\u63a5\u8fd1\u4e8e\u5904\u7406\u5668\u7684\u5468\u671f\u65f6\u95f4</li> <li>\u5e94\u7528\uff1a\u9ad8\u901f\u7f13\u5b58 cache</li> </ul> </li> <li> <p>DRAM: Dynamic Random Access Memory \u52a8\u6001\u968f\u673a\u5185\u5b58\u8bbf\u95ee\u5b58\u50a8\u5668</p> <ul> <li>1 \u4f4d\u6570\u636e\u4ee5\u7535\u8377\u7684\u5f62\u5f0f\u88ab\u5b58\u50a8\u5728 1 \u4e2a\u7535\u5bb9\u4e2d</li> <li>\u7535\u5bb9\u4f1a\u968f\u7740\u65f6\u95f4\u9010\u6e10\u6cc4\u6f0f\u7535\u8377\uff0c\u56e0\u6b64\u9700\u8981\u5b9a\u671f\u5237\u65b0 (refresh) \u4ee5\u4fdd\u6301\u6570\u636e</li> <li>\u8bbf\u95ee\u65f6\u95f4\u53d6\u51b3\u4e8e\u7535\u5bb9\u7684\u5237\u65b0\u65f6\u95f4</li> <li>\u5e94\u7528\uff1a\u4e3b\u5b58</li> </ul> </li> <li> <p>Flash</p> </li> <li>Disk</li> </ul>"},{"location":"notes/cs/Sys/CO/memory.html#intro","title":"Intro","text":"<p>\u5c40\u90e8\u6027locality\u539f\u7406\uff1a</p> <ul> <li> <p>Temporal Locality: \u65f6\u95f4\u5c40\u90e8\u6027</p> <p>\u6700\u8fd1\u8bbf\u95ee\u8fc7\u7684item\uff0c\u5927\u6982\u7387\u4f1a\u88ab\u518d\u6b21\u8bbf\u95ee\uff08loop\uff09</p> </li> <li> <p>Spacial Locality: \u7a7a\u95f4\u5c40\u90e8\u6027</p> <p>\u6700\u8fd1\u8bbf\u95ee\u8fc7\u7684item\u9644\u8fd1\u7684item\uff0c\u5927\u6982\u7387\u4f1a\u88ab\u8bbf\u95ee\uff08array\uff09</p> </li> </ul> <p>\u79bbCPU\u8d8a\u8fd1\u7684memory\uff0c\u8bbf\u95ee\u901f\u5ea6\u8d8a\u5feb\uff0c\u5bb9\u91cf\u8d8a\u5c0f\uff0c\u4ef7\u683c\u8d8a\u8d35</p> <p>Important Items</p> <ul> <li>Block(line): \u64cd\u4f5c\u5355\u5143\uff0c\u5c31\u5982\u4e0a\u56fe\u4ece\u5185\u5b58\u642c\u8fd0\u5230cache\u7684\u5355\u4f4d</li> <li> <p>Hit: \u547d\u4e2d\uff0c\u6211\u4eec\u6240\u9700\u8981\u8bbf\u95ee\u7684\u6570\u636e\u5904\u4e8eupper level\uff08\u8fd9\u91cc\u5c31\u662f\u8bf4\u84dd\u8272\u7684\u65b9\u5757\u5230cache\u4e2d\u4e86\uff09</p> <ul> <li>Hit Ratio\uff1a\u547d\u4e2d\u7387=\u547d\u4e2d\u6b21\u6570/\u8bbf\u95ee\u6b21\u6570\uff0c\u8ba1\u7b97\u673a\u4e2d\u901a\u5e38\u7a0b\u5e8f\u6307\u4ee4\u7684\u547d\u4e2d\u7387\u572890%\u4ee5\u4e0a\uff0c\u6570\u636e\u76f8\u5bf9\u6765\u8bf4\u4f4e\u4e00\u4e9b</li> <li>Hit Time\uff1a\u8bbf\u95eeupper level\u6570\u636e\u7684\u65f6\u95f4\uff0c\u5176\u4e2d\u5305\u62ec\u4e86\u5224\u65ad\u6570\u636e\u662f\u5426\u547d\u4e2d\u7684\u65f6\u95f4</li> </ul> </li> <li> <p>Miss\uff1a\u6240\u9700\u8bbf\u95ee\u7684\u6570\u636e\u6ca1\u6709\u88ab\u62c9\u5230upper level\u4e2d</p> <ul> <li> <p>\u63aa\u65bd\uff1acopy\u4e00\u4e2ablock\u5230upper level\u4e2d</p> <ul> <li>Time taken\uff1a\u642c\u8fd0\u7684\u65f6\u95f4\u6210\u4e3amiss penalty</li> <li>Miss Ratio\uff1a= 1-Hit Ratio</li> <li>Miss Penalty\uff1a\u66ff\u6362upper level\u4e2dblock\u7684\u65f6\u95f4\uff0c\u52a0\u4e0a\u5c06block\u9001\u5230processor\u7684\u65f6\u95f4</li> </ul> </li> </ul> </li> </ul> <p>\u8fd9\u91cc\u6211\u4eec\u8bf4\u7684upper level\u5c31\u662f\u8bf4cache\uff0c\u4f46\u5b9e\u9645\u4e0a\u5728\u8ba1\u7b97\u673a\u4e2d\u53ef\u4ee5\u662f\u7531\u5185\u5b58\u5230cache\uff0c\u4e5f\u53ef\u4ee5\u662f\u786c\u76d8\u5230\u5185\u5b58</p> <p>\u5e38\u89c1\u7684memory hierarchy\uff1a</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u89e3\u51b3\u4e24\u4e2a\u65b9\u9762\u7684\u95ee\u9898\uff1a</p> <ol> <li> <p>The basics of Cache - speed</p> <p>SRAM and DRAM</p> </li> <li> <p>Virtual Memory - size</p> <p>DRAM and Disk</p> </li> </ol>"},{"location":"notes/cs/Sys/CO/memory.html#cache","title":"Cache","text":"<p>\u5185\u5b58\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u5728cache\u4e2d\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u5730\u5740\u5bf9\u5e94\uff0c\u8fd9\u610f\u5473\u7740lower level\u4e2d\u7684\u5f88\u591aitem\u5728upper level\u4e2d\u5171\u4eab\u540c\u4e00\u4e2a\u5730\u5740</p> <p>\u9700\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u5982\u4f55\u786e\u5b9a\u4e00\u4e2a\u6570\u636e\u662f\u5426\u5728cache\u4e2d</li> <li>\u5982\u4f55\u627e\u5230\u5b83</li> </ul>"},{"location":"notes/cs/Sys/CO/memory.html#cache-mapping","title":"Cache Mapping","text":"<ul> <li> <p>Direct Mapping</p> <ul> <li>\u65b9\u6cd5\uff1a\u53d6\u6a21\uff0c\u5c06\u5185\u5b58\u5730\u5740\u7684\u4f4e\u4f4d\u4f5c\u4e3acache\u7684index\uff0c\u5982\u56fe\u5c31\u662f\u53d6\u4f4e3\u4f4d\u4f5c\u4e3aindex</li> <li>tag\uff1a\u5728\u8fdb\u884c\u5b58\u50a8\u65f6\uff0c\u6211\u4eec\u653e\u8fdb\u7684\u4f4d\u7f6e\u662fblock\u7684\u4f4e\u4f4d\uff0c\u4f46\u662f\u5f88\u591a\u4e2ablock\u90fd\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5b58\u50a8\u6570\u636e\u7684\u5b8c\u6574\u5730\u5740\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u5185\u5b58\u5730\u5740\u7684\u9ad8\u4f4d\u4f5c\u4e3atag</li> <li>Valid bit\uff1a\u7528\u4e8e\u5224\u65adcache\u4e2d\u662f\u5426\u5b58\u5728\u6570\u636e</li> </ul> </li> </ul> <p>\u4e0b\u9762\u8fd9\u5f20\u56fe\u7ed9\u51fa\u4e86\u5185\u5b58\u5730\u5740\u4e0e\u9ad8\u901f\u7f13\u5b58\u4e2d\u7684\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb\uff1a</p> <ul> <li>\u8fd9\u91cc\u5730\u5740\u662f64\u4f4d\uff0c</li> </ul> <ul> <li> <p>Byte offset\uff1a\u7531block size\u51b3\u5b9a</p> <ul> <li>\u5f53size\u4e3a1 word\u65f6\uff0coffset\u6709\u4e24\u4f4d</li> <li>\u5f53size\u4e3a4 word\u65f6\uff0coffset\u6709\u56db\u4f4d</li> <li> <p>\u540e\u9762\u6709\u8865\u5145\uff1a</p> \\[ \\text{Byte Offset} = \\log_2(\\text{# bytes per block}) \\] </li> </ul> </li> <li> <p>Index\uff1a\u7531cache size\u51b3\u5b9a\uff0c\u4e5f\u5c31\u662fcache\u4e2d\u7684block\u6570\u91cf</p> <ul> <li>\u5f53cache size\u662f8\u4e2ablock\u65f6\uff0cindex\u67093\u4f4d</li> </ul> </li> <li> <p>Tag\uff1a\u603b\u7684\u5730\u5740\u957f\u5ea6\u51cf\u53bbindex\u548coffset\u540e\u5f97\u5230\u7684\uff0c\u5b58\u653e\u5728cache\u4e2d\u7528\u6765\u5224\u65ad\u662f\u5426\u547d\u4e2d</p> </li> </ul> <p>\u6ce8\u610f</p> <p>\u5728\u8fd9\u91cc\u6211\u53ea\u7ed9\u51fa\u4e86\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5b9e\u9645\u4e0a\u5982\u679c\u7406\u89e3\u4e86\u6bcf\u4e2a\u90e8\u5206\u7684\u4f5c\u7528\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ece\u5185\u5b58\u5730\u5740\u4e2d\u5f97\u5230index\u548ctag\uff0c\u4f46\u662f\u6211\u5bf9offset\u7684\u7406\u89e3\u4e0d\u592a\u5230\u4f4d\uff0c\u9a6c\u5fb7\u4e0a\u8bfe\u8bf4offset\u8981\u76f4\u63a5\u780d\u6389\u7684\uff08\uff1f\uff09\u6240\u4ee5\u6211\u9009\u62e9\u8bb0\u4f4f\uff08\uff09\u2026\u2026  \u597d\u5427\u4ed6\u540e\u6765\u8bb2\u660e\u767d\u4e86\uff0cbyte offset\u5c31\u662f\u4e00\u4e2ablock\u4e2dbyte\u7684\u4e2a\u6570\u51b3\u5b9a\u7684</p> <p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u4f8b\u9898\uff1a\u5bf9\u4e00\u4e2a8block\u7684cache\u8fdb\u884c\u8bbf\u95ee\uff0c\u6211\u4eec\u5f97\u5230\u7684\u5185\u5b58\u5730\u5740\u5df2\u7ecf\u76f4\u63a5\u780d\u6389\u4e86offset</p> <p>\u4f8b\u5b50</p> <p>\u7ed9\u51fa\u5b8c\u6574\u7684\u8bbf\u95ee\u8fc7\u7a0b\uff0c\u6211\u4eec\u9010\u6b65\u5bf9\u6bcf\u4e2a\u72b6\u6001\u8fdb\u884c\u5206\u6790\uff1a</p> <p> </p> <p>\u63a5\u4e0b\u6765\u5c31\u662f\u6bcf\u4e00\u6b65\u7684\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u5f97\u51fa\u6bcf\u4e00\u6b65\u662f\u5426hit</p> <p> </p> <p>\u5927\u4f53\u7684\u6d41\u7a0b\u5c31\u662f\uff1a</p> <ul> <li>\u8bfb\u53d6CPU\u7ed9\u51fa\u7684\u76ee\u6807\u5185\u5b58\u5730\u5740</li> <li>\u901a\u8fc7index\u627e\u5230cache\u4e2d\u7684block</li> <li> <p>\u5224\u65ad\u5185\u5b58\u5730\u5740\u7684tag\u662f\u5426\u4e0ecache\u4e2dblock\u7684tag\u5339\u914d</p> <ul> <li>\u5982\u679c\u5339\u914d\uff0c\u5219hit</li> <li>\u5982\u679c\u4e0d\u5339\u914d\uff0c\u5219miss\uff0c\u540c\u65f6\u5728\u9ed8\u8ba4\u7b56\u7565\u4e0b\uff0c\u5c06\u6240\u9700\u8981\u7684tag\u7684\u90a3\u4e2a\u5185\u5b58\u66ff\u6362\u5230cache\u4e2d</li> </ul> </li> <li> <p>\u5bf9\u4e8e\u6ca1\u6709\u5199\u8fc7\u7684block\uff0cValid bit\u4e3a0\uff0c\u53ea\u8981\u5199\u8fc7\uff0cValid bit\u5c31\u4e3a1</p> </li> <li> <p>\u6700\u540e\u53d6\u6570\u636e\u65f6\uff0c\u6839\u636eoffset\uff0c\u4ececache\u5bf9\u5e94block\u4e2d\u7684data\u4f4d\u7f6e\u53d6\u51fa\u5bf9\u5e94\u7684   </p> </li> </ul> \u4f8b\u9898 123 <p>How many total bits are required for a direct-mapped cache with 16KB of data and 4-word blocks, assuming that the address is 32 bits long?</p> <ul> <li>16 KB = 4K word = \\(2^{12}\\) words</li> <li>4 word block = \\(2^2\\) word block</li> <li>number of blocks = \\(2^{12}\\) words / \\(2^2\\) word per block = \\(2^{10}\\) blocks</li> <li>data bits = 4 word * 32 bits = 128 bits</li> <li>tag bits = 32 bits - 10 bits - 4 offset = 18 bits</li> <li>valid bits = 1 bit</li> <li>total bits = \\(2^{10}\\)(18 + 128 + 1) = 147 Kbits</li> </ul> <p>\u7ed9\u5b9a\u4e00\u4e2a\u9ad8\u901f\u7f13\u5b58\uff0c\u5b83\u6709 64 block\uff0c\u6bcf\u5757\u7a7a\u95f4\u4e3a 16 bytes\uff0c\u8bf7\u95ee\u5185\u5b58byte address\u4e3a 1200 \u7684\u6570\u636e\u6240\u6620\u5c04\u5230\u7684\u5757\u7684\u7f16\u53f7\u4e3a\u591a\u5c11\uff1f</p> <ul> <li>1200 / 16 = 75 \u5f97\u5230block address</li> <li>75 % 64 = 11 \u5f97\u5230index</li> </ul> <p>\u6240\u4ee5\uff0c\u5185\u5b58byte address\u4e3a 1200 \u7684\u6570\u636e\u6240\u6620\u5c04\u5230\u7684\u5757\u7684\u7f16\u53f7\u4e3a 11</p> <p>\u5047\u8bbe\u4e00\u4e2a\u9ad8\u901f\u7f13\u5b58\u6709 4096 \u4e2a\u9ad8\u901f\u7f13\u5b58\u5757\uff0c\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\u4e3a 4 \u5b57\uff0c\u5e76\u4e14\u5185\u5b58\u91c7\u7528 64 \u4f4d\u5730\u5740\u3002\u8bf7\u8ba1\u7b97\u5728\u76f4\u63a5\u6620\u5c04\u3001\u4e24\u8def\u7ec4\u76f8\u8054\u3001\u56db\u8def\u7ec4\u76f8\u8054\u4ee5\u53ca\u5168\u76f8\u8054\u7684\u7f6e\u653e\u65b9\u6848\u4e0b\u9ad8\u901f\u7f13\u5b58\u7684\u7ec4\u6570\u4ee5\u53ca\u603b\u7684\u6807\u7b7e\u4f4d\u6570\u3002</p> <ul> <li>\u6bcf\u4e2a\u5757\u5927\u5c0f\u662f4\u4e2aword\uff0coffset = 4</li> </ul> <ol> <li> <p>\u76f4\u63a5\u6620\u5c04</p> <ul> <li>\u76f4\u63a5\u6620\u5c04\u7684\u7ec4\u6570\u5c31\u662fcache\u7684block\u6570\u91cf\uff0c4096</li> <li>index = \\(\\log_2(4096) = 12\\)</li> <li>tag = 64 - 12 - 4 = 48</li> <li>\u603b\u7684\u6807\u7b7e\u4f4d\u6570 = 4096 * 48 = 192Kb</li> </ul> </li> <li> <p>\u4e24\u8def\u7ec4\u76f8\u8054</p> <ul> <li>\u7ec4\u6570 = 4096 / 2 = 2048</li> <li>index = \\(\\log_2(2048) = 11\\)</li> <li>tag = 64 - 11 - 4 = 49</li> <li>\u603b\u7684\u6807\u7b7e\u4f4d\u6570 = 4096 * 49 = 196Kb</li> </ul> </li> <li> <p>\u56db\u8def\u7ec4\u76f8\u8054</p> <ul> <li>4096 * (64 - 10 - 4) = 4096 * 50 = 205Kb</li> </ul> </li> <li> <p>\u5168\u76f8\u8054</p> <ul> <li>\u7ec4\u6570 = 1</li> <li>index = 0</li> <li>tag = 64 - 0 - 4 = 60</li> <li>\u603b\u7684\u6807\u7b7e\u4f4d\u6570 = 4096 * 60 = 240Kb</li> </ul> </li> </ol>"},{"location":"notes/cs/Sys/CO/memory.html#handling-cache-miss","title":"Handling Cache Miss","text":"<p>\u5f53\u53d1\u751fmiss\u65f6\uff0c\u6574\u4e2a\u7cfb\u7edf\u7684\u64cd\u4f5c\uff1a</p> <ul> <li> <p>Read miss\uff1a</p> <ul> <li>\u5c06\u6e90\u5730\u5740\u9001\u8fdb\u5185\u5b58\uff08current_PC-4\uff0c\u4e5f\u5c31\u662f\u53d1\u751fmiss\u7684\u6307\u4ee4\u7684\u5730\u5740\uff09</li> <li>\u8ba9main memory\u505a\u4e00\u6b21read</li> <li>\u5c06main memory\u53d6\u56de\u7684\u6570\u636e\u5199\u5230cache entry\u4e2d\uff08entry\u5c31\u662fValid bit\uff0ctag\uff0cdata\u4e00\u6574\u4e2a\u5b8c\u6574\u7ec4\u6210\uff09</li> <li>Restart \u6307\u4ee4\u6d41\u7a0b\uff0c\u76f8\u5f53\u4e8e\u91cd\u65b0\u6267\u884cfetch\u64cd\u4f5c</li> </ul> </li> <li> <p>Write hit\uff1a\u6709\u4e24\u79cd\u7b56\u7565\u5199\u56de\u6570\u636e</p> <ul> <li>Write through\uff1a\u5c06\u6570\u636e\u540c\u65f6\u5199\u5165memory\u548ccache</li> <li>Write back\uff1a\u53ea\u5199\u5165cache\uff0c\u4e4b\u540e\u518d\u5199\u5165memory</li> </ul> </li> </ul>"},{"location":"notes/cs/Sys/CO/memory.html#deep-cache-concepts","title":"Deep Cache Concepts","text":"<p>\u5728\u8fd9\u4e00\u8282\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u8ba8\u8bbacache\u7684\u76f8\u5173\u95ee\u9898\uff0c\u4e00\u5171\u6709\u56db\u4e2a\u95ee\u9898\uff1a</p> <p>\u6838\u5fc3\u95ee\u9898</p> <ol> <li> <p>Block Placement</p> <p>\u5728\u54ea\u91cc\u66ff\u6362block\uff1f</p> </li> <li> <p>Block Identification</p> <p>\u600e\u6837\u627e\u5230\u4e00\u4e2ablock\uff1f </p> </li> <li> <p>Block Replacement</p> <p>\u600e\u6837\u66ff\u6362\u4e00\u4e2ablock\uff1f</p> </li> <li> <p>Write Strategy</p> <p>\u600e\u6837\u5199\u5165\u6570\u636e\uff1f</p> </li> </ol>"},{"location":"notes/cs/Sys/CO/memory.html#block-placement","title":"Block Placement","text":"<ul> <li> <p>direct map</p> </li> <li> <p>fully associative \u5168\u5173\u8054</p> <p>\u4e00\u4e2a\u6570\u636e\u5757\u53ef\u4ee5\u653e\u5728\u9ad8\u901f\u7f13\u5b58\u7684\u4efb\u610f\u4f4d\u7f6e\u4e0a</p> </li> <li> <p>set associative \u7ec4\u5173\u8054</p> \\[\\text{Set Number = (Block number) modulo (Number of sets in the cache)}\\] <ul> <li> <p>\u8fd9\u6837\u53bb\u5230\u4e00\u4e2aset\u4e2d\uff0c\u7136\u540e\u518d\u9009\u62e9set\u4e2d\u7684block\uff0c\u5f80\u5f80\u662f\u76f8\u8fde\u7684block</p> </li> <li> <p>\u5982\u679c\u4e00\u4e2aset\u4e2d\u6709n\u4e2ablock\uff0c\u90a3\u4e48\u5c31\u79f0\u4e3an-way set associative\uff08direct map\u5c31\u662f1-way set associative\uff09</p> </li> </ul> </li> </ul> \u4f8b\u5b50 <p> </p> miss\u6b21\u6570\u7684\u6bd4\u8f83 <p>\u9898\u76ee\u8981\u6c42\u662f\u5728\u4e00\u4e2a4-block\u7684cache\u4e2d\u5206\u522b\u4f7f\u7528direct map\u30012-way set associative\u3001fully associative\u4e09\u79cd\u65b9\u5f0f\uff0c\u8ba1\u7b97\u51famiss\u7684\u6b21\u6570</p> direct map2-way set associativefully associative <p> </p> <p> </p> <p> </p>"},{"location":"notes/cs/Sys/CO/memory.html#block-identification","title":"Block Identification","text":"<p>\u867d\u7136\u65b9\u5f0f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f46\u662f\u6211\u4eec\u4ecd\u7136\u91c7\u7528\u76f8\u540c\u7684\u8ba1\u7b97\u6a21\u5f0f\uff1a\u7528index\u3001tag\u3001ValidBit\u3001ByteOffset\u6765\u8ba1\u7b97</p> <p>\u5bf9\u4e8e Physical Address\uff1a</p> <ul> <li> <p>Index\uff1a</p> <ul> <li>\u76f4\u63a5\u6620\u5c04\uff1a\u662f\u76f8\u5bf9\u4e8e\u591a\u5c11\u4e2ablock\u6765\u8bf4\uff0c\u4f4d\u5bbd\uff1a\\(\\log_2(\\text{# blocks})\\)</li> <li>\u7ec4\u5173\u8054\uff1a\u662f\u76f8\u5bf9\u4e8e\u591a\u5c11\u4e2aset\u6765\u8bf4\uff0c\u4f4d\u5bbd\uff1a\\(\\log_2(\\text{# blocks in one set})\\)</li> </ul> </li> <li> <p>Byte Offset\uff1a</p> <p>\u524d\u9762\u5df2\u7ecf\u7ed9\u51fa\u4e86</p> </li> <li> <p>Tag\uff1a</p> <p>\u76f4\u63a5\u7528\u7269\u7406\u5730\u5740\u51cf\u53bbindex\u548coffset\u5373\u53ef</p> </li> </ul> <p>compare</p> \u76f4\u63a5\u6620\u5c04\u5168\u5173\u8054\u7ec4\u5173\u8054 <p> </p> <p> </p> <p>\u66b4\u529b\u641c\u7d22</p> <p> </p> <p>\u5206\u6210\u4e86\u4e24\u7ec4\uff0c\u56e0\u6b64index = 1\u4f4d\uff0c\u5728\u8fd9\u4e2a\u56fe\u7247\u4e2d\uff0c\u6bd4\u8f83tag\u53d1\u751f\u5728\u6240\u6709block\u4e2d\uff0c\u4f46\u5176\u5b9e\u53ea\u9700\u5728\u6240\u9009\u7684set\u4e2d\u6bd4\u8f83\u5373\u53ef\uff08\u56fe\u662f\u9519\u7684\uff09</p>"},{"location":"notes/cs/Sys/CO/memory.html#block-replacement","title":"Block Replacement","text":"<ul> <li>direct map\uff1a\u6ca1\u6709\u4ec0\u4e48\u66ff\u6362\u7b56\u7565\uff0c\u6765\u4e86\u65b0\u7684\u5c31\u628a\u8001\u7684\u6254\u4e86</li> </ul> <p>\u4f46\u662f\u975e\u76f4\u63a5\u6620\u5c04\u4e2d\uff0c\u6211\u4eec\u5b9a\u4f4d\u4e0d\u5230\u7cbe\u786e\u7684block\uff0c\u56e0\u6b64\u5728\u4e00\u4e2aset\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7b56\u7565\u6765\u51b3\u5b9a\u66ff\u6362\u54ea\u4e00\u4e2ablock</p> <p>Goal\uff1a\u63d0\u9ad8\u547d\u4e2d\u7387</p> <ul> <li> <p>Random Replacement \u968f\u673a\u66ff\u6362</p> <p>\u5bb9\u6613\u5b9e\u73b0</p> </li> <li> <p>Least Recently Used (LRU) \u6700\u8fd1\u6700\u5c11\u4f7f\u7528</p> <p>\u6700\u8fd1\u6ca1\u6709\u88ab\u7528\u8fc7\u7684\u8e22\u51fa</p> <p>\u5e76\u4e0d\u662f\u5f88\u597d\u5b9e\u73b0\uff0c\u5c24\u5176\u662fset\u4e2d\u6709\u5f88\u591ablock\u7684\u65f6\u5019</p> <p>\u9700\u8981\u989d\u5916\u7684bits\u6765\u8bb0\u5f55\u6bcf\u4e2ablock\u7684LRU\u72b6\u6001</p> </li> <li> <p>First In First Out (FIFO) \u5148\u8fdb\u5148\u51fa</p> <p>\u7c7b\u4f3c\u4e8e\u961f\u5217\uff0c\u5b9a\u4e00\u4e2a\u65f6\u95f4\u6233</p> </li> </ul>"},{"location":"notes/cs/Sys/CO/memory.html#write-strategy","title":"Write Strategy","text":"<ul> <li> <p>Write through</p> <p>\u76f4\u63a5\u5c06\u6570\u636e\u5199\u5165memory\uff0c\u53ef\u4ee5\u968f\u65f6\u628acache\u4e2d\u7684\u6570\u636e\u4e22\u6389</p> <p>\u53ea\u9700\u8981Valid bit\u4e00\u4f4d</p> </li> <li> <p>Write back</p> <p>\u5c06\u6570\u636e\u5199\u5165cache\uff0c\u4e4b\u540e\u518d\u5199\u5165memory</p> <p>\u9700\u8981Valid bit\u548cDirty bit</p> <p>\u597d\u5904\u662fmemory\u7684\u5e26\u5bbd\u53ef\u4ee5\u964d\u4f4e\uff0c\u56e0\u4e3a\u53ef\u4ee5\u51cf\u5c11\u5199\u5165\u7684\u6b21\u6570</p> </li> </ul> <p>\u5982\u679c\u4e0d\u547d\u4e2d\u5462\uff1f</p> <p>\u9700\u8981\u5904\u7406Write Stall</p> <ul> <li> <p>Write Buffer</p> <p>\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c0f\u7684cache\uff0c\u53ef\u4ee5\u6682\u65f6\u5b58\u50a8\u6570\u636e</p> </li> </ul> <p>Write Miss\u540e\uff1a</p> <ul> <li> <p>Write Allocate</p> <p>\u5c06\u6570\u636e\u4ecememory\u4e2d\u8bfb\u5230cache\u4e2d</p> </li> <li> <p>Write Around</p> <p>\u4e0d\u5c06\u6570\u636e\u4ecememory\u4e2d\u8bfb\u5230cache\u4e2d\uff0c\u76f4\u63a5\u5199\u5165memory</p> </li> </ul> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cWrite through \u91c7\u7528Write Around\uff0c\u800cWrite back\u91c7\u7528Write Allocate</p>"},{"location":"notes/cs/Sys/CO/memory.html#memory-organization","title":"Memory Organization","text":"<p>\u5bf9\u4e8e\u6bcf\u6b21\u8bbf\u95ee\u64cd\u4f5c\uff0c\u6211\u4eec\u662f\u8981\u8fdb\u884cblock\u4e3a\u5355\u4f4d\u7684\u8bbf\u95ee\uff0c\u4f46\u662f\u5f80\u5f80\u6709\u65f6\u5019\u6211\u4eec\u7684block\u5f88\u5927\uff0c\u6211\u4eec\u9700\u8981\u7684word\u53ea\u662fblock\u4e2d\u5f88\u5c0f\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u65f6\u642c\u8fd0block\u5c31\u4f1a\u5f88\u6d6a\u8d39\u65f6\u95f4\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc\u6211\u4eec\u8981\u964d\u4f4eblock\u642c\u8fd0\u7684\u65f6\u95f4\uff0c\u5c3d\u91cf\u505a\u5230\u4e0eword\u642c\u8fd0\u65f6\u95f4\u5dee\u4e0d\u591a</p> <p>\u8fd9\u65f6\u5019\u4f1a\u5bf9memory\u8fdb\u884c\u8c03\u6574\uff0c\u8bbe\u8ba1\u51fa\u4e0d\u540c\u7684memory organization</p> \u5355\u5b57\u5bbd\u66f4\u5bbd\u7684\u4ea4\u9519\u7684 <p> </p> <p>\u589e\u5927width\uff0c\u4e00\u6b21\u53ef\u4ee5\u8bfb\u4e24\u4e2aword\uff0c\u9001\u56de\u8fd8\u662f\u4e00\u4e2aword\uff0c\u8fd9\u6837\u53ef\u4ee5\u5bf9\u8bfb\u53d6\u6b21\u6570\u51cf\u534a</p> <p>\u751a\u81f3\u53ef\u4ee5\u589e\u5927\u52304\u4e2aword\uff0c\u4f46\u662f\u8fd9\u6837\u5c31miss penalty\u5c31\u5f88\u5927\u4e86</p> <p> </p> <p>\u7528\u56db\u4e2a\u65f6\u949f\u5c06\u5730\u5740\u5206\u522b\u4f20\u7ed9\u56db\u4e2a\u5206\u5757\u7684memory\uff0c\u7136\u540e\u8fdb\u884c\u8bfb\u53d6\uff0c\u8fd9\u6837\u5e76\u884c\u7684\u8bfb\u53d6\u540e\uff0c\u7b49\u5f85\u65f6\u95f4\u5c31\u88ab\u538b\u7f29\u4e86</p> <p> </p>"},{"location":"notes/cs/Sys/CO/memory.html#measure-cache-performance","title":"Measure Cache Performance","text":"<p>\u6838\u5fc3\u95ee\u9898</p> <p>\u600e\u6837\u6d4b\u91cfcache\u7684\u6027\u80fd\uff1f</p> <p>\u5982\u4f55\u63d0\u9ad8\u6027\u80fd\uff1f</p> <p>\u7528CPU\u7684\u6267\u884c\u65f6\u95f4\u6765\u8861\u91cfcache\u7684\u6027\u80fd\uff1a</p> \\[\\begin{aligned}     \\text{CPU Time} &amp;= \\text{Instruction Count} \\times \\text{CPI(Clock Cycles Per Instruction)} \\times \\text{Clock Rate} \\\\     &amp;= \\text{CPU \u6267\u884c\u65f6\u95f4} + \\text{Memory stall \u65f6\u95f4} \\times \\text{Clock Cycle Time} \\end{aligned}\\] \\[\\begin{aligned} \\text{Memory stall \u65f6\u95f4} &amp;= \\text{Read stall \u65f6\u95f4} + \\text{Write stall \u65f6\u95f4} \\\\  &amp;= \\text{# of instructions} \\times \\text{miss rate} \\times \\text{miss penalty} \\end{aligned}\\] <ul> <li> <p>Read\uff1a\u53d6\u6307\u4ee4+\u53d6\u6570\u636e</p> </li> <li> <p>Write\uff1a\u4e0d\u4ec5\u662fProgram\u4e2d\u7684Write\u90e8\u5206\u4f1a\u51fa\u73b0stall\uff0cWrite buffer\u4e5f\u4f1a\u51fa\u73b0stall</p> <ul> <li>\u5982\u679cwrite buffer\u5f88\u5c0f\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1</li> <li>\u5982\u679ccache block size\u662f\u4e00\u4e2aword\uff0c\u90a3\u4e48miss penalty\u662f0</li> </ul> </li> <li> <p>\u901a\u5e38write-through\u7b56\u7565\u4e0b\uff0c\u8bfb\u548c\u5199\u7684miss penalty\u662f\u76f8\u540c\u7684</p> </li> </ul> \u4f8b\u5b50 <p> </p> <p>\u6240\u4ee5\u52a0\u4e0apenalty\u540e\u7684CPI\u5c31\u662f2+3.44=5.44\uff0c\u4e0e\u7406\u60f3\u7684CPI=2\u76f8\u6bd4\uff0c\u6bd4\u4f8b\u662f2.72</p> <p>\u5982\u679c\u6211\u4eec\u53ea\u5bf9\u5904\u7406\u5668\u4f18\u5316\uff0c\u4e0d\u4f18\u5316\u5185\u5b58\u7ed3\u6784\uff0c\u53cd\u800c\u4f1a\u589e\u5927\u8fd9\u4e2a\u6bd4\u4f8b\uff1a</p> <p> </p>"},{"location":"notes/cs/Sys/CO/memory.html#performance-improvement","title":"Performance Improvement","text":"<p>\u63d0\u9ad8\u6027\u80fd\u7684\u601d\u8def\u53ea\u6709\u4e24\u79cd\uff1a</p> <ol> <li>\u63d0\u9ad8\u547d\u4e2d\u7387</li> <li>\u51cf\u5c0f\u4e0b\u4e00\u4e2a\u8bbf\u95ee\u7684\u5ef6\u65f6</li> </ol>"},{"location":"notes/cs/Sys/CO/memory.html#multilevel-cache","title":"Multilevel Cache","text":"<p>\u7528\u4e8e\u51cf\u5c11miss penalty</p> <p>\u5e38\u7528\u65b9\u6cd5\u662f\uff1a\u52a0\u5165\u4e8c\u7ea7\u7f13\u5b58</p> <p>\u589e\u52a0\u4e00\u4e2a\u4e8c\u7ea7\u7f13\u5b58\uff08SRAM\uff09\uff1a</p> <ul> <li>\u539f\u6765\u7684\u9ad8\u901f\u7f13\u5b58\u4e3a\u4e00\u7ea7\u9ad8\u901f\u7f13\u5b58 (SRAM)</li> <li>\u5982\u679c\u4e00\u7ea7\u9ad8\u901f\u7f13\u5b58\u5931\u6548\uff0c\u4e14\u80fd\u591f\u5728\u4e8c\u7ea7\u9ad8\u901f\u7f13\u5b58\u627e\u5230\u6570\u636e\uff0c\u90a3\u4e48\u5931\u6548\u635f\u5931\u5c31\u662f\u8bbf\u95ee\u4e8c\u7ea7\u9ad8\u901f\u7f13\u5b58\u7684\u65f6\u95f4\u4e86\uff0c\u5927\u5927\u51cf\u5c0fmiss penalty</li> <li>\u5982\u679c\u4e8c\u7ea7\u9ad8\u901f\u7f13\u5b58\u4e5f\u627e\u4e0d\u5230\u6570\u636e\uff0c\u90a3\u8fd8\u662f\u5f97\u8bbf\u95ee\u4e3b\u5b58\uff0c\u6b64\u65f6\u7684\u5931\u6548\u635f\u5931\u8fd8\u662f\u5f88\u5927</li> </ul> <p>\u4e00\u7ea7\u7f13\u5b58\uff1a\u4e13\u6ce8\u4e8e\u6700\u5c0f\u5316\u547d\u4e2d\u65f6\u95f4</p> <ul> <li>\u7a7a\u95f4\u66f4\u5c0f\uff0c\u7f13\u5b58\u5757\u5927\u5c0f\u4e5f\u51cf\u5c0f\uff0c\u51cf\u5c0f\u4e86miss penalty</li> </ul> <p>\u4e8c\u7ea7\u7f13\u5b58\uff1a\u4e13\u6ce8\u4e8e\u6700\u5c0f\u5316miss penalty</p> <ul> <li>\u7a7a\u95f4\u66f4\u5927\uff0c\u7f13\u5b58\u5757\u5927\u5c0f\u66f4\u5927\uff0c\u964d\u4f4e\u5931\u6548\u7387</li> </ul> <p>\u4f8b\u5b50</p> <p>\u6709\u4e00\u5757 CPI \u4e3a 1.0\uff0c\u65f6\u949f\u9891\u7387\u4e3a 4GHz \u7684\u5904\u7406\u5668\uff0c\u8bbf\u95ee\u4e3b\u5b58\u7684\u65f6\u95f4\u4e3a 100ns\uff0c\u4e00\u7ea7\u9ad8\u901f\u7f13\u5b58\u7684\u6bcf\u6761\u6307\u4ee4\u5931\u6548\u7387\u4e3a 2%\uff0c\u5982\u679c\u52a0\u4e0a\u4e00\u5757\u8bbf\u95ee\u65f6\u95f4\u4e3a 5ns\uff0c\u4e14\u80fd\u5c06\u5931\u6548\u7387\u964d\u81f3 0.5% \u7684\u4e8c\u7ea7\u9ad8\u901f\u7f13\u5b58\uff0c\u5904\u7406\u5668\u5c06\u4f1a\u53d8\u5f97\u591a\u5feb\uff1f</p> <p>clock cycle time = 1 / 5GHz = 0.2ns</p> <ul> <li>miss penalty to main memory = 100ns/0.2ns = 500</li> </ul> <ol> <li> <p>\u4e00\u7ea7\u7f13\u5b58\uff1a</p> <ul> <li>Total CPI = 1 + 2% * 500 = 11</li> </ul> </li> <li> <p>\u4e8c\u7ea7\u7f13\u5b58\uff1a</p> <ul> <li>\u4e8c\u7ea7miss penalty = 5ns/0.2ns = 25</li> <li>Total CPI = 1 + 2% * 25 + 0.5% * 500 = 1 + 0.5 + 2.5 = 4</li> </ul> </li> </ol> <p>faster by 11/4 = 2.75 times</p>"},{"location":"notes/cs/Sys/CO/memory.html#virtual-memory","title":"Virtual Memory","text":"<p>\u662f\u5bf9main memory\u800c\u8a00\u7684\uff0c\u4e3b\u8981\u89e3\u51b3\u7684\u662fsize\u95ee\u9898</p> <ul> <li>\u8ba9\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u4ee5\u4e3a\u81ea\u5df1\u7684\u5185\u5b58\u662f\u72ec\u6709\u7684\uff0c\u5e76\u4e14\u8db3\u591f\u5927</li> <li>\u8ba9\u7a0b\u5e8f\u89c9\u5f97\u81ea\u5df1\u7684\u5185\u5b58\u662f\u8fde\u7eed\u7684</li> </ul> <p>\u865a\u62df\u5b58\u50a8\u7684\u672c\u8d28\u5176\u5b9e\u4e0ecache\u7c7b\u4f3c\u3002\u5b83\u81ea\u52a8\u5730\u7ba1\u7406\u4e3b\u5b58\u4e0e\u8f85\u52a9\u5b58\u50a8\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u53ea\u662f\u540d\u79f0\u4e0d\u540c\uff1a\u6211\u4eec\u79f0\u865a\u62df\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5b58\u50a8\u5757\u79f0\u4e3a\u9875\uff08virtual page\uff09\uff0c</p> <ul> <li> <p>\u865a\u62df\u7a7a\u95f4\uff08virtual address space\uff09\uff1a\u4e00\u5757\u5355\u72ec\u7684\u5185\u5b58\u5730\u5740\u8303\u56f4\uff0c\u53ea\u80fd\u88ab\u7279\u5b9a\u7684\u4e00\u4e2a\u7a0b\u5e8f\u4f7f\u7528</p> <ul> <li> <p>\u865a\u62df\u5730\u5740\uff08virtual address\uff09\uff1a\u5173\u8054\u865a\u62df\u7a7a\u95f4\u4f4d\u7f6e\u7684\u5730\u5740\uff0c\u4f1a\u88ab\u8f6c\u8bd1\u4e3a\u7269\u7406\u5730\u5740</p> <ul> <li>\u53ef\u4ee5\u770b\u5230\u865a\u62df\u5730\u5740\u7684\u6307\u5411\u7a7a\u95f4\u5e76\u4e0d\u8fde\u7eed\uff0c\u5e76\u4e14\u8fd8\u4f1a\u6709\u91cd\u590d\u5730\u5740\u3001\u6307\u5411Disk\u7684\u60c5\u51b5</li> </ul> </li> <li> <p>\u5730\u5740\u8f6c\u8bd1\uff08address translation\uff09\uff1a\u5c06\u865a\u62df\u5730\u5740\u8f6c\u8bd1\u4e3a\u7269\u7406\u5730\u5740\u7684\u8fc7\u7a0b</p> </li> </ul> </li> </ul> <ul> <li> <p>\u4e00\u4e2a\u5b58\u50a8\u5757--\u9875\u7684\u6784\u6210\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <p>\u5728RISC-V\u4e2d\uff0c64\u4f4d\u5730\u5740\u7684\u9ad816\u4f4d\u4e0d\u4f7f\u7528\uff0c\u56e0\u6b64\u9700\u8981\u6620\u5c04\u7684\u5730\u5740\u670948\u4f4d</p> <ul> <li>\u9875\u53f7\uff08page number\uff09\uff1a\u865a\u62df\u5730\u5740\u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u7d22\u5f15\uff0c\u6307\u5411\u7269\u7406\u5730\u5740\uff0c</li> <li>\u9875\u504f\u79fb\uff08page offset\uff09\uff1a\u865a\u62df\u5730\u5740\u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u7d22\u5f15\u9875\u5185\u7684\u5b57\u8282\uff0c\u9875\u504f\u79fb\u7684\u5927\u5c0f\u51b3\u5b9a\u4e86\u9875\u7684\u5927\u5c0f</li> </ul> </li> </ul> size of page table <p>\u4e00\u4e2a32bits\u7684\u865a\u62df\u5730\u5740\uff0cpage size = 4KB\uff0cEntry size = 4 bytes\uff0c\u81f3\u5c11\u8981\u591a\u5927\u7684page table\uff1f</p> <ul> <li>32\u4f4d\u7684\u865a\u62df\u5730\u5740\u53ef\u4ee5\u5bfb\u5740\\(2^{32}\\)\u4e2a\u5b57\u8282\u7684\u5185\u5b58</li> <li>\u6bcf\u4e2apage\u7684\u5927\u5c0f\u662f4KB\uff0c\u56e0\u6b64\u9700\u8981\\(2^{32} / 4KB = 2^{32-12} = 2^{20}\\)\u4e2apage</li> <li>\u6bcf\u4e2apage\u7684entry size\u662f4 bytes\uff0c\u56e0\u6b64\u9700\u8981\\(2^{20} * 4B = 2^{22}B = 2^{12}KB = 4MB\\)\u7684\u5185\u5b58\u6765\u5b58\u50a8page table</li> </ul> <p>\u6574\u4e2a\u865a\u62df\u5185\u5b58\u7684\u7a7a\u95f4\u90fd\u662f\u50a8\u5b58\u5728memory\u4e2d\u7684</p> <ul> <li>Page Table\uff1a\u9875\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u865a\u62df\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb</li> <li>Page Table register\uff1a\u9875\u8868\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u5b58\u50a8\u9875\u8868\u7684\u57fa\u5730\u5740</li> </ul> <p>\u6620\u5c04\u8fc7\u7a0b\u5c31\u662f\uff1a</p> <ul> <li>\u5f53\u4e00\u4e2a\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\uff0c\u6211\u4eec\u8bfb\u53d6\u5230\u4ed6\u5bf9\u5e94\u7684Page table register\uff0c\u7136\u540e\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684\u9875\u53f7\u627e\u5230\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\uff0c\u5982\u679c\u7269\u7406\u5730\u5740\u7684Valid bit = 1\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5185\u5b58\u5757\u662f\u5728memory\u4e2d\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e2a\u5185\u5b58\u5757</li> </ul> <p>\u5982\u679c\u8fd9\u4e2aValid bit = 0\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5185\u5b58\u5757\u5728Disk\u4e2d\uff0c\u8fd9\u65f6\u5c31\u53d1\u751f\u4e86page fault</p>"},{"location":"notes/cs/Sys/CO/memory.html#tlb","title":"TLB","text":"<p>TLB\uff1aTranslation Lookaside Buffer\uff0c\u589e\u52a0\u4e00\u4e2abuffer\u7528\u4e8e\u8ffd\u8e2a\u6700\u8fd1\u4f7f\u7528\u8fc7\u7684\u5730\u5740\u6620\u5c04\uff0c\u76f4\u63a5\u4fdd\u5b58\u7269\u7406\u5730\u5740</p>"},{"location":"notes/cs/Sys/CO/processor.html","title":"Processor","text":""},{"location":"notes/cs/Sys/CO/processor.html#single-cycle-processor","title":"Single-Cycle Processor","text":""},{"location":"notes/cs/Sys/CO/processor.html#intro","title":"Intro","text":"<p>\u6307\u4ee4\u6267\u884c\u7684\u6b65\u9aa4\u6982\u8ff0\uff1a</p> <ul> <li>\u6700\u5f00\u59cb\u7684\u4e24\u6b65\u662f\u76f8\u540c\u7684\uff1a</li> </ul> <ol> <li> <p>Fetch \u4ece\u6307\u4ee4\u5185\u5b58\u4e2d\u62ff\u51fa\u6307\u4ee4</p> </li> <li> <p>Decode and Read Operands \u89e3\u7801\u5e76\u8bfb\u5bc4\u5b58\u5668</p> <ul> <li>\u5728\u8fdb\u884c\u6307\u4ee4\u89e3\u7801\u5b8c\u6210\u524d\u5c31\u53ef\u4ee5\u8bfb\u53d6\u6570\u636e\uff0c\u56e0\u4e3a\u6570\u636e\u4f4d\u7f6e\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u8bfb\u6570\u636e\u4e0d\u4f1a\u7834\u574f\u6570\u636e\uff0c\u6240\u4ee5\u65e0\u8bba\u662f\u5426\u4f7f\u7528\uff0c\u90fd\u4f1a\u5148\u62ff\u51fa\u5bf9\u5e94\u7684register operands\u3002</li> </ul> </li> <li> <p>Executive Control</p> <p>\u6240\u6709\u7684\u6307\u4ee4\u90fd\u4f1a\u7ecf\u8fc7ALU\uff0c\u6839\u636e\u6307\u4ee4\u7684\u7c7b\u578b\u8fdb\u884c\u4e0d\u540c\u7684ALU\u64cd\u4f5c\uff1a</p> <ul> <li>\u5185\u5b58\u5f15\u7528\u6307\u4ee4\uff1aMemory Reference </li> <li>\u7b97\u672f\u903b\u8f91\u6307\u4ee4\uff1aArithmetic and Logic </li> <li>\u6761\u4ef6\u5206\u652f\u6307\u4ee4\uff1a\u5224\u65ad\u4e24\u6570\u662f\u5426\u76f8\u7b49</li> </ul> </li> <li> <p>Memory Access </p> <p>\u901a\u8fc7load\u548cstore\u6307\u4ee4\u8bbf\u95ee\u6570\u636e</p> <ul> <li>\u5185\u5b58\u5f15\u7528\u6307\u4ee4\uff1a\u8bbf\u95ee\u5185\u5b58\u8fdb\u884c\u8bfb\u5199</li> <li>\u7b97\u672f\u903b\u8f91\u6307\u4ee4/\u52a0\u8f7d\u6307\u4ee4\uff1a\u5c06\u5185\u5b58\u6216\u8005\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u5199\u5165\u5bc4\u5b58\u5668</li> <li>\u6761\u4ef6\u5206\u652f\u6307\u4ee4\uff1a\u6839\u636e\u6bd4\u8f83\u7ed3\u679c\u66f4\u65b0PC\uff1aPC+4 \u6216\u5230\u6307\u5b9a\u76ee\u6807\u5730\u5740</li> </ul> </li> <li> <p>Write results</p> </li> <li> <p>Update PC</p> </li> </ol> <p>simple processor</p> <p></p> <p>\u4e09\u4e2a\u7ea2\u8272\u5706\u5708\u662f\u591a\u8def\u9009\u62e9\u5668\uff0c\u56e0\u4e3a\u9700\u8981\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u6765\u6e90\u8fdb\u884c\u9009\u62e9\uff0c\u6bd4\u5982ALU\u4e2d\u7684\u8f93\u5165\u65e2\u53ef\u4ee5\u662fR\u578b\u6307\u4ee4\u4e2d\u7684\u4e24\u4e2a\u6e90\u5bc4\u5b58\u5668\uff0c\u4e5f\u53ef\u4ee5\u662fI\u578b\u6307\u4ee4\u4e2d\u7684\u4e00\u4e2a\u6e90\u5bc4\u5b58\u5668\u548c\u4e00\u4e2a\u7acb\u5373\u6570\u3002</p> <p>with control</p> <p></p>"},{"location":"notes/cs/Sys/CO/processor.html#clock-methodology","title":"Clock Methodology","text":""},{"location":"notes/cs/Sys/CO/processor.html#datapath","title":"Datapath","text":"<p>\u6784\u5efa\u6570\u636e\u901a\u8def\u65f6\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f\u6307\u4ee4\u4e2d\u7684\u5b58\u50a8\u6570\u636e\u800c\u4e0d\u662f\u63a7\u5236\u4fe1\u53f7\u3002</p>"},{"location":"notes/cs/Sys/CO/processor.html#instruction-fetch","title":"Instruction Fetch","text":"<p>64bit\u5bc4\u5b58\u5668\uff0c\u9700\u898164\u4e2aD\u89e6\u53d1\u5668\u3002</p>"},{"location":"notes/cs/Sys/CO/processor.html#r-inst","title":"R Inst","text":"<ul> <li>Register File: \u5bc4\u5b58\u5668\u5806\uff0c\u7528\u4e8e\u5b58\u50a8\u6240\u6709\u5bc4\u5b58\u5668<ul> <li>\u8fdb\u884c\u9009\u62e9\u7684wire\u662f5\u4f4d\uff0c\u56e0\u4e3a\u5bc4\u5b58\u5668\u670932\u4e2a\u3002</li> <li>\u8bfb\u53d6\u6570\u636e\u53ea\u9700\u8981\u8fdb\u884c\u9009\u62e9\uff08\u5728R\u578b\u6307\u4ee4\u524d\u5df2\u7ecf\u6709ld\u6307\u4ee4\u5c06\u6570\u636e\u5199\u5165\u5bc4\u5b58\u5668\uff09\uff0c\u5199\u5165\u6570\u636e\u9700\u8981\u53d7<code>RegWrite</code>\u4fe1\u53f7\u63a7\u5236  </li> </ul> </li> <li>ALU: \u8fdb\u884c\u7b97\u672f\u903b\u8f91\u8fd0\u7b97<ul> <li>\u6709\u4e00\u4e2a\u56db\u4f4d\u7684MUX\u8fdb\u884c\u63a7\u5236\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u53ea\u9700\u8981\u4e09\u4f4d\uff0c\u6709\u4e00\u4f4d\u662f\u6d6a\u8d39\u7684\uff08\u4f46\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u56db\u4f4d\uff0c\u56e0\u4e3aMUX\u7684\u8f93\u5165\u7aef\u53e3\u6570\u5fc5\u987b\u662f2\u7684\u5e42\u6b21\uff09</li> </ul> </li> </ul>"},{"location":"notes/cs/Sys/CO/processor.html#load-store-inst","title":"Load Store Inst","text":"<p>\u9664\u4e86R\u578b\u6307\u4ee4\u7528\u5230\u7684\u4e24\u4e2a\u5143\u4ef6\uff0c\u8fd8\u9700\u8981\u4e24\u4e2a</p> <ul> <li>Data Memory: \u6570\u636e\u5185\u5b58,\u4e0d\u540c\u4e8eRegister File\uff0cData Memory\u540c\u65f6\u5177\u6709\u8bfb\u5199\u63a7\u5236<ul> <li>\u8bfb\u53d6\u6570\u636eld\u9700\u8981\u53d7<code>MemRead</code>\u4fe1\u53f7\u63a7\u5236\uff0c\u5199\u5165\u6570\u636esd\u9700\u8981\u53d7<code>MemWrite</code>\u4fe1\u53f7\u63a7\u5236<ul> <li>\u5185\u5b58\u7684\u8bfb\u53d6\u9700\u8981\u63a7\u5236\u4fe1\u53f7\u7684\u539f\u56e0\u662f\uff1a\u5e76\u4e0d\u662f\u6240\u6709\u6307\u4ee4\u90fd\u4f1a\u6709\u8bbf\u5b58\u64cd\u4f5c\uff0c\u6240\u4ee5\u90a3\u4e9b\u7528\u4e0d\u5230\u5185\u5b58\u503c\u7684\u6307\u4ee4\u5c31\u6ca1\u5fc5\u8981\u8bfb\u53d6\u5185\u5b58\u6570\u636e\uff0c\u56e0\u6b64\u9700\u8981\u63a7\u5236\u4fe1\u53f7\u6765\u5173\u95ed\u8fd9\u6247\u95e8\uff1b\u800c\u6240\u6709\u6307\u4ee4\u90fd\u8981\u4ece\u5bc4\u5b58\u5668\u5806\u91cc\u8bfb\u53d6\u6570\u636e\uff0c\u56e0\u6b64\u5bc4\u5b58\u5668\u5806\u7684\u8bfb\u53d6\u65e0\u9700\u63a7\u5236\u4fe1\u53f7</li> </ul> </li> </ul> </li> <li>Imm Gen: \u4ece 32 \u4f4d\u6307\u4ee4\u4e2d\u63d0\u53d6\u51fa\u4e0e\u7acb\u5373\u6570\u76f8\u5173\u7684\u4f4d\uff0c\u5c06\u8fd9\u4e9b\u4f4d\u6309\u6b63\u786e\u7684\u987a\u5e8f\u62fc\u63a5\u8d77\u6765\uff0c\u540c\u65f6\u5bf9\u5176\u7b26\u53f7\u6269\u5c55\u81f3 64 \u4f4d</li> </ul>"},{"location":"notes/cs/Sys/CO/processor.html#branch-inst","title":"Branch Inst","text":"<p>\u8fd9\u91cc\u53ea\u8003\u8651\u4e86beq\u6307\u4ee4</p> <ul> <li>\u5bc4\u5b58\u5668\u7528\u4e8e\u5b58\u653e\u4e24\u4e2a\u88ab\u6bd4\u8f83\u7684\u6e90\u64cd\u4f5c\u6570\uff0c\u8fdb\u5165ALU\u8fdb\u884c\u6bd4\u8f83</li> <li>ALU\uff1a\u7b2c\u4e00\u4e2aALU\u7684\u4f5c\u7528\u662f\u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u4e14\u6709\u4e00\u4e2azero\u7528\u4e8e\u5224\u65ad\u662f\u5426\u76f8\u7b49\u8fdb\u800c\u9009\u62e9PC+4\u8fd8\u662fbranch target address\uff1b\u7b2c\u4e8c\u4e2aALU\u53ea\u6709\u52a0\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97branch target address</li> <li>Shift left 1:\u6839\u636e\u4e4b\u524d\u5b66\u5230\u7684\uff0c\u5728\u8fdb\u884cbranch target address\u8ba1\u7b97\u65f6\uff0c\u6211\u4eec\u6240\u9700\u7684offset\u5728\u7acb\u5373\u6570\u4e2d\u662f\u771f\u5b9e\u503c\u7684\u4e00\u534a\uff0c\u56e0\u6b64\u5bf9\u4e8eImm Gen\u8f93\u51fa\u7684\u7acb\u5373\u6570\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u5de6\u79fb\u4e00\u4f4d\u7684\u64cd\u4f5c\u4e582</li> </ul>"},{"location":"notes/cs/Sys/CO/processor.html#compose","title":"Compose","text":"<ul> <li>\u6bcf\u4e2a\u6570\u636e\u901a\u8def\u90fd\u662f\u5355\u5468\u671f\u7684</li> </ul> <p>datapath</p> <p></p> All types' datapath R-typeI-typeS-typeB-typeJ-type <p></p> <p>R-type \u7684\u6307\u4ee4\u662f\u5b8c\u5168\u5efa\u7acb\u5728Register File\u4e0a\u7684\uff0c\u6ca1\u6709\u4e0e\u5185\u5b58\u7684\u4ea4\u4e92\uff0c\u4f7f\u7528R\u6307\u4ee4\u4e00\u5b9a\u662f\u5728\u5185\u5b58\u8bfb\u53d6\u540e\u8fdb\u884c\u7684\u3002</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"notes/cs/Sys/CO/processor.html#control-unit","title":"Control Unit","text":"<p>\u53ea\u67097+4\u6839\u4fe1\u53f7</p> <p>\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5904\u7406\u516b\u4e2a\u4fe1\u53f7</p> <p>8 signals</p> <p></p>"},{"location":"notes/cs/Sys/CO/processor.html#alu-control","title":"ALU Control","text":"<p>ALU\u7684\u63a7\u5236\u4fe1\u53f7\u4e00\u5171\u67094\u4f4d\uff1a</p> <ul> <li>\u5176\u4e2d2\u4f4d\u5206\u522b\u6765\u81eafunct3\u548cfunct7</li> <li>\u53e6\u59162\u4f4d\u662f\u6765\u81eaALUop\uff0c\u5b83\u6765\u81ea\u4e3b\u63a7\u5236\u5355\u5143 (main control unit)\uff0c\u7528\u4e8e\u6307\u5b9a\u5177\u4f53\u6267\u884c\u4f55\u79cd\u6307\u4ee4\uff0c\u4e0d\u540c\u7684\u503c\u5bf9\u5e94\u4e0d\u540c\u7684\u7c7b\u578b\uff1a<ul> <li>00\uff1a\u52a0\u8f7d/\u5b58\u50a8\u6307\u4ee4</li> <li>01\uff1a\u6761\u4ef6\u5206\u652f\u6307\u4ee4</li> <li>10\uff1aR\u578b\u6307\u4ee4</li> <li>11\uff1aI\u578b\u6307\u4ee4\uff08addi andi\uff09\u597d\u50cf\u4f1a\u7528\u5230\uff1f</li> </ul> </li> </ul> ALU control Instruction opcode ALUOp Operation Funct7 Funct3 Desired ALU action ALU control Input ld 00 load doubleword XXXXXXX XXX add 0010 sd 00 store doubleword XXXXXXX XXX add 0010 beq 01 branch if equal XXXXXXX XXX subtract 0110 R-type 10 and 0000000 111 AND 0000 R-type 10 or 0000000 110 OR 0001 R-type 10 add 0000000 000 add 0010 R-type 10 sub 0100000 000 subtract 0110 R-type 10 slt 0000000 010 slt 0111 R-type 10 srl 0000000 101 srl 0101 R-type 10 xor 0000000 011 xor 0011 <p>\u91c7\u7528\u4e24\u7ea7\u89e3\u7801\uff0c\u6839\u636eopcode\u5c31\u53ef\u4ee5\u5224\u65ad7\u6839\u4fe1\u53f7\u7ebf\u7684\u503c\uff0c\u8fd9\u65f6\u5019 ALU \u518d\u770bfunct3\u548cfunct7\u5c31\u53ef\u4ee5\u5224\u65ad\u51fa\u5269\u4e0b\u76844\u6839\u4fe1\u53f7\u7ebf\u7684\u503c\u3002</p> <p></p>"},{"location":"notes/cs/Sys/CO/processor.html#main-control-unit","title":"Main Control Unit","text":"<p>\u4f59\u4e0b\u7684\u516d\u4e2a\u63a7\u5236\u4fe1\u53f7\u7684\u4f5c\u7528\u5982\u4e0b\uff1a</p> <p></p> <ul> <li>ALUSrc: \u51b3\u5b9aALU\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\uff0c0\u65f6\u4ece\u5bc4\u5b58\u5668\u5806\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c1\u65f6\u4ece\u7acb\u5373\u6570\u4e2d\u8bfb\u53d6\u6570\u636e</li> <li>PCSrc: \u51b3\u5b9aPC\u7684\u503c\uff0c0\u65f6\u9009\u62e9PC+4\uff0c1\u65f6\u9009\u62e9branch target address</li> <li>MemtoReg: 00\u65f6\u5c06ALU\u7684\u7ed3\u679c\u8fd4\u56de\u7ed9\u76ee\u6807\u5bc4\u5b58\u5668\uff0c01\u65f6\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636e\u8fd4\u56de\u7ed9\u76ee\u6807\u5bc4\u5b58\u5668\uff0c</li> </ul> <p>\u6700\u7ec8\uff1a</p> <p></p>"},{"location":"notes/cs/Sys/CO/processor.html#_1","title":"Processor","text":""},{"location":"notes/cs/Sys/CO/processor.html#operation-of-datapath","title":"Operation of Datapath","text":"<p>\u7070\u8272\u7684\u5143\u4ef6\u4ee3\u8868\u6ca1\u6709\u88ab\u4f7f\u7528</p> R-typeL/S-typeB-type <p> </p> <pre><code>add x1, x2, x3\n</code></pre> <ol> <li>IF\uff1a\u53d6\u6307\uff0c\u9012\u589ePC</li> <li>ID\uff1a\u89e3\u7801\uff0c\u4ece\u5bc4\u5b58\u5668\u5806\u4e2d\u8bfb\u53d6\u5bc4\u5b58\u5668</li> <li>EX\uff1a\u6267\u884c\uff0cALU\u6839\u636e\u64cd\u4f5c\u7801\u786e\u5b9a\u8fd0\u7b97\u7c7b\u578b\uff0c\u7136\u540e\u5bf9\u4e0a\u4e00\u6b65\u7684\u6570\u636e\u8fdb\u884c\u8ba1\u7b97</li> <li>MEM\uff1a\u65e0</li> <li>WB\uff1a\u5199\u56de\uff0c\u5c06\u7ed3\u679c\u5199\u5165x1</li> </ol> <p> </p> <pre><code>ld x1, offset(x2)\n</code></pre> <ol> <li>IF\uff1a\u53d6\u6307\uff0c\u9012\u589ePC</li> <li>ID\uff1a\u4ece\u5bc4\u5b58\u5668\u5806\u4e2d\u8bfb\u53d6x2</li> <li>EX\uff1aALU\u8ba1\u7b97x2\u7684\u6570\u636e\u548c\u7ecf\u8fc7imm\u7b26\u53f7\u6269\u5c55\u7684offset\u7684\u548c\uff0c\u5f97\u5230\u5185\u5b58\u5730\u5740</li> <li>MEM\uff1a\u6839\u636e\u5730\u5740\u5f97\u5230\u5bf9\u5e94\u6570\u636e</li> <li>WB\uff1a\u5c06\u6570\u636e\u5199\u5165x1</li> </ol> <p> </p> <pre><code>beq x1, x2, offset\n</code></pre> <ol> <li>IF\uff1a\u53d6\u6307\uff0c\u9012\u589ePC</li> <li>ID\uff1a\u4ece\u5bc4\u5b58\u5668\u5806\u4e2d\u8bfb\u53d6x1\u548cx2</li> <li>EX\uff1aALU\u5c06\u4e24\u4e2a\u8bfb\u53d6\u7684\u6570\u636e\u76f8\u51cf\uff0c\u540c\u65f6\u5c06PC\u4e0e\u5de6\u79fb\u4e00\u4f4d\u540e\u7684offset\u76f8\u52a0\uff0c\u5f97\u5230branch target address\uff0c\u6839\u636eALU\u7684zero\u4fe1\u53f7\u5224\u65ad\u5982\u4f55\u66f4\u65b0PC</li> </ol>"},{"location":"notes/cs/Sys/CO/processor.html#pipelining-process","title":"Pipelining Process","text":"<p>\u6d41\u6c34\u7ebfPipeline\u7684\u672c\u8d28\u662f\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u901a\u8fc7\u5c06\u6307\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b\u5206\u89e3\u4e3a\u591a\u4e2a\u9636\u6bb5\uff0c\u6bcf\u4e2a\u9636\u6bb5\u5728\u4e0d\u540c\u7684\u65f6\u949f\u5468\u671f\u5185\u6267\u884c\uff0c\u4ece\u800c\u5728\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u5185\u5b8c\u6210\u591a\u6761\u6307\u4ee4\u7684\u6267\u884c\u3002</p> <p>\u5728RISC-V\u4e2d\uff0c\u6d41\u6c34\u7ebfPipeline\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\uff1a</p> <ul> <li>IF: Instruction Fetch \u4ece\u6307\u4ee4\u5185\u5b58\u4e2d\u53d6\u51fa\u6307\u4ee4</li> <li>ID: Instruction Decode \u89e3\u7801\u6307\u4ee4</li> <li>EX: Execute \u6267\u884c\u6307\u4ee4</li> <li>MEM: Memory Access \u8bbf\u95ee\u5185\u5b58</li> <li>WB: Write Back \u5199\u56de\u5bc4\u5b58\u5668</li> </ul> <p>pipeline</p> <p></p> <p>     \u56fe\u5f62\u5de6\u534a\u8fb9\u9634\u5f71\u662f\u5199\u5165\uff0c\u53f3\u534a\u8fb9\u9634\u5f71\u662f\u8bfb\u53d6\uff0c\u5168\u9634\u5f71\u662f\u90fd\u6709\uff08\u8fd9\u91cc\u5047\u8bbe\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u5143\u4ef6\u7684\u524d\u534a\u4e2a\u5468\u671f\u53ef\u4ee5\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u540e\u534a\u4e2a\u5468\u671f\u53ef\u4ee5\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff09 </p> <p>\u5bc4\u5b58\u5668\u8bfb\u5199</p> <p>\u6ce8\u610f\u5230\u5bf9\u4e8e\u5bc4\u5b58\u5668\u7684\u8bfb\u5199\u64cd\u4f5c\uff0c\u53ea\u5360\u7528\u65f6\u949f\u5468\u671f\u7684\u4e00\u534a\uff0c\u4f46\u662fID\u548cWB\u7684\u5b8c\u6210\u5206\u522b\u662f\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u7684\u524d\u540e\u4e24\u4e2a\u90e8\u5206\uff0c\u53ea\u662f\u56e0\u4e3a\u6709\u65f6\u5bf9\u5bc4\u5b58\u5668\u7684\u64cd\u4f5c\u662f\u540c\u65f6\u8fdb\u884c\u7684\uff0c\u4e3a\u4e86\u907f\u514d\u51b2\u7a81\uff0c\u6240\u4ee5\u624d\u5c06ID\u548cWB\u7684\u5b8c\u6210\u65f6\u95f4\u9519\u5f00\uff0c\u8fd9\u4e00\u64cd\u4f5c\u662f\u901a\u8fc7\u5c06\u8bfb\u5199\u7684\u64cd\u4f5c\u5206\u522b\u7531clk\u7684\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u5b8c\u6210\u5b9e\u73b0\u7684</p> comparison example <p>     \u5728\u89c4\u5b9a\u597d\u6bcf\u4e2a\u90e8\u4ef6\u6240\u9700\u8981\u7684\u65f6\u95f4\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5355\u5468\u671fCPU\u548c\u6d41\u6c34\u7ebfCPU\u7684\u6267\u884c\u6307\u4ee4\u65f6\u95f4\u8fdb\u884c\u6bd4\u8f83 </p> <p></p> <p>\u6267\u884c\uff1a <pre><code>ld x1, 100(x4)\nld x2, 200(x4)\nld x3, 400(x4)\n</code></pre></p> <p></p> <p>     \u5355\u5468\u671fCPU\u7684\u65f6\u949f\u5468\u671f\u662f\u53d6\u51b3\u4e8e\u6700\u957f\u6307\u4ee4\u7684\u65f6\u95f4\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc\u65f6\u949f\u5468\u671f\u5c31\u662f800ps\uff0c\u6267\u884c3\u4e2ald\u6307\u4ee4\u9700\u89812400ps </p> <p>     \u6d41\u6c34\u7ebfCPU\u7684\u6267\u884c\u662f\u5206\u9636\u6bb5\u7684\uff0c\u65f6\u949f\u5468\u671f\u53d6\u51b3\u4e8e\u6700\u957f\u7684\u9636\u6bb5\uff0c\u5728\u8fd9\u91cc\u662f200ps\uff0creg\u64cd\u4f5c\u867d\u7136\u53ea\u7528100ps\uff0c\u4f46\u662f\u4ecd\u7136\u9700\u8981\u8fdb\u884c200ps\u7684\u64cd\u4f5c\uff0c\u6700\u7ec8\u9700\u89817 * 200ps = 1400ps </p> <p>\u4f46\u662f\u4e0d\u662f\u6240\u6709\u6307\u4ee4\u90fd\u9700\u8981\u6267\u884c\u6240\u6709\u9636\u6bb5\u7684\u6307\u4ee4\u7684\uff0c\u6bd4\u5982load\u548cstore\u6307\u4ee4\u5c31\u4e0d\u9700\u8981\u6267\u884cEX\u548cMEM\u9636\u6bb5\u3002</p> <p>\u6027\u80fd\u65b9\u9762\uff1a\u7406\u60f3\u6761\u4ef6\u4e0b</p> \\[ \\text{Time between instructions}_{pipelined} = \\frac{\\text{Time between instructions}_{non-pipelined}}  {\\text{Number of stages}} \\] <p>\u65f6\u949f\u5468\u671f</p> <p>     \u6d41\u6c34\u7ebfCPU\u7684\u65f6\u949f\u5468\u671f = \u8017\u65f6\u6700\u957f\u7684\u9636\u6bb5\u6240\u82b1\u7684\u65f6\u95f4 </p> <ul> <li>\u53ea\u6709\u5f53\u6bcf\u4e2a\u9636\u6bb5\u7684\u65f6\u95f4\u76f8\u7b49\u7684\u7406\u60f3\u60c5\u51b5\u53d1\u751f\uff0c\u624d\u4f1a\u6709\u4e0a\u8ff0\u7684\u6027\u80fd\u63d0\u5347</li> <li>\u540c\u65f6\u5bf9\u4e8eLatency\uff0c\u6bcf\u4e2a\u6307\u4ee4\u662f\u4e0d\u51cf\u7684</li> </ul> <p>Success</p> <p>Pipeline \u662f\u901a\u8fc7\u589e\u52a0\u901a\u91cf\uff08throughput\uff09\u6765\u63d0\u9ad8\u6027\u80fd\u7684\uff0c\u800c\u4e0d\u662f\u51cf\u5c11Latency</p>"},{"location":"notes/cs/Sys/CO/processor.html#hazards","title":"Hazards","text":"<p>Harzard\uff08\u7ade\u4e89\uff09\uff1a</p> <p>\u662f\u6307\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u6307\u4ee4\u65e0\u6cd5\u6309\u7167\u9884\u671f\u987a\u5e8f\u7ee7\u7eed\u6267\u884c\uff0c\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li> <p>Structure Hazards</p> <ul> <li>\u9700\u8981\u7684\u8d44\u6e90\u88ab\u5360\u7528\uff0c\u5bfc\u81f4\u6307\u4ee4\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c</li> <li>\u5982\u591a\u6761\u52a0\u8f7d\u5b58\u50a8\u6307\u4ee4\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u5bf9\u540c\u4e00\u5757\u5185\u5b58\u8fdb\u884c\u8bbf\u95ee</li> </ul> </li> <li> <p>Data Hazards</p> <ul> <li>\u9700\u8981\u7b49\u5f85\u4e0a\u4e00\u6761\u6307\u4ee4\u5b8c\u6210\u6570\u636e\u5199\u5165\u6216\u8005\u8bfb\u53d6\u5b8c\u6210\u624d\u80fd\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c</li> <li>\u89e3\u51b3\u65b9\u6848\uff1a\u6dfb\u52a0\u989d\u5916\u7684\u786c\u4ef6\u524d\u9012\uff08forwarding\uff09\u6216\u79f0\u4e3a\u65c1\u8def\uff08bypassing\uff09</li> </ul> <p> </p> <p>\u53ea\u6709\u5f53\u76ee\u6807\u9636\u6bb5\u6bd4\u6e90\u9636\u6bb5\u665a\u65f6\uff0c\u624d\u80fd\u8fdb\u884c\u524d\u9012</p> <ul> <li>\u8fd9\u4e00\u60c5\u51b5\u5bf9\u4e8eR\u578b\u6307\u4ee4\u662f\u9002\u7528\u7684\uff0c\u4f46\u662f\u5982\u679c\u5148\u6267\u884c\u52a0\u8f7d\u6307\u4ee4\uff0c\u540e\u6267\u884c\u4f9d\u8d56\u4e8e\u8be5\u52a0\u8f7d\u6307\u4ee4\u6570\u636e\u7684\u6307\u4ee4\uff0c\u5373\u4f7f\u52a0\u4e86\u4e00\u4e2a\u524d\u9012\uff0cCPU \u8fd8\u662f\u4e0d\u5f97\u4e0d\u6682\u505c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\uff0c\u8fd9\u79cd\u60c5\u51b5\u79f0\u4e3a\u52a0\u8f7d\u4f7f\u7528\u6570\u636e\u5192\u9669(load-use data hazard)\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</li> </ul> <p> </p> <p>\u4e2d\u95f4\u7684\u6c14\u6ce1\u79f0\u4e3a\u6d41\u6c34\u7ebf\u505c\u987f\uff08pipeline stall\uff09\u6216\u8005bubble</p> <p>\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8f6f\u4ef6\u5c42\u9762\u7684\u4f18\u5316\u6765\u89e3\u51b3\uff1a</p> \u987a\u5e8f\u8c03\u6574 <pre><code>a = b + c;\nc = b + f;\n</code></pre> <p>\u5f97\u5230\u4e00\u4e2a\u81ea\u7136\u7684\u6c47\u7f16\u4ee3\u7801\uff1a</p> <pre><code>ld  x1, 0(x31)\nld  x2, 8(x31)\nadd x3, x1, x2\nsd  x3, 24(x31)\nld  x4, 16(x31)\nadd x5, x1, x4\nsd  x5, 32(x31)\n//\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9ad8\u4eae\u7684\u4e24\u7ec4\u4ee3\u7801\u90fd\u53d1\u751f\u4e86load-use data hazard\uff0c\u9700\u8981\u589e\u52a0\u4e24\u4e2astall\n</code></pre> <pre><code>ld  x1, 0(x31)\nld  x2, 8(x31)\nld  x4, 16(x31)\nadd x3, x1, x2\nsd  x3, 24(x31)\nadd x5, x1, x4\nsd  x5, 32(x31)\n//\u56e0\u4e3a\u5728\u8fd9\u91cc\u6211\u4eec\u63d0\u524d\u4e86f\u7684\u8bfb\u53d6\uff0c\u6b63\u597d\u7ed9\u4e86b\u8bfb\u53d6\u6307\u4ee4\u65f6\u95f4\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u589e\u52a0stall\u4e86\n</code></pre> <p></p> <p>\u8fd9\u79cd\u8ba1\u7b97\u4e5f\u662f\u8981\u638c\u63e1\u7684\uff0c\u9700\u8981\u81ea\u5df1\u5224\u65ad\u662f\u5426\u52a0\u5165stall</p> </li> <li> <p>Control Hazards</p> <ul> <li>\u9700\u8981\u51b3\u5b9a\u7684\u63a7\u5236\u4fe1\u53f7\u4f9d\u8d56\u4e8e\u5148\u524d\u7684\u6307\u4ee4\uff0c\u5bfc\u81f4\u65e0\u6cd5\u786e\u5b9a\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u6267\u884c</li> <li>\u89e3\u51b3\u65b9\u6848\uff1a\u5c06\u5bc4\u5b58\u5668\u7684\u6bd4\u8f83\u548c\u76ee\u6807\u5730\u5740\u7684\u8ba1\u7b97\u63d0\u524d\u5230ID\u9636\u6bb5</li> <li>\u4f46\u662f\u8fd9\u6837\u4ecd\u7136\u4f1a\u6709\u4e00\u4e2abubble\u7684\u4ea7\u751f\uff1a</li> </ul> <p> </p> <ul> <li>\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a\u5206\u652f\u9884\u6d4b\uff1a</li> <li>\u4e00\u79cd\u65b9\u6cd5\u662f\u9759\u6001\u9884\u6d4b<ul> <li>\u65e0\u8bba\u4ec0\u4e48\u6761\u4ef6\u90fd\u8fdb\u884c\u8df3\u8f6c\uff0c\u5982\u679c\u6210\u529f\u5219\u7ee7\u7eed\u8fdb\u884c\uff0c\u5982\u679c\u5931\u8d25\u5c31\u64a4\u56de\u9519\u8bef\u6307\u4ee4\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u65f6\u949f\u5468\u671f\uff0c\u6548\u679c\u5c31\u548c\u63d2\u5165bubble\u4e00\u6837\u4e86\uff0c\u8fd9\u6837\u81f3\u5c11\u63d0\u9ad850%\u6548\u7387</li> </ul> </li> <li>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u52a8\u6001\u9884\u6d4b</li> </ul> </li> </ul>"},{"location":"notes/cs/Sys/CO/processor.html#datapath-in-pipeline","title":"DataPath in Pipeline","text":"<p>\u6839\u636e\u6307\u4ee4\u6267\u884c\u7684\u9636\u6bb5\uff0c\u5c06\u5148\u524d\u7684datapath\u8fdb\u884c\u5212\u5206\uff1a</p> <p></p> <p>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f\u90fd\u662f\u4ece\u5de6\u5230\u53f3\uff0c\u4f46\u662f\u4e5f\u6709\u4f8b\u5916\uff1a</p> <ul> <li>\u6700\u540e\u7684\u5199\u56de\u9636\u6bb5\uff0c\u5c06\u5185\u5b58\u7684\u6570\u636e\u5199\u5165\u5bc4\u5b58\u5668\u662f\u4ece\u53f3\u5f80\u5de6\u7684\uff08\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u5192\u9669\uff09</li> <li> <p>PC\u5bc4\u5b58\u5668\u7684\u8f93\u5165\u6570\u636e\uff08\u4e24\u79cd\u9009\u62e9\uff09\u662f\u4ece\u53f3\u5f80\u5de6\u4f20\u9012\u7ed9PC\u9009\u62e9MUX\u7684\uff08\u53ef\u80fd\u4f1a\u5bfc\u81f4\u63a7\u5236\u5192\u9669\uff09</p> </li> <li> <p>\u5728\u6d41\u6c34\u7ebf\u4e2d\u6211\u4eec\u9700\u8981\u50a8\u5b58\u8fdb\u5165\u6267\u884c\u7684\u6307\u4ee4\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u5bc4\u5b58\u5668\uff0c\u53eb\u505a\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\uff0c\u4f4d\u4e8e\u4e24\u4e2a\u9636\u6bb5\u4e4b\u95f4</p> </li> </ul> <p>ld process of pipeline</p> IFIDEXMEMWB <p></p> <ul> <li>\u5c06PC\u5bc4\u5b58\u5668\u7684\u6307\u4ee4\u5730\u5740\u4f20\u7ed9IF/ID\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\uff0c\u4f9b\u4e0b\u4e00\u6761\u6307\u4ee4\u4f7f\u7528</li> <li>\u540c\u65f6\u4f20\u9012\u6307\u4ee4\u5185\u5bb9</li> </ul> <p></p> <ul> <li>\u9664\u4e86\u7ee7\u7eed\u4f20\u9012\u6307\u4ee4\u5730\u5740\uff0c\u8fd8\u8981\u4f20\u9012\u5bc4\u5b58\u5668\u5806\u7684\u6570\u636e\u548c\u7acb\u5373\u6570</li> </ul> <p></p> <ul> <li>\u5c06\u8ba1\u7b97\u597d\u7684\u5185\u5b58\u5730\u5740\u653e\u5165EX/MEM</li> </ul> <p></p> <ul> <li>\u4eceEX/MEM\u8bfb\u53d6\u5185\u5b58\u5730\u5740\uff0c\u7136\u540e\u5c06\u5bf9\u5e94\u7684\u5185\u5b58\u6570\u636e\u5199\u5165MEM/WB</li> </ul> <p></p> <ul> <li>\u4eceMEM/WB\u8bfb\u53d6\u5185\u5b58\u6570\u636e\uff0c\u7136\u540e\u5c06\u6570\u636e\u5199\u5165\u5bc4\u5b58\u5668</li> </ul> <p>save register number</p> <p>\u5728\u6700\u540e\u5199\u56de\u6570\u636e\u65f6\uff0c\u6211\u4eec\u7684\u6307\u4ee4\u4e2d\u5df2\u7ecf\u6ca1\u6709\u9700\u8981\u5199\u56de\u7684\u5bc4\u5b58\u5668\u7f16\u53f7\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u6539\u8fdb\u4e86\u8fd9\u4e2a\u8bbe\u8ba1\uff0c\u5c06\u5bc4\u5b58\u5668\u7f16\u53f7\u653e\u5728\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u4e2d\uff0c\u8fd9\u6837\u5728WB\u9636\u6bb5\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528</p>"},{"location":"notes/cs/Sys/CO/processor.html#control-in-pipeline","title":"Control in Pipeline","text":"<p>\u5728\u5355\u5468\u671fCPU\u4e2d\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u7cfb\u5217\u63a7\u5236\u4fe1\u53f7\u6765\u8fdb\u884c\u63a7\u5236\uff0c\u5728\u8fd9\u91cc\u6d41\u6c34\u7ebfCPU\u4e5f\u9700\u8981\u63a7\u5236\u6307\u4ee4\uff0c\u5e76\u4e14\u8fd9\u4e9b\u63a7\u5236\u6307\u4ee4\u4e5f\u662f\u968f\u7740\u6d41\u6c34\u578b\u5bc4\u5b58\u5668\u7684\u4f20\u9012\u800c\u4f20\u9012\u7684</p> <p>\u53ef\u4ee5\u770b\u5230\u63a7\u5236\u4fe1\u53f7\u968f\u7740\u6d41\u6c34\u7ebf\u7684\u8fdb\u884c\u9010\u6e10\u88ab\u4f7f\u7528\uff0c\u88ab\u4f7f\u7528\u7684\u4fe1\u53f7\u5c06\u4e0d\u518d\u88ab\u4f20\u9012\uff0c\u8282\u7ea6\u4e86\u7a7a\u95f4</p> <p>\u5728\u52a0\u5165\u63a7\u5236\u5668\u540e\uff1a</p> <p></p>"},{"location":"notes/cs/Sys/CO/processor.html#data-harzards-fixing","title":"Data Harzards Fixing","text":"<p>data hazard\u7684\u89e3\u51b3\u65b9\u6cd5\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u8fdb\u884c\u524d\u9012forwarding\uff0c\u53e6\u4e00\u79cd\u662f\u8fdb\u884c\u505c\u987fstall</p>"},{"location":"notes/cs/Sys/CO/processor.html#forwarding","title":"Forwarding","text":"<pre><code>sub x2, x1, x3\nand x12, x2, x5\nor  x13, x6, x2\nadd x14, x2, x2\nsd  x15, 100(x2)\n</code></pre> <p>\u753b\u51fa\u6d41\u6c34\u7ebf\u56fe\uff1a</p> <p>\u56fe\u4e2d\u4e0b\u65b9\u56db\u4e2a\u84dd\u8272\u7684\u5bc4\u5b58\u5668\u662f\u9700\u8981\u524d\u9012\u6570\u636e\u7684\u5bc4\u5b58\u5668\uff0c\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5f97\u5230\u6700\u7ec8\u7684x2\u6570\u503c\u662f\u5728MEM/WB\u9636\u6bb5\uff0c\u4e5f\u5c31\u662f\u56fe\u4e2d\u6240\u793a\u7b2c\u4e00\u4e2a\u84dd\u8272\u5bc4\u5b58\u5668\uff0c\u4f46\u662f\u663e\u7136\u4e0a\u65b9\u7684\u4e24\u4e2a\u9700\u8981x2\u5bc4\u5b58\u5668\u6570\u503c\u7684\u6307\u4ee4\u65e0\u6cd5\u524d\u9012\uff0c\u800c\u6211\u4eec\u5728EX\u9636\u6bb5\u5176\u5b9e\u5df2\u7ecf\u5f97\u5230\u4e86x2\u7684\u6570\u503c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06x2\u7684\u6570\u503c\u524d\u9012\u7ed9\u4e0a\u65b9\u4e24\u4e2a\u6307\u4ee4</p> <p>\u6211\u4eec\u89c2\u5bdf\u5230\u4e24\u4e2a\u524d\u9012\u7684\u53d1\u751f\uff1a</p> <ul> <li>\"1\"\u578b\u662f\u76f8\u90bb\u7684\u524d\u9012\uff1a</li> </ul> \\[ \\text{EX/MEM.RegRd} \\rightarrow \\text{ID/EX.RegRs1(Or Rs1)} \\] <ul> <li>\"2\"\u578b\u662f\u76f8\u90bb\u4e24\u4e2a\u6307\u4ee4\u4e4b\u95f4\u7684\u524d\u9012\uff1a</li> </ul> \\[ \\text{MEM/WB.RegRd} \\rightarrow \\text{ID/EX.RegRs2(Or Rs2)} \\] <p>\u524d\u9012\u7684\u5224\u65ad</p> <p>\u9664\u4e86\u4e0a\u8ff0\u4e24\u4e2a\u5224\u65ad\uff0c\u8fd8\u9700\u8981\u8865\u5145\u4e00\u4e9b\u5224\u65ad\u6761\u4ef6</p> <ul> <li>\u5e76\u4e0d\u662f\u6240\u6709\u6307\u4ee4\u90fd\u5305\u542b\u5199\u5165\u5bc4\u5b58\u5668\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u63d0\u524d\u68c0\u6d4b<code>RegWrite</code>\u4fe1\u53f7\u662f\u5426\u4e3a1\uff0c\u4e0d\u662f\u7684\u8bdd\u76f4\u63a5\u4e0d\u7528\u524d\u9012</li> <li> <p>\u5982\u679c\u76ee\u6807\u5bc4\u5b58\u5668\u7684\u6570\u503c\u662f0\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u8fdb\u884c\u524d\u9012\uff0c\u56e0\u4e3a0\u503c\u7684\u5bc4\u5b58\u5668\u6ca1\u6709\u4efb\u4f55\u610f\u4e49</p> </li> <li> <p>\u540c\u6837\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662fdubble data harzard\uff0c\u5982\u679c\u8fde\u7eed\u4e09\u6761\u6307\u4ee4\u90fd\u5728\u4f7f\u7528\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6700\u65b0\u7684\u6307\u4ee4\u8fdb\u884c\u524d\u9012\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u6307\u4ee4\uff1a</p> </li> </ul> <p><pre><code>add x2, x2, x3\nadd x2, x2, x4\nadd x2, x2, x5\n</code></pre> \u6211\u4eec\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5224\u65ad\uff0c\u5c31\u662f\u4e0b\u65b9\u4f2a\u4ee3\u7801\u7684\u9ad8\u4eae\u90e8\u5206</p> <p>\u6700\u7ec8\u6211\u4eec\u53ef\u4ee5\u5c06\u6574\u4e2aforwarding unit\u7684\u903b\u8f91\u5199\u6210\u4e00\u4e2a\u5927\u7684\u5224\u65ad\u6a21\u5757\uff1a</p> <pre><code>//For EX to ID\nif (EX/MEM.RegWrite == 1 and EX/MEM.RegRd != 0)\n    if (EX/MEM.RegRd == ID/EX.RegRs1)\n        ForwardA = 10\n    if (EX/MEM.RegRd == ID/EX.RegRs2)\n        ForwardB = 10\n\n//For MEM to ID\nif (MEM/WB.RegWrite == 1 and MEM/WB.RegRd != 0)\n    and not (EX/MEM.RegWrite == 1 and (EX/MEM.RegRd == ID/EX.RegRs1 or EX/MEM.RegRd == ID/EX.RegRs2))\n    if (MEM/WB.RegRd == ID/EX.RegRs1)\n        ForwardA = 01\n    if (MEM/WB.RegRd == ID/EX.RegRs2)\n        ForwardB = 01\n</code></pre> <p>\u6211\u4eec\u5728\u8fd9\u6bb5\u5224\u8bfb\u4e2d\u4f7f\u7528\u4e86<code>ForwardA</code>\u548c<code>ForwardB</code>\u6765\u8868\u793a\u524d\u9012\u7684\u7c7b\u578b\uff0c\u5176\u5b9e\u5c31\u662f\u6dfb\u52a0\u4e00\u4e2aMux\u6765\u9009\u62e9ALU\u7684\u8f93\u5165\u4f4d\u7f6e\u662fA\u8fd8\u662fB</p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5b8c\u6574\u7684datapath\uff1a</p>"},{"location":"notes/cs/Sys/CO/processor.html#stalling","title":"Stalling","text":"<p>\u5148\u524d\u6211\u4eec\u8bb2\u5230\u8fc7\uff0c\u5f53\u53d1\u751fload-use data hazard\u65f6\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u505c\u987f\uff0c\u4e5f\u5c31\u662f\u63d2\u5165stall\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f</p> <p>load-use data hazard</p> <p> </p> <p>\u53ef\u4ee5\u770b\u5230\u5728ld\u6307\u4ee4\u5f97\u5230\u6570\u636e\u7684\u4f4d\u7f6e\u662f\u5728MEM/WB\u9636\u6bb5\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u80fd\u5728ALU\u8ba1\u7b97\u51fa\u7ed3\u679c\uff08imm + x1 \u7684\u5730\u5740\uff09\u540e\u7684\u76f4\u63a5\u62ff\u51fa\uff0c\u56e0\u4e3aALU\u7684\u8ba1\u7b97\u7ed3\u679c\u5730\u5740\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\u624d\u662fx2\u7684\u503c</p> <p>\u8fd9\u65f6\u65e0\u8bba\u600e\u6837\u524d\u9012\u90fd\u8fbe\u4e0d\u5230\u76ee\u7684\uff0c\u53ea\u80fd\u6dfb\u52a0\u4e00\u4e2astall</p> <p>\u7ed9\u51fa\u5224\u65ad\u6761\u4ef6\uff1a</p> <pre><code>if (ID/EX.MemRead == 1 and (ID/EX.RegRs(1 or 2) == IF/ID.RegRd))\nstall pipeline \n</code></pre> <ul> <li>\u6211\u5728\u5b66\u4e60\u8fd9\u91cc\u65f6\u5e76\u6ca1\u6709\u5f88\u7406\u89e3\uff0c\u56e0\u4e3a\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u662f\u770b\u5230\u4e86ld\u6307\u4ee4\u6267\u884c\u7ed3\u675f\u540e\u7684\u60c5\u51b5\uff0c\u4f46\u5176\u5b9e\u5728ld\u6307\u4ee4\u6267\u884c\u5230ID/EX\u9636\u6bb5\u65f6\uff0cadd\u6307\u4ee4\u5c31\u5df2\u7ecf\u8bd1\u7801\u5b8c\u6210\u4e86\uff0c\u6211\u4eec\u5728CC2-CC3\u8fd9\u4e2a\u65f6\u523b\u5c31\u5df2\u7ecf\u8981\u8fdb\u884c\u5224\u65ad</li> </ul> <p>\u8fd9\u6837\u6211\u4eecstall\u540e\u7684\u6d41\u6c34\u7ebf\u8fdb\u7a0b\u5c31\u53d8\u4e3a\u4e86\uff1a</p> <p>hygg\u7684\u4f5c\u4e1a\u9898\u4e2d\u8fd9\u5f20\u56fe\u7247\u4e0d\u9519\uff0c\u5bf9\u9f50\u7684\u662f\u6bcf\u4e2a\u6307\u4ee4\u9636\u6bb5\uff0c\u8fd9\u6837\u5c31\u5f88\u5bb9\u6613\u770b\u51fastall\u7684\u63d2\u5165\u4f4d\u7f6e\uff0c\u5411hygg\u5b66\u4e60\uff08\uff09</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u89e3\u51b3\u600e\u4e48\u8fdb\u884cstall\uff1a</p> <ul> <li>\u505c\u6b62IF\uff1a\u4e0d\u80fd\u6539\u53d8PC\u5bc4\u5b58\u5668\u7684\u6570\u503c\uff08\u8fdb\u884c\u91cd\u590d\u8bfb\u53d6\uff09\uff0c\u6240\u4ee5\u8981\u4e3a PC \u5bc4\u5b58\u5668\u6dfb\u52a0\u5199\u4fe1\u53f7 <code>PCWrite</code></li> <li>\u505c\u6b62ID\uff1a\u4e0d\u80fd\u6539\u53d8 IF/ID \u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u7684\u503c\uff08\u8bfb\u53d6\u91cd\u590d\u7684\u503c\uff09\u6240\u4ee5\u8981\u4e3a\u8be5\u5bc4\u5b58\u5668\u6dfb\u52a0\u5199\u4fe1\u53f7 <code>IF/IDWrite</code></li> <li>\u786e\u4fdd\u7a7a\u64cd\u4f5cnops\uff1a\u4fdd\u8bc1\u6d41\u6c34\u7ebf\u4e0d\u6539\u53d8\u72b6\u6001\uff0c\u9700\u8981\u8ba9\u6240\u6709\u7684\u63a7\u5236\u4fe1\u53f7\u4e3a0\uff08\u5b9e\u9645\u4e0a\u53ea\u9700\u8981<code>RegWrite</code>\u548c<code>MemWrite</code>\u4e3a0\uff0c\u5176\u4ed6\u65e0\u6240\u8c13\uff09</li> </ul> <p></p>"},{"location":"notes/cs/Sys/CO/processor.html#control-hazards-fixing","title":"Control Hazards Fixing","text":"<p>\u5982\u56fe\uff0c\u5728beq\u6307\u4ee4\u4e2d\uff0c\u6211\u4eec\u6b63\u5e38\u60c5\u51b5\u4e0b\u9700\u8981\u5728WB\u9636\u6bb5\u624d\u80fd\u77e5\u9053beq\u6307\u4ee4\u7684\u6267\u884c\u7ed3\u679c\uff0c\u8fd9\u4e4b\u4e2d\u4f1a\u6709\u4e09\u4e2a\u6307\u4ee4\u7684\u6267\u884c\uff08\u88ab\u6d6a\u8d39\uff09\uff0c\u56e0\u6b64\u5206\u652f\u6307\u4ee4\u7684\u4f18\u5316\u662f\u5f88\u91cd\u8981\u7684</p> <ul> <li>\u4e00\u4e2a\u601d\u8def\u662f\uff1aCalculate in advance</li> </ul> <p>\u6b63\u5e38\u60c5\u51b5\u4e0b\u7528ALU\u6765\u8ba1\u7b97\u51fabeq\u6307\u4ee4\u7684\u5730\u5740\uff0c\u4f46\u5b9e\u9645\u4e0a\u5728ID\u9636\u6bb5\u5df2\u7ecf\u6709imm\u548cx1\u7684\u503c\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5728ID\u9636\u6bb5\u540e\u589e\u52a0\u4e00\u4e2a\u4e13\u95e8\u7684\u5206\u652f\u52a0\u6cd5\u5668\u5c31\u53ef\u4ee5\u63d0\u524d\u7b97\u51fa\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e24\u4e2a\u6307\u4ee4\u7684\u6d6a\u8d39</p> 12 <p></p> <p></p> <ul> <li>\u4e00\u4e2a\u66f4\u597d\u7684\u601d\u8def\u662f\uff1aBranch Prediction\uff0c\u6709\u4e24\u79cd<ul> <li>Static Prediction</li> <li>Dynamic Prediction</li> </ul> </li> </ul> <p>\u9759\u6001\u9884\u6d4b\u5c31\u662f\u4e00\u76f4\u8ba4\u4e3a\u81ea\u5df1\u8df3\u8f6c\u6216\u8005\u4e0d\u8df3\u8f6c\uff0c\u52a8\u6001\u9884\u6d4b\u5219\u662f\u6839\u636e\u5386\u53f2\u60c5\u51b5\u8fdb\u884c\u5224\u65ad</p> <p>1-bit predictor\uff1a</p> <p>\u75280 1\u6765\u533a\u522b\u4e0a\u6b21\u7684\u5206\u652f\u6307\u4ee4\u662f\u5426\u53d1\u751f\u8df3\u8f6c\uff0c\u5982\u679c\u9884\u6d4b\u5931\u8d25\uff0c\u53cd\u8f6c\u8fd9\u4e2abit\u3002</p> <p>2-bit predictor\uff1a</p> <p>\u76f8\u5f53\u4e8e\u53ea\u6709\u8fde\u7eed\u4e24\u6b21\u5224\u65ad\u9519\u8bef\u624d\u4f1a\u66f4\u6539\u5224\u65ad\uff0c\u53ef\u4ee5\u4f18\u5316while loop\u7684\u72af\u9519\u6b21\u6570</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html","title":"Database System","text":"<p> \u7ea6 5985 \u4e2a\u5b57  14 \u884c\u4ee3\u7801  98 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 20 \u5206\u949f</p> <p> </p> <p>\u6458\u8981</p> <p>\u8fd9\u662f\u6211\u5728\u5b66\u4e60\u6570\u636e\u5e93\u7cfb\u7edf\u65f6\u7684memo\uff0c\u6211\u4e0d\u4f1a\u7cfb\u7edf\u7684\u6574\u7406\u6574\u4e2a\u8bfe\u7a0b\u7684\u7b14\u8bb0\uff0c\u4f46\u662f\u4f1a\u5199\u4e0b\u4e00\u4e9b\u5907\u5fd8\u548c\u4f8b\u5b50\u65b9\u4fbf\u590d\u4e60\u65f6\u4f7f\u7528</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#relational-model","title":"Relational Model","text":"<ul> <li>\u5173\u7cfb\u7684\u5b9a\u4e49\u6700\u57fa\u672c\u662f\u96c6\u5408\uff0c\u96c6\u5408\u662f\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u7684</li> </ul> <p>mutiset \u662f\u5141\u8bb8\u91cd\u590d\u5143\u7d20\u7684</p> <ul> <li> <p>Union \u4e2d\u8981\u6c42\uff1a</p> <ul> <li>\u4e24\u4e2a\u96c6\u5408\u7684arity\u76f8\u540c\uff08same number of attributes\uff09</li> <li>attribute domains \u662f\u8981compatible\u7684\uff0c\u4e0d\u662f\u8bf4\u5b8c\u5168\u76f8\u540c\uff0c\u4f46\u662f\u8981\u7c7b\u4f3c</li> </ul> </li> <li> <p>Rename\uff1a</p> <p>\u91cd\u547d\u540d\u4e2d\u7684E\u4e0d\u4e00\u5b9a\u662f\u5173\u7cfb\uff0c\u4e5f\u53ef\u4ee5\u662f\u8868\u8fbe\u5f0f</p> </li> <li> <p>Natural Join:</p> <p>\u6ca1\u6709\u589e\u52a0\u8868\u8fbe\u80fd\u529b\u4f46\u662f\u7b80\u5316\u4e86\u64cd\u4f5c\uff0c\u53ef\u4ee5\u7528\u57fa\u672c\u64cd\u4f5c\u4ee3\u66ff\uff1a</p> <ul> <li>\u7b1b\u5361\u5c14\u79ef</li> <li>\u9009\u62e9\u5171\u540c\u5c5e\u6027\u76f8\u540c\u7684\u90e8\u5206</li> <li>\u6295\u5f71</li> </ul> <p>\u8fd8\u6709\u4e00\u79cdleft outer join \\(\\mathbin{\u27d5}\\)\uff0c\u662f\u7b1b\u5361\u5c14\u79ef\u540e\u9009\u62e9\uff0c\u5982\u679c\u5c5e\u6027\u4e0d\u540c\uff0c\u5c31\u7528null\u6765\u586b\u5145</p> <p> </p> <p>\u540c\u7406\u8fd8\u6709right outer join \\(\\mathbin{\u27d6}\\)\uff0cleft outer join\u7684\u955c\u50cf\uff0c\u4ee5\u53cafull outer join \\(\\mathbin{\u27d7}\\)\uff0c\u4e24\u4e2a\u7684\u5e76\u96c6\uff1a</p> <p> </p> </li> <li> <p>Semijoin:</p> <p>\u7528\u7b26\u53f7\\(\\ltimes\\)\u8868\u793a\uff0c\u662fnatural join\u7684\u5b50\u96c6\uff0c\u53ea\u4fdd\u7559natural join\u540e\u5de6\u8fb9\u5173\u7cfb\u4e2d\u7684\u5c5e\u6027\uff0c\u540c\u7406\u4e5f\u6709\\(\\rtimes\\)\uff0c\u662fright semijoin\uff0c\u4fdd\u7559\u53f3\u8fb9\u5173\u7cfb\u4e2d\u7684\u5c5e\u6027\uff1a</p> <p> </p> </li> <li> <p>Division:</p> <p>\u7528\u7b26\u53f7\\(\\div\\)\u8868\u793a\uff0c\u5bf9\\(r \\div s\\)\uff0c\u8981\u6c42\uff1a</p> <ul> <li>\\(s\\)\u662f\\(r\\)\u7684\u5b50\u96c6</li> <li>\\(s\\)\u7684\u5c5e\u6027\u662f\\(r\\)\u5c5e\u6027\u7684\u5b50\u96c6</li> </ul> <p>\u7ed3\u679c\u662f\u5305\u542b\\(s\\)\u5c5e\u6027\u7684\u5bf9\u5e94\\(r\\)\u7684\u5143\u7ec4\uff1a</p> <p> </p> <p>\u7528\u5904\uff1a</p> <p> </p> </li> <li> <p>Multiset:</p> <p>\u591a\u91cd\u96c6\uff0c\u5141\u8bb8\u91cd\u590d\u5143\u7d20\uff08\u53bb\u9664\u91cd\u590d\u5143\u7d20\u4ee3\u4ef7\u5f88\u5927\uff09\u8fd9\u6837\u5c31\u652f\u6301SQL\u4e2d\u64cd\u4f5c</p> </li> </ul>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#intro-to-sql","title":"Intro to SQL","text":"<ul> <li> <p>interval:period of time </p> <ul> <li>\u7528\u4e24\u4e2a\u65f6\u95f4\u505a\u5dee</li> </ul> </li> <li> <p>create table \u6765\u4e2a\u4f8b\u5b50\uff1a</p> </li> </ul> <p>create table\u53ea\u662f\u5728\u5b9a\u4e49\u4e00\u4e2aschema\uff0c\u9700\u8981\u5728\u540e\u7eed\u7684\u5982insert\u64cd\u4f5c\u4e2d\u521b\u5efainstance</p> <ul> <li>Integrity Constrains</li> </ul> <ul> <li> <p>foreign key</p> <p>\u5bf9\u4e8eforeign key\uff0c\u8981\u6c42\u5728\u4e3b\u952e\u4e2d\u5b58\u5728\uff0c\u6216\u8005\u4e3anull\uff0c\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u5bfc\u81f4foreign key\u6307\u5411\u7684\u5bf9\u8c61\u88ab\u5220\u9664\uff0c\u4f1a\u6709\u4ee5\u4e0b\u53ef\u9009\u9879\uff1a</p> <ul> <li>on delete cascade: \u7ea7\u8054\u5220\u9664\uff0c\u5c06\u6709\u5173\u7684\u5168\u90e8\u5220\u9664\uff08\u7cfb\u6ca1\u4e86\u5b66\u751f\u4e5f\u5220\u6389\uff09</li> <li>on delete set null: \u8bbe\u7f6e\u4e3anull\uff08\u7cfb\u6ca1\u4e86\u5b66\u751f\u8fd8\u5728\u4f46\u4e0d\u77e5\u9053\u7cfb\u540d\uff09</li> <li>on delete restrict: \u62d2\u7edd\u5220\u9664\uff08\u7cfb\u91cc\u6709\u5b66\u751f\uff0c\u7cfb\u5c31\u4e0d\u80fd\u5220\uff09</li> <li>on delete set default: \u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff08\u7cfb\u6ca1\u4e86\uff0c\u5b66\u751f\u8fd8\u5728\uff0c\u8bbe\u7f6e\u5230\u9ed8\u8ba4\u7684\u7cfb\u4e2d\uff09</li> </ul> <p>\u540c\u6837\u5bf9\u4e8eupdate\uff0c\u4e5f\u5c31\u662f\u88ab\u5f15\u7528\u7684\u5bf9\u8c61\u7684\u66f4\u65b0\uff0c\u4e5f\u6709on update+\u56db\u4e2a\u4e00\u6837\u7684\u9009\u9879\uff0c\u53ea\u662f\u8fd9\u91cc\u7684\u7ea7\u8054\u662f\u66f4\u65b0\u6240\u6709\u5f15\u7528\u8005\u7684\u503c</p> </li> <li> <p>alter table</p> </li> </ul> <p>\u652f\u6301\u52a8\u6001\u66f4\u6539\u8868\u7684\u5b9a\u4e49</p> <ul> <li>group by </li> </ul> <ul> <li>natural join</li> </ul> <p>\u7b80\u5316\u64cd\u4f5c</p> <ul> <li>\u901a\u914d\u7b26</li> </ul> <p>\u4e2d\u6587\u5b57\u7b26\u5360\u4f4d\u662f\u4e24\u4e2a\u5b57\u8282\uff0c\u6709\u53ef\u80fd\u51fa\u73b0\u524d\u540e\u4e24\u4e2a\u5b57\u4e2d\u95f4\u7684\u90e8\u5206\u88ab\u622a\u65ad\u5339\u914d\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u4e2d\u6587\u5efa\u8bae\u5b8c\u5168\u5339\u914d\u6216\u8005\u7528 _ _ \u6765\u8868\u793a\u4e00\u4e2a\u6c49\u5b57</p> <ul> <li>limit</li> </ul> <p>\u7528\u4e8e\u63a7\u5236\u8fd4\u56de\u7684\u884c\u6570</p> <pre><code>select * from student limit 5;\n==\nselect * from student 0, 5; /* offset, row_count*/\n</code></pre> <ul> <li>not exist\u7684\u4e00\u4e2a\u4f8b\u5b50</li> </ul>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#intermediate-sql","title":"Intermediate SQL","text":"<ul> <li>\u8fde\u63a5\u8868\u8fbe\u5f0f</li> </ul> <p>\u8fde\u63a5\u6761\u4ef6\u4e4b\u524d\u7684\u8868\u8fbe\u5f0f\u4e2d\u8fd9\u6837\u5199\uff1a</p> <pre><code>select *\nfrom a, b\nwhere a.id = b.id\n</code></pre> <p>\u73b0\u5728\u53ef\u4ee5\u91c7\u7528<code>join using</code>\u6765\u5199\uff1a</p> <p><pre><code>select *\nfrom a join b using (id)\n</code></pre> \u4ee5\u53ca\uff1a<code>join on</code></p> <pre><code>from a join b on a.id = b.id\n</code></pre> <p>\u867d\u7136\u770b\u4e0a\u53bbon\u7684\u4f5c\u7528\u53ef\u4ee5\u88abusing\u548cwhere\u4ee3\u66ff\uff0c\u4f46\u662f\u5728\u4f7f\u7528outer join\u65f6\uff0con\u53ef\u4ee5\u8d77\u5230\u4f5c\u7528</p> <ul> <li>\u4f7f\u7528outer join\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> <p>\u901a\u8fc7outer join\u89e3\u51b3\uff1a\u4fdd\u7559\u5de6\u8fb9\u5173\u7cfb\u4e2d\u7684\u6ca1\u6709\u8bfe\u7a0b\u7684\u5b66\u751f\u7684ID\uff0c\u5176\u4f59\u4fe1\u606fnull</p> <p>\u5982\u679c\u4f7f\u7528\u7684\u662fwhere\uff1a</p> <p>\u4e5f\u5c31\u662f\u8bf4outer join\u53ea\u662f\u5bf9\u7ed3\u679c\u5173\u7cfb\u8fdb\u884c\u7684\u8865\u5145\uff0c\u800c\u4e0d\u662f\u5bf9\u53c2\u4e0e\u8fde\u63a5\u7684\u5173\u7cfb\u8fdb\u884c\u8865\u5145\uff0c\u56e0\u6b64\u5728\u4f7f\u7528where\uff08\u4f5c\u7528\u5bf9\u8c61\u5c31\u662f\u53c2\u4e0e\u8fde\u63a5\u7684\u5173\u7cfb\uff09\u65f6\uff0c\u4e0a\u8ff0\u4f8b\u5b50\u4f1a\u51fa\u73b0\u6839\u672c\u627e\u4e0d\u5230Snow\u8fd9\u4e2a\u5b66\u751f\u7684ID\uff0cwhere\u5c31\u4f1a\u8fc7\u6ee4\u6389Snow\u7684\u4fe1\u606f</p> <p>\u8fde\u63a5\u7c7b\u578b\u53ef\u4ee5\u548c\u8fde\u63a5\u6761\u4ef6\u7ec4\u5408\u4f7f\u7528\uff1a</p> <ul> <li> <p>\u4e8b\u52a1 trasaction</p> </li> <li> <p>\u5b8c\u6574\u6027\u7ea6\u675f</p> </li> <li> <p>\u7528\u6237\u5b9a\u4e49\u7c7b\u578b</p> </li> </ul> <pre><code>create type dollars as numeric(12, 2) final; /*final \u8868\u793a\u662f\u6700\u5c0f\u7684\u7c7b\u578b\uff0c\u4e0d\u80fd\u88ab\u7ee7\u627f*/\n\ncreate table sales (\n    id integer,\n    amount dollars\n);\n</code></pre> <ul> <li>Domain \u7c7b\u578b\u5b9a\u4e49</li> </ul> <p>domains\u4e0etype\u76f8\u6bd4\u53ef\u4ee5\u6dfb\u52a0\u7ea6\u675f\uff0c\u6bd4\u5982\uff1a</p> <pre><code>create domain dollars as numeric(12, 2) check (value &gt;= 0);\n</code></pre> <ul> <li>Large Objects Types</li> </ul> <p>\u56fe\u50cf\u3001\u89c6\u9891\u7b49\u5927\u4f53\u79ef\u6587\u4ef6\u88ab\u5b58\u50a8\u4e3a\u5927\u5bf9\u8c61\u7c7b\u578b</p> <ul> <li>Authorization</li> </ul> <p>\u89d2\u8272\u662f\u6743\u9650\u7684\u96c6\u5408</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#advanced-sql","title":"Advanced SQL","text":"<ul> <li>Procedure and Functions</li> </ul>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#design-and-er-model","title":"Design and ER Model","text":"<ul> <li>Attribute</li> </ul> <p>\u590d\u5408\u5c5e\u6027\uff1a\u5bf9\u5e94\u7684\u7ec4\u4ef6\u5c5e\u6027\u4f1a\u7d27\u653e\u5728\u590d\u5408\u5c5e\u6027\u7684\u4e0b\u65b9\uff0c\u5e76\u4e14\u5f00\u5934\u6709\u7f29\u8fdb</p> <p>\u591a\u503c\u5c5e\u6027\uff1a\u88ab\u82b1\u62ec\u53f7\u5305\u88f9</p> <p>\u6d3e\u751f\u5c5e\u6027\uff1a\u672b\u5c3e\u6709\u5706\u62ec\u53f7</p> <ul> <li>Cardinality</li> </ul> <p>\u7528\u6a2a\u7ebf\u4e0a\u7684lh\u6765\u8868\u793a\u5168\u8fde\u63a5\u3001\u5355\u5c04</p> <ul> <li>\u5173\u7cfb\u96c6\u7684\u4e3b\u952e</li> </ul> <p>\u6211\u4eec\u9700\u8981\u786e\u4fdd\u5f97\u5230\u7684\u5173\u7cfb\u662f\u552f\u4e00\u7684\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7\u9009\u53d6\u4e00\u4e2a\u6216\u591a\u4e2a\u5c5e\u6027\u6765\u786e\u4fdd\u552f\u4e00\u6027\uff0c\u8fd9\u4e2a\u5c5e\u6027\u6216\u5c5e\u6027\u96c6\u88ab\u79f0\u4e3a\u5173\u7cfb\u96c6\u7684\u4e3b\u952e</p> <p>\u6240\u4ee5\u5728\u591a\u5bf9\u4e00\u591a\u5bf9\u591a\u7b49\u95ee\u9898\u4e2d\uff0c\u53ea\u9700\u8981\u601d\u8003\u600e\u4e48\u8ba9\u5173\u7cfb\u96c6\u552f\u4e00\u5373\u53ef</p> <ul> <li>\u4e09\u5143\u5173\u7cfb\u4e2d\uff0c\u4e0d\u80fd\u4f7f\u7528\u8d85\u8fc7\u4e00\u4e2a\u7bad\u5934</li> </ul> <p>\u539f\u56e0\u5c31\u662f\u5728\u552f\u4e00\u6027\u8fd9\u91cc\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230\u6709\u4e24\u79cd\u7ed3\u679c</p> <p>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\u4e00\u79cd\u662f\u5c06\u5173\u7cfb\u96c6\u8f6c\u53d8\u6210\u5b9e\u4f53\u96c6\uff0c\u53e6\u4e00\u79cd\u662f\u4f7f\u7528\u51fd\u6570\u4f9d\u8d56</p> <ul> <li>Weak Entity Set</li> </ul> <p>\u6211\u4eec\u5728\u5efa\u7acbsection\u548ccourse\u4e4b\u95f4\u7684\u5173\u7cfbsec_course\u65f6\uff0c\u53d1\u73b0\u5982\u679csec_course\u4e2d\u4fdd\u7559\u4e86course_id\uff0c\u90a3\u4e48\u5176\u5b9esection\u4e2d\u4e5f\u6709\uff0c\u8fd9\u6837\u5c31\u5341\u5206\u591a\u4f59\uff0c\u5982\u679c\u4e0d\u4fdd\u7559\u8fd9\u4e2a\u5173\u7cfb\uff0c\u90a3\u4e48section\u548ccourse\u4e4b\u95f4\u7684\u5173\u7cfb\u5c31\u65e0\u6cd5\u5efa\u7acb</p> <p>\u6211\u4eec\u5c06section\u4e2d\u7684course_id\u53bb\u6389\uff0c\u7136\u540e\u5efa\u7acbsection\u548csec_course\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u73b0\u5728\u9762\u4e34\u7684\u95ee\u9898\u662fsection\u4e0d\u5177\u6709\u552f\u4e00\u6027\u4e86\uff0c\u8fd9\u65f6\u6211\u4eec\u5b9a\u4e49section\u4e3a\u5f31\u5b9e\u4f53\u96c6\uff0c\u4ed6\u7684\u552f\u4e00\u6027\u7531\u4e24\u70b9\u56e0\u7d20\u51b3\u5b9a\uff1a</p> <ul> <li>identifying entity set\uff1a\u5728\u6807\u8bc6\u6027\u5b9e\u4f53\u96c6\u4e2d\u9009\u62e9\u4e3b\u952e</li> </ul> <p>+</p> <ul> <li>discriminator\uff1a\u4e00\u4e9b\u9644\u52a0\u7684\u7528\u4f5c\u533a\u5206\u7684\u5c5e\u6027</li> </ul> <p>\u7136\u540e\u8fde\u63a5\u5f3a\u5f31\u5b9e\u4f53\u96c6\u7684\u5173\u7cfb\u5c31\u88ab\u79f0\u4e3aidentifying relationship</p> <ul> <li>Redundant Attributes</li> </ul> <p>\u5bf9\u4e8e\u7ec4\u6210\u5c5e\u6027\uff0c\u76f4\u63a5\u5199\u6700\u5c0f\u5b50\u9879\uff0c\u4e2d\u95f4\u9879\u4e0d\u4fdd\u7559\uff1a</p> <p>\u5bf9\u4e8e\u591a\u503c\u5c5e\u6027\uff0c\u6709\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\uff1a</p> <p>\u76f4\u63a5\u8f6c\u6362\u7684\u8bdd\uff0c\u5f97\u5230\u7684\u662f\u4e24\u4e2a\u5173\u7cfb\u96c6\uff0c\u4e00\u4e2a\u662ftime_slot\uff0c\u4e00\u4e2a\u662ftime_slot_detail\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0d\u8981\u524d\u8005\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u65e0\u6cd5\u5b9a\u4e49section\u7684\u5916\u952e</p> <ul> <li>Design Mistakes</li> </ul> <p>assignment\u4e0d\u80fd\u662f\u4e00\u4e2a\u6570\u503c\uff0c\u5e94\u8be5\u662f\u591a\u503c\u7684\uff0c\u6709\u53f3\u8fb9\u4e24\u79cd\u65b9\u5f0f\u6539\u6b63</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#extended-er-feature","title":"Extended ER Feature","text":""},{"location":"notes/cs/Sys/dbs/dbsmemo.html#relational-database-design","title":"Relational Database Design","text":"<p>\u8fd9\u7ae0\u7684\u5185\u5bb9\u6709\u70b9\u591a\uff0c\u6211\u8fdb\u884c\u4e00\u4e2a\u68b3\u7406\uff1a</p> <ul> <li>Features of Good Relational Design</li> <li>Atomic Domains and First Normal Form</li> <li>Decomposition Using Functional Dependencies</li> <li>Functional Dependency Theory</li> <li>Algorithms for Functional Dependencies</li> <li>Decomposition Using Multivalued Dependencies </li> <li>More Normal Forms</li> <li>Database-Design Process</li> <li>Modeling Temporal Data</li> </ul> <p>\u603b\u4f53\u7684\u601d\u8def\u662f\uff1a</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#features-of-good-relational-design","title":"Features of Good Relational Design","text":"<ul> <li>lossless decomposition</li> </ul>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#atomic-domains-and-first-normal-form","title":"Atomic Domains and First Normal Form","text":"<p>\u539f\u5b50\u5316\u7684\u57df\u662f\u6307\u4e0d\u80fd\u518d\u8fdb\u884c\u5206\u89e3\u7684\uff0cFNF\u5c31\u662f\u6307\u6bcf\u4e2a\u5c5e\u6027\u90fd\u662f\u4e0d\u53ef\u5206\u89e3\u7684\uff0c\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662fCS1102\uff0c\u8868\u793a\u8ba1\u7b97\u673a\u7cfb11\u5e74\u768402\u53f7\u8bfe\u7a0b\uff0c\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u4e09\u4e2a\u5c5e\u6027\uff0c\u53e6\u5916\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u4f8b\u5b50\u662f\uff0cthe set of all sets of xx(int, string)\uff0c\u8868\u793a\u6240\u6709int\u548cstring\u7684\u96c6\u5408\uff0c\u8fd9\u5c31\u662fnon-atomic\u7684\u4e86</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#decomposition-using-functional-dependencies","title":"Decomposition Using Functional Dependencies","text":"<p>Define functional dependency:</p> <p>\u7531\u7bad\u5934\u5de6\u4fa7\u80fd\u591f\u5b8c\u5168\u51b3\u5b9a\u53f3\u4fa7\u5373\u53ef</p> <ul> <li>superkey\u548ccandidate key\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</li> </ul> <p>\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662fK\u9700\u8981\u662f\u67d0\u4e2a\u5c5e\u6027\u7684\u95ed\u5305\uff0c\u4e5f\u5c31\u662fK+\u80fd\u4e0d\u80fd\u63a8\u51fa\u6240\u6709\u5c5e\u6027</p> <p>\u4e5f\u5c31\u662f\u8bf4candidate key\u662fsuperkey\u4e2d\u53bb\u6389\u4e00\u4e2a\u5c5e\u6027\u540e\u4e0d\u518d\u662fsuperkey\u7684\u5b50\u96c6\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u79f0\u4e3aminimal superkey</p> <p>\u5f53\u7136\u5982\u679cK+\u53ef\u4ee5\uff0c\u90a3\u4e48K\u4e5f\u5c31\u53ef\u4ee5\uff0c\u5e76\u4e14K\u662f\u6700\u5c0f\u7684\u8bdd\uff0cK\u5c31\u662fcandidate key</p> <ul> <li>trivial \u7684\u5b9a\u4e49\u548c\u6027\u8d28\uff1a</li> </ul> <p>\u5de6\u8fb9\u56ca\u62ec\u53f3\u8fb9\uff0c\u4e00\u5b9a\u662ftrivial</p> <ul> <li> <p>Closure </p> </li> <li> <p>\u4f9d\u8d56\u95ed\u5305\uff1a\u8fd9\u91cc\u7684\u95ed\u5305\u548c\u79bb\u6563\u6570\u5b66\u4e2d\u7684\u7c7b\u4f3c\uff0c\u5c31\u662f\u8ba1\u7b97\u51fd\u6570\u4f9d\u8d56\u7684\u6269\u5c55\uff0c\u5728\u8fd9\u91cc\u8ba1\u7b97\u65f6\u8981\u7528\u5230\u51e0\u4e2a\u5f8b\uff1a</p> </li> </ul> <ul> <li>\u5173\u7cfb\u95ed\u5305\uff1a\u8fd9\u91cc\u662f\u8ba1\u7b97\u5728\u4e00\u7ec4\u51fd\u6570\u4f9d\u8d56\u4e0b\uff0c\u4e00\u4e2a\u5c5e\u6027\u80fd\u63a8\u5bfc\u51fa\u7684\u6240\u6709\u5c5e\u6027</li> </ul> Example <p> </p> <p>Tip</p> <p>\u51e0\u4e2a\u597d\u7528\u7684\u6027\u8d28\uff1a</p> <p> </p> <p>\u7b2c\u4e00\u4e2a\u8bb2\u8fc7\u4e86\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u662f\u9a8c\u8bc1\u7528trivial\u6027\u8d28\u6765\u53cd\u5411\u63a8\u5230\u4f9d\u8d56\uff0c\u6bd4\u8f83\u65b9\u4fbf</p> <p>\u7b2c\u4e09\u4e2a\u5c31\u662f\u53ef\u4ee5\u6709\u6761\u7406\u7684\u8ba1\u7b97\u51fa\u4f9d\u8d56\u95ed\u5305</p> <p> </p> <p>\u5148\u5199\u51fa\u6240\u6709\u5173\u7cfb\u7684\u7ec4\u5408\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u7ec4\u5408\u7684\u95ed\u5305\uff0c\u518d\u5c06\u4ed6\u4eec\u5c55\u5f00</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#functional-dependency-theory","title":"Functional Dependency Theory","text":"<ul> <li>Canonical Cover</li> </ul> <p>\u8ba1\u7b97\u4e00\u4e2a\u4f9d\u8d56\u96c6\u7684minimal\uff1a</p> <p>\u9996\u5148\u786e\u5b9a\u4ec0\u4e48\u4f9d\u8d56\u662f\u591a\u4f59\u7684\uff1a</p> <p>\u9a8c\u8bc1\u4e00\u4e2a\u5c5e\u6027\u662f\u5426\u5728\u4f9d\u8d56\u4e2d\u591a\u4f59\u7684\u65b9\u6cd5\uff1a</p> <p>\u8ba1\u7b97\u4e00\u4e2a\u4f9d\u8d56\u7684\u6700\u5c0f\u8986\u76d6\uff1a</p> Example <p> </p> <p>\u5f53\u7136\u8fd9\u9053\u9898\u53ef\u4ee5\u901a\u8fc7\u66f4\u76f4\u89c2\u7684\u65b9\u5f0f\u89c2\u6d4b\u51fa\u7ed3\u679c\uff0c\u4e0d\u4f7f\u7528transitive\uff0c\u90a3\u4e48\u53ea\u5269\u4e0b\u4e86\u4e24\u4e2a\u4f9d\u8d56</p> Exercise <p> </p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#algorithms-for-functional-dependencies","title":"Algorithms for Functional Dependencies","text":"<p>\u8fdb\u884c\u8303\u5f0f\u7684\u4ecb\u7ecd\u5e76\u4f7f\u7528\u8303\u5f0f\u8fdb\u884c\u5206\u89e3\uff0c\u8fd9\u91cc\u4e0e\u6559\u6750\u7684\u65b9\u5f0f\u4e0d\u592a\u76f8\u540c\uff0c\u6559\u6750\u662f\u5f00\u7bc7\u5c31\u4ecb\u7ecd\u8303\u5f0f\uff0c\u8fd9\u91cc\u5b59\u8001\u5e08\u5148\u5728\u524d\u534a\u90e8\u5206\u628a\u5de5\u5177\u4ecb\u7ecd\u6e05\u695a\uff0c\u8fd9\u91cc\u5c31\u80fd\u5728\u4ecb\u7ecd\u8303\u5f0f\u540e\u76f4\u63a5\u5c06\u8303\u5f0f\u5206\u89e3</p> <ul> <li>BCNF</li> </ul> <p>\u5982\u679c\u6709\u4e0d\u7b26\u5408BCNF\u7684\uff0c\u8fdb\u884c\u5206\u89e3</p> <p>Algorithm\uff1a</p> <p>\u8fd9\u4e2a\u7b97\u6cd5\u5bf9\u5173\u7cfb\u8fdb\u884c\u5206\u89e3\uff1a</p> <p>\u627e\u5230\u4e00\u4e2a\u4e0d\u7b26\u5408BCNF\u7684\u4f9d\u8d56\uff08\u5de6\u8fb9\u4e0d\u662fsuperkey\u7684\uff09\uff0c\u7136\u540e\u8fdb\u884c\u5982\u4e0b\u5206\u89e3</p> Example <p> </p> <ul> <li>Dependency Preservation</li> </ul> <p>\u5c31\u662f\u770b\u4e00\u4e2a\u4f9d\u8d56\u96c6\u5728\u88ab\u5206\u89e3\u540e\u7684\u5e76\u96c6\u662f\u5426\u4e0e\u539f\u4f9d\u8d56\u96c6\u76f8\u7b49</p> Example <p> </p> <p>\u5982\u679c \\(F\\) \u5185\u7684\u6bcf\u4e2a\u6210\u5458\u80fd\u591f\u5728\u5206\u89e3\u4e2d\u7684\u67d0\u4e2a\u5173\u7cfb\u4e0a\u88ab\u68c0\u67e5\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u5206\u89e3\u4fdd\u7559\u4e86\u4f9d\u8d56\u3002\u4f46\u8fd9\u79cd\u65b9\u6cd5\u5e76\u4e0d\u603b\u662f\u6709\u6548\uff0c\u56e0\u4e3a\u5373\u4f7f\u5206\u89e3\u662f\u4f9d\u8d56\u4fdd\u7559\u7684\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ec5\u770b\u5176\u4e2d\u7684\u4e00\u4e2a\u5173\u7cfb\u65e0\u6cd5\u68c0\u6d4b\u4f9d\u8d56\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u662f\u4e00\u4e2a\u5145\u5206\u6761\u4ef6</p> <p>\u5bf9\u4e8e \\(F\\) \u4e2d\u7684\u6bcf\u4e2a\u4f9d\u8d56 \\(\\alpha \\rightarrow \\beta\\)\uff0c\u6267\u884c\u4ee5\u4e0b\u8fc7\u7a0b\uff1a</p> <pre>\n    \\begin{algorithm}\n    \\caption{Alternative test for dependency preservation}\n    \\begin{algorithmic}\n        \\STATE $result = \\alpha$\n        \\REPEAT\n            \\FORALL{$R_i$ in the decomposition}\n                \\STATE $t = (result \\cap R_i)^+ \\cap R_i$\n                \\STATE $result = result \\cap t$\n            \\ENDFOR\n        \\UNTIL{($result$ does not change)}\n    \\end{algorithmic}\n    \\end{algorithm}\n    </pre> Exercise <p> </p> <p>BCNF\u4e0d\u80fd\u4fdd\u8bc1\u5f97\u5230\u7684\u4e00\u5b9a\u662f\u4f9d\u8d56\u4fdd\u7559\u7684\u5206\u89e3\uff0c\u56e0\u6b64\u5f15\u5165\u5176\u4ed6\u8303\u5f0f</p> <ul> <li>3NF</li> </ul> <p>\u5982\u679c\u5de6\u8fb9\u4e0d\u662fkey\uff0c\u90a3\u4e48\u53f3\u8fb9\u5fc5\u987b\u662fkey\u7684\u4e00\u90e8\u5206</p> <p>\u5206\u89e3\u7b97\u6cd5\uff1a</p> <p>\u5148\u5f97\u5230\u6700\u5c0f\u8986\u76d6\uff0c\u5c06\u8986\u76d6\u91cc\u7684\u6bcf\u4e2a\u4f9d\u8d56\u90fd\u8fdb\u884c\u5206\u89e3\uff0c\u5982\u679c\u5206\u89e3\u51fa\u6765\u7684\u5173\u7cfb\u4e2d\u6ca1\u6709\u4e00\u6761\u5305\u542bkey\uff0c\u90a3\u4e48\u5c06key\u5355\u72ec\u7ec4\u6210\u4e00\u4e2a\u5173\u7cfb</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#decomposition-using-multivalued-dependencies","title":"Decomposition Using Multivalued Dependencies","text":""},{"location":"notes/cs/Sys/dbs/dbsmemo.html#indexing","title":"Indexing","text":""},{"location":"notes/cs/Sys/dbs/dbsmemo.html#b-tree","title":"B+ Tree","text":"Size Estimation <p>\u8ba1\u7b97fanout\uff1a\u5c31\u662f\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u50a8\u5b58\u6307\u9488\u7684\u6570\u91cf\uff0c\u56e0\u4e3ablock size\u662f4096\uff0c\u6307\u9488\u5927\u5c0f\u662f4\uff0c\u5e76\u4e14\u6bd4\u7d22\u5f15\u503c\u8981\u591a\u4e00\u4e2a\uff08\u6307\u5411\u5144\u5f1f\uff09\uff0c\u6240\u4ee54096-4\uff0c\u4e00\u4e2aperson\u4fe1\u606f\u9700\u898118\uff0c\u518d\u52a0\u4e0a\u4ed6\u5bf9\u5e94\u7684\u6307\u9488\uff0c\uff084096-4\uff09/\uff0818+4\uff09\uff0c\u6700\u540e\u518d\u52a0\u4e0a1\u5373\u53ef</p> <p> </p> <p>\u8ba1\u7b97\u5c42\u9ad8\uff0c\u53ef\u4ee5\u7528\u516c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u50cf\u4e0a\u5f20ppt\u90a3\u6837\u8ba1\u7b97\u7136\u540e\u627e\u5230\u5408\u9002\u7684\u533a\u95f4</p> <ul> <li>max\u8282\u70b9\u4e2a\u6570</li> </ul> <p>\u8ba1\u7b97\u534a\u6ee1\uff08\u6700\u6d6a\u8d39\uff09\u7684\u53f6\u5b50\u4e2a\u6570\uff0c\u75281000000/93 \u5411\u4e0b\u53d6\u6574\uff0c\u7136\u540e\u53f6\u5b50\u4e0a\u7684\u4e00\u5c42\u4e5f\u662f\u534a\u6ee1\uff0c\u7528\u53f6\u5b50\u7ed3\u70b9\u6570/93 \u5411\u4e0b\u53d6\u6574\u5c31ok</p> <ul> <li>min\u8282\u70b9\u4e2a\u6570</li> </ul> <p>\u8ba1\u7b97\u534a\u6ee1\uff08\u6700\u8282\u7701\uff09\u7684\u53f6\u5b50\u4e2a\u6570\uff0c\u75281000000/186 \u5411\u4e0a\u53d6\u6574\uff0c\u7136\u540e\u53f6\u5b50\u4e0a\u7684\u4e00\u5c42\u4e5f\u662f\u534a\u6ee1\uff0c\u7528\u53f6\u5b50\u7ed3\u70b9\u6570/187 \u5411\u4e0a\u53d6\u6574\u5c31ok</p> <p>\u6ce8\u610f\u5982\u679c\u662f\u76f4\u63a5\u7528B tree\u5b58\u50a8file\uff0c\u90a3\u4e48\u53f6\u5b50\u7ed3\u70b9\u5c31\u4e0d\u9700\u8981\u6709\u6307\u9488\u4e86\uff08\u9664\u4e86\u6307\u5411\u5144\u5f1f\u7684\uff09\uff0c\u5728\u8ba1\u7b97\u4e2a\u6570\u7684\u65f6\u5019\u8981\u533a\u522b\u4e00\u4e0b</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#query-processing","title":"Query Processing","text":"<p>\u8ba1\u91cf\u67e5\u8be2\u4ee3\u4ef7\uff1a</p> <p>\\(t_T\\)\u662ftransfer\u4e00\u4e2ablock\u7684\u4ee3\u4ef7\uff0c\\(t_S\\)\u662fseek\u4e00\u6b21\u7684\u4ee3\u4ef7\uff0c\u6240\u4ee5Cost for b block transfers plus S seeks\uff1a</p> \\[ t_T \\times b + t_S \\times S \\]"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#sorting","title":"Sorting","text":"<p>\u8fd9\u91cc\u662f\u5916\u90e8\u6392\u5e8f\u88ab\u53d1\u660e\u7684\u5730\u65b9</p> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528N way merge sort\uff0c\u8003\u8651\u7684\u4e00\u662fADS\u4e2d\u8ba8\u8bba\u7684\u8f6e\u6570\uff0c\u4e8c\u662f\u9700\u8981\u591a\u5c11\u6b21block transfer&amp;seek</p> <p>M\u662fbuffer\u6570\u91cf\uff0cN\u662f\u5185\u5b58\u4e2d\u7684\u5f52\u5e76\u6bb5\u6570\u91cf</p> <ul> <li>N &lt; M\u65f6</li> </ul> <p>\u5f52\u5e76\u6bb5\u5c11\u4e8e\u53ef\u7528\u5185\u5b58\u5757\uff0c\u8fd9\u65f6\u53ea\u9700\u8981\u4e00\u6b21pass</p> <ul> <li>N &gt; M\u65f6</li> </ul> <p>\u8fd9\u65f6pass\u7684\u6b21\u6570\u5c31\u4e0d\u662f1\u4e86\uff0c\u867d\u7136\u6bcf\u4e00\u8f6e\u7684\u4ee3\u4ef7\u4ecd\u7136\u662f\u4e00\u6837\u7684</p> <p>\u6709M\u5757buffer\u53ef\u4ee5\u7528\u6765\u5f52\u5e76\uff0c\u5176\u4e2d\u6709\u4e00\u5757\u662f\u7528\u6765IO\u7684\uff0c\u6240\u4ee5\u5269\u4e0bM-1\u5757\uff0c\u76f8\u5f53\u4e8e\u662f\u5728\u505aM-1 way merge</p> <p>\u8fd9\u65f6\u6211\u4eec\u8fdb\u884c transfer cost\u5206\u6790\uff1a</p> <ul> <li>\u5f62\u6210\u7684\u5f52\u5e76\u6bb5\u6570\u91cf</li> <li>pass needed</li> <li>\u751f\u6210\u5f52\u5e76\u6bb5\u548cmerge\u65f6\u6bcf\u4e00\u8f6e\u7684block transfer</li> </ul> <p>\u5982\u679c\u6700\u540e\u9700\u8981\u5199\u51fa\u4e00\u6b21\uff0c\u90a3\u4e48\u6700\u540e\u7684\u516c\u5f0f\u4e2d\u5e94\u8be5\u662f\\(+2b_r\\)\uff08\u8fd9\u91cc\u7ed9\u51fa\u7684\u662f\u4e0d\u5199\u51fa\u7684\u60c5\u51b5\uff09</p> <p>\u5bf9seek cost\u7684\u5206\u6790\uff1a</p> <p>\u5bf9\u4e8e\u8fd9\u4e2a\u7ed3\u679c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e2a\u4f18\u5316\uff0c\u5c31\u662f\u5728\u5f52\u5e76\u65f6\\(b_b\\)\u4e2ablock\u8fdb\u884cmerge</p> <p>\u4f46\u662f\u76f8\u5e94\u7684\u6bcf\u6b21\u53ef\u4ee5merge\u7684block\u6570\u91cf\u5c31\u53d8\u5c11\u4e86\uff0clog\u7684\u5e95\u6570\u53d8\u5c0f\u4e86</p> <p>seek cost\u7684\u8ba1\u7b97\uff1a</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#join","title":"Join","text":"<ul> <li>Nested Loop Join</li> </ul> <p>\u603b\u5171\u9700\u8981\\(b_r + b_s*n_r\\)\u7684block transfer\u548c\\(n_r+b_r\\)\u7684seek</p> <ul> <li>Block Nested Loop Join</li> </ul> <p>\u76f8\u5f53\u4e8e\u662f\u7b2c\u4e00\u79cd\u65b9\u6cd5\u7684\u4f18\u5316\uff0c\u5c06\u5df2\u7ecf\u53d6\u51fa\u6765\u7684\u5757\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\u6bd4\u8f83\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u6bd4\u8f83\u6240\u6709\u5143\u7ec4</p> <p>\u8fd9\u65f6\u5019\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> <p>\u5982\u679c\u6211\u4eec\u6709M\u5757buffer\u5462\uff1f</p> <p>\u6700\u540e\u7684\u767d\u8272\u5757\u7528\u4f5cIO\uff0c\u7528M-2\u5757buffer\u5b58\u653eouter block</p> <ul> <li>Index Nested Loop Join</li> </ul> <p>\u73b0\u5728inner relation\u662f\u6709\u7d22\u5f15\u7684\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u8fdb\u884c\u904d\u5386\u6765\u67e5\u627e\u4e86\uff0c\u53ea\u8981\u904d\u5386outer relation\uff0c\u7136\u540e\u4f7f\u7528\u7d22\u5f15\u67e5\u627einner relation </p> <ul> <li>Merge Join</li> </ul> <p>\u91c7\u7528\u591a\u5757\u8fdb</p> <p>\u5982\u679cbuffer\u7684\u5927\u5c0f\u662fM\uff0c\u6211\u4eec\u8981\u5b8c\u5168\u5229\u7528buffer\uff1a</p> <ul> <li>Hash Join</li> </ul> <p>\u4e3a\u4e86\u786e\u4fdd\u6211\u4eec\u53ef\u4ee5\u628abuild relation\u5b8c\u5168\u653e\u8fdb\u5185\u5b58\uff0c\\(n \\geq\\)\u8fd9\u4e2a\u6570\u5c31\u662f\u8bf4\u81f3\u5c11\u8981\u5206\u6210\u8fd9\u4e48\u591a\u4e2ahash\u5757</p> <p>\u8fd9\u6837\u73b0\u5728\u6bd4\u8f83\u76f8\u540chash\u503c\u7684\u5143\u7ec4\u5373\u53ef</p> <p>\u5982\u679c\u4e00\u6b21partition\u540e\u7684\u5757\u6570\u592a\u591a\uff0c\u5c31\u9700\u8981\u8fdb\u884crecursive hashing</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#query-optimization","title":"Query Optimization","text":""},{"location":"notes/cs/Sys/dbs/dbsmemo.html#cost-estimation","title":"Cost Estimation","text":"<p>\u5b9a\u4e49\u5982\u4e0b\u53c2\u6570\uff1a</p> <ul> <li>Selection Size </li> </ul> <ul> <li>Join Size</li> </ul> <p>\u5982\u679c\u4e24\u4e2a\u5173\u7cfb\u7684\u4ea4\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u81ea\u7136\u8fde\u63a5\u5c31\u662f\u7b1b\u5361\u5c14\u79ef</p> <p>\u4e3b\u8981\u8ba8\u8bba\u7684\u662f\u975e\u7a7a\u60c5\u51b5\uff1a</p> <ol> <li>\u4ea4\u662fR\u7684\u952e\uff1a\u90a3\u4e48\u81ea\u7136\u8fde\u63a5\u540e\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7S</li> <li>\u4ea4\u662f\u7531S\u6307\u5411R\u7684\u5916\u952e\uff1a\u90a3\u4e48\u81ea\u7136\u8fde\u63a5\u540e\u7684\u4e2a\u6570\u5c31\u662fS\u7684tuple\u6570\u91cf</li> <li>\u4ea4\u4e0d\u662f\u4e24\u8005\u7684\u952e</li> </ol> <ul> <li>Distinct Value</li> </ul>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#cost-based-optimization","title":"Cost-Based Optimization","text":"<p>\u4f7f\u7528\u5de6\u6df1\u6811\u6765\u8868\u793a\u67e5\u8be2\u6811\uff1a</p> <p>\u5728\u8fdb\u884c\u5206\u5272\u7684\u65f6\u5019\uff1a</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#optimizing-nested-subqueries","title":"Optimizing Nested Subqueries","text":""},{"location":"notes/cs/Sys/dbs/dbsmemo.html#materialized-views","title":"Materialized Views","text":""},{"location":"notes/cs/Sys/dbs/dbsmemo.html#transaction","title":"Transaction","text":"<p>Model:</p> <p>Outline:</p> <ul> <li> <p>Anomalies in Concurrent Execution</p> <p>\u4e00\u5171\u6709\u56db\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>Lost Update</li> <li>Dirty Read</li> <li>Unrepeatable Read</li> <li>Phantom Read</li> </ul> </li> </ul> <ul> <li>Serializability</li> </ul> <p>\u4e3b\u8981\u8003\u5bdf\u53ef\u4e32\u884c\u5316\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684\u53ef\u4e32\u884c\u5316\u7684\u5b9a\u8bed\uff0c\u662f\u57fa\u4e8e\u51b2\u7a81\u7684conflict\uff0c\u8fd8\u662f\u57fa\u4e8e\u89c6\u56fe\u7684view</p> <p>\u57fa\u4e8e\u51b2\u7a81\u7684\u53ef\u4e32\u884c\u5316\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u662f\u5982\u679c\u901a\u8fc7\u4ea4\u6362\u4e00\u7cfb\u5217\u4e0d\u51b2\u7a81\u7684\uff08no write\uff09\u4e24\u4e2a\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2aschedule\u53d8\u6210\u4e00\u4e2a\u4e32\u884c\u7684schedule\uff0c\u90a3\u4e48\u8fd9\u4e2aschedule\u5c31\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684</p> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u522b\u7684\u65b9\u5f0f\u68c0\u6d4b\uff1aprecedence graph</p> <p>\u5982\u679c\u4e00\u4e2a\u56fe\u662f\u65e0\u73af\u7684\uff08\u4e0d\u80fd\u4ece\u67d0\u4e2a\u70b9\u51fa\u53d1\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u8fb9\uff0c\u56de\u5230\u8fd9\u4e2a\u70b9\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u56fe\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684</p> <p>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\uff08\u4e8b\u52a1\uff09\u662f\u72ec\u7acb\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u4ed6\u53ef\u4ee5\u88ab\u63d2\u5165\u5230\u4efb\u4f55\u4e8b\u52a1\u524d\u540e\uff08\u4e0e\u5176\u4ed6\u4e8b\u52a1\u76f8\u5173\u6027\uff09</p> <p>\u57fa\u4e8e\u89c6\u56fe\u7684\u7b49\u4ef7\uff1a</p> <p>\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u8bb2\u7a76\u7684\u662f\u5bf9\u540c\u4e00\u4e2a\u6570\u636e\u7684\u64cd\u4f5c\u6709\u4e00\u81f4\u6027</p> <p>Example</p> <p> </p> <p>\u8fd9\u91cc\u7684\u4e09\u4e2a\u989c\u8272\u5c31\u5206\u522b\u6ee1\u8db3\u4e86\u4e09\u4e2a\u6761\u4ef6\uff0c\u5bf9\u521d\u59cb\u503c\uff0c\u5bf9\u4e2d\u95f4\u503c\u7684\u987a\u5e8f\uff0c\u5bf9\u6700\u7ec8\u5199</p> <p>\u57fa\u4e8e\u89c6\u56fe\u7684\u53ef\u4e32\u884c\u5316\uff1a</p> <p>\u5982\u679c\u4e00\u4e2aschedule\u662f\u5173\u4e8e\u4e00\u4e2aserial schedule\u57fa\u4e8e\u89c6\u56fe\u7b49\u4ef7\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2aschedule\u5c31\u662f\u57fa\u4e8e\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684</p> <ul> <li>\u57fa\u4e8e\u51b2\u7a81\u7684\u53ef\u4e32\u884c\u4e00\u5b9a\u57fa\u4e8e\u89c6\u56fe\u53ef\u4e32\u884c\uff0c\u4f46\u662f\u57fa\u4e8e\u89c6\u56fe\u7684\u53ef\u4e32\u884c\u4e0d\u4e00\u5b9a\u57fa\u4e8e\u51b2\u7a81\u53ef\u4e32\u884c</li> </ul> <p>\u8fd8\u6709\u4e9b\u5176\u4ed6\u7684serializability\uff1a\u5148\u524d\u4e24\u79cd\u90fd\u4e0d\u80fd\u8fdb\u884c\u7b49\u4ef7</p> <ul> <li>Recoverable Schedules</li> </ul> <p>\u53ef\u6062\u590d\u8c03\u5ea6\u4fdd\u8bc1commit\u7684\u4e25\u683c\u4e00\u81f4\u6027</p> <p>\u4f46\u662f\u9762\u5bf9abort\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u636e\u88ab\u4e00\u7cfb\u5217\u7684\u52a8\u4f5c\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u9700\u8981rollback\uff0c\u5f80\u5f80\u8fd9\u4e2arollback\u662fcascade\u7684\uff0c\u9700\u8981rollback\u4e00\u7cfb\u5217\u7684\u4fee\u6539\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u79cdrollback\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e00\u4e2acascadeless schedule</p> <p>\u5c31\u662f\u5728\u4e00\u4e2a\u4e8b\u52a1\u5199\u4e86\u67d0\u4e2a\u6570\u636e\u540e\uff0c\u4e0b\u4e00\u9879\u4e8b\u52a1\u9700\u8981\u5728\u8fd9\u9879\u4e8b\u52a1commit\u540e\uff0c\u624d\u80fd\u8bfb\u53d6\u5230\u8fd9\u4e2a\u6570\u636e</p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#concurrency-control","title":"Concurrency Control","text":"<ul> <li>Lock-Based Protocol</li> </ul> <ul> <li>Two-Phase Locking</li> </ul> <p>\u660e\u786e\u7684\u4e24\u4e2a\u9636\u6bb5\uff0c\u4e00\u9636\u6bb5\u662flock\uff0c\u4e8c\u9636\u6bb5\u662funlock\uff0c\u4e0d\u80fd\u4ea4\u53c9</p> <p>\u53ef\u4ee5\u8bc1\u660e\u4e8b\u52a1\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\uff0c\u53ea\u8981\u6309\u7167lock points\u7684\u987a\u5e8f\u8fdb\u884c\u64cd\u4f5c</p> <p>\u4e25\u683c\u4e24\u9636\u6bb5\u9501\uff1a\u786e\u4fddX\u9501\u5728\u4e8b\u52a1\u63d0\u4ea4\u524d\u624d\u91ca\u653e</p> <ul> <li>Lock Table</li> </ul> <p>table\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2ahash table\uff0c\u6bcf\u4e2a\u63a5\u53e3\u5bf9\u5e94\u4e00\u4e2a\u6570\u636e\uff0c\u6570\u636e\u540e\u63a5\u4e00\u4e2a\u4e8b\u52a1\uff0c\u8868\u793a\u5f53\u524d\u7684\u6570\u636e\u88ab\u54ea\u4e2a\u4e8b\u52a1\u9501\u4f4f\u4e86\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6570\u636e\u8fde\u7740\u4e24\u4e2a\u4e8b\u52a1\uff0c\u8bf4\u660e\u8fd9\u4e2a\u9501\u662fshared\u7684</p> <p>\u8fd8\u9700\u8981\u6709\u4e00\u4e2a\u8f85\u52a9\u7684\u6570\u636e\u7ed3\u6784\u6765\u8bb0\u5f55\u6bcf\u4e2a\u4e8b\u52a1\u6240\u5177\u6709\u7684\u9501\uff0c\u4ee5\u53ca\u9501\u7684\u7c7b\u578b</p> <ul> <li>Deadlock Handling</li> </ul> <p>\u5faa\u73af\u7b49\u5f85</p> <p>\u89e3\u51b3\uff1a</p> <ul> <li>\u4e00\u6b21\u6027\u83b7\u5f97\u6240\u6709\u7684\u9501/\u504f\u5e8f\u6570\u636e</li> <li>\u62a2\u593a\u548c\u4e0d\u62a2\u593a\uff1a</li> </ul> <p>\u5c31\u662f\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u8001\u7684\u7b49\u65b0\u7684\uff08\u4e0d\u62a2\u593a\uff09\uff0c\u4e00\u79cd\u65b0\u7684\u7b49\u8001\u7684\uff08\u62a2\u593a\uff09</p> <ul> <li>Deadlock Detection</li> </ul> <p>\u4e0d\u91c7\u7528deadlock prevention\uff0c\u800c\u662f\u6267\u884cdeadlock detection\uff0c\u56e0\u4e3a\u6211\u4eec\u6709\u6240\u6709\u7684\u7b49\u5f85\u4fe1\u606f\uff08lock table\uff09</p> <p>\u91c7\u7528wait-for graph\u6765\u68c0\u6d4b\u6b7b\u9501\uff1a</p> <p>\u76d1\u6d4b\u5230\u6b7b\u9501\u540e\uff0c\u9700\u8981\u8fdb\u884crecovery\uff0c\u9009\u62e9\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u4e8b\u52a1\u8fdb\u884crollback</p> <p>\u6709\u53ef\u80fd\u51fa\u73b0\u603b\u662f\u5c06\u76f8\u540c\u4e8b\u52a1\u4f5c\u4e3a\u201c\u53d7\u5bb3\u8005\u201d\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u7684\u8bdd\u8be5\u4e8b\u52a1\u5c31\u6c38\u8fdc\u6ca1\u6cd5\u5b8c\u6210\u4efb\u52a1\uff0c\u56e0\u800c\u5b58\u5728\u9965\u997f\u95ee\u9898\u3002\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u4e8b\u52a1\u88ab\u9009\u4e3a\u201c\u53d7\u5bb3\u8005\u201d\u7684\u6b21\u6570\u4e0d\u8d85\u8fc7\u6307\u5b9a\u6b21\u6570\u3002\u6700\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u6210\u672c\u56e0\u5b50\u4e2d\u5305\u542b\u56de\u6eda\u6b21\u6570\u3002</p> <ul> <li>Tree-Based Protocol</li> </ul> <p>\u5c06\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\u5904\u7406\u6210\u504f\u5e8f\uff08\u56fe\uff09\uff0c\u518d\u53d6\u6d88S\u9501\uff0c\u53ea\u5141\u8bb8X\u9501\uff0c\u8fd9\u6837\u5f97\u5230\u4e86\u4e00\u4e2a\u6811\u7ed3\u6784\uff1a</p> <p>\u8fd9\u6837\u7684\u597d\u5904\u662f\uff1a</p> <ul> <li>unlock\u9636\u6bb5\u53ef\u4ee5\u6bd4two-phase\u66f4\u65e9\uff0cwaiting\u66f4\u5c11</li> <li>\u6ca1\u6709\u6b7b\u9501</li> </ul> <p>\u574f\u5904\uff1a</p> <ul> <li>\u4e0d\u4fdd\u8bc1\u53ef\u6062\u590d\uff0c\u9700\u8981\u589e\u52a0commit dependency</li> <li> <p>\u4e8b\u52a1\u53ef\u80fdlock\u6bd4\u9700\u8981\u7684lock\u66f4\u591a\uff08\u56e0\u4e3a\u6811\u5f62\u7ed3\u6784\uff0c\u4e3a\u4e86\u8bbf\u95ee\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u5fc5\u987b\u5148\u8bbf\u95ee\u6700\u8fd1\u7684\u516c\u5171\u7956\u5148\uff09</p> </li> <li> <p>Granularity</p> </li> </ul> <p>\u6211\u4eec\u9700\u8981\u4e00\u79cd\u673a\u5236\uff0c\u80fd\u591f\u8ba9\u7cfb\u7edf\u5b9a\u4e49\u591a\u4e2a\u5c42\u7ea7\u7684\u7c92\u5ea6(granularity)\uff1a\u4e5f\u5c31\u662f\u8bf4\u8ba9\u6570\u636e\u9879\u7684\u5927\u5c0f\u53ef\u53d8\uff1b\u5e76\u5b9a\u4e49\u4e00\u79cd\u6570\u636e\u7c92\u5ea6\u5c42\u7ea7\uff0c\u5176\u4e2d\u5c0f\u7c92\u5ea6\u4f1a\u88ab\u5305\u542b\u5728\u5927\u7c92\u5ea6\u91cc\u9762\u3002\u8fd9\u6837\u7684\u5c42\u7ea7\u53ef\u4ee5\u7528\u4e00\u68f5\u6811\u8868\u793a</p> <ul> <li>\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u88ab\u5355\u72ec\u52a0\u9501\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u88ab\u52a0\u9501\u540e\uff0c\u4ed6\u7684\u6240\u6709\u5b50\u8282\u70b9\u88ab\u9690\u5f0f\u52a0\u9501</li> <li> <p>\u5982\u679c\u4e8b\u52a1\u8981\u5bf9\u4e00\u4e2a\u8282\u70b9\u52a0\u9501\uff0c\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u7956\u5148\u8282\u70b9\uff0c\u5982\u679c\u53d1\u73b0\u8def\u5f84\u4e0a\u6709\u4e0d\u517c\u5bb9\u7684\u9501\uff0c\u5219\u9700\u8981\u7b49\u5f85</p> </li> <li> <p>Intention Locks</p> </li> </ul> <p>\u5982\u679c\u89e3\u91ca\u4e00\u4e0b\u7528\u6cd5\u7684\u8bdd\uff0cintention\u5c31\u662f\u8868\u793a\u4e00\u4e2a\u610f\u5411\uff0c\u5982\u679c\u6211\u8981\u5bf9\u5b50\u8282\u70b9\u8fdb\u884cS\uff0c\u90a3\u4e48\u6211\u9700\u8981\u5bf9\u7236\u8282\u70b9\u8fdb\u884cIS\uff0c\u8868\u793a\u610f\u5411\uff0c\u540c\u6837\u7684\uff0c\u5982\u679c\u6211\u8981\u5bf9\u5b50\u8282\u70b9\u8fdb\u884cX\uff0c\u90a3\u4e48\u6211\u9700\u8981\u5bf9\u7236\u8282\u70b9\u8fdb\u884cIX\uff0c\u8868\u793a\u610f\u5411</p> <p>SIX\u53ef\u4ee5\u7406\u89e3\u4e3aS+IX\uff0c\u8868\u793a\u9700\u8981\u8bfb\u6240\u6709\u8282\u70b9\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u5728\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u5199</p> <ul> <li>\u6700\u7ec6\u7c92\u5ea6\u7684\u6570\u636e\u53ea\u9700\u8981S\u3001X\u9501</li> <li>\u7c97\u7c92\u5ea6\u7684\u6570\u636e\u9700\u8981IS\u3001IX\u9501\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u88abS\u3001X\u9501</li> <li>\u5bf9\u7c97\u7c92\u5ea6\u52a0S\u3001X\u9501\u65f6\uff0c\u4e0b\u65b9\u5c31\u4e0d\u7528\u52a0\u9501\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u9690\u5f0f\u52a0\u9501\u4e86\uff0c\u540c\u6837\u7684\u4e0b\u65b9\u6709S\u3001X\u9501\u65f6\uff0c\u4e0a\u65b9\u7684\u7236\u8282\u70b9\u9700\u8981\u8fde\u7eed\u7684\u6709IX\u9501</li> <li>\u52a0\u9501\u8fc7\u7a0b\u4ece\u4e0a\u5230\u4e0b\uff0c\u91ca\u653e\u9501\u8fc7\u7a0b\u4ece\u4e0b\u5230\u4e0a</li> <li>\u4e00\u4e2a\u4e8b\u52a1\u7684\u52a0\u9501\u89e3\u9501\u8fc7\u7a0b\u662ftwo-phase\u7684\uff0c\u52a0\u9501\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u89e3\u9501</li> <li>\u4f1a\u53d1\u751f\u6b7b\u9501</li> </ul> <p>Example</p> <p> </p> <ul> <li>Insertion and Deletion</li> </ul>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#recovery","title":"Recovery","text":"<ul> <li>Idempotent: \u5e42\u7b49\u6027\uff0c\u6062\u590d\u64cd\u4f5c\u53ef\u4ee5\u91cd\u590d\u6267\u884c\uff0c\u4e0d\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528</li> </ul>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#log-based-recovery","title":"Log-Based Recovery","text":"<p>\u5c31\u662f\u5148\u5bf9\u5df2\u7ecf\u63d0\u4ea4\u7684\u4e8b\u52a1\u8fdb\u884cRedo\uff0c\u518d\u5bf9\u6d3b\u8dc3\u7684\u4e8b\u52a1\u8fdb\u884cUndo\uff0c\u5c06\u6570\u636e\u5e93\u6062\u590d\u5230crush\u7684\u73b0\u573a </p> <p>Example</p> <p> </p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7b2c12\u884c\u6267\u884c\u5b8c\u4e86\u6b63\u5e38\u7684\u7a0b\u5e8f\uff0c\u4e4b\u540eT2\u53d1\u751f\u4e86rollback\uff0c\u56de\u6eda\u4e86\u4ed6\u505a\u7684write\u64cd\u4f5c\uff0c\u8fd9\u6bb5\u4f1a\u88ab\u8bb0\u5f55\u5230\u8865\u507f\u65e5\u5fd7\u3002</p> <p>\u7136\u540e\u53d1\u751f\u4e86crush\uff0c\u9700\u8981\u6267\u884c\u6574\u4e2alog\u4e00\u76f4\u5230\u6700\u4e0b\u65b9\uff0c\u8fdb\u884c\u91cd\u6f14</p> <p>\u8fd9\u65f6\u7684\u53ef\u4ee5\u53d1\u73b0T4\u662f\u6ca1\u6709abort\u6216\u8005commit\u7684\uff0c\u6240\u4ee5\u8981\u8fdb\u884cundo\uff0c\u6240\u4ee5\u6709\u4e86\u7ea2\u7ebf\u4e0b\u65b9\u7684\u4e24\u4e2a\u64cd\u4f5c\uff0c\u4ed6\u4eec\u662f\u5728recovery\u7684\u8fc7\u7a0b\u4e2d\u624d\u51fa\u73b0\u7684</p> <ul> <li> <p>\u5148\u5199\u65e5\u5fd7\u518d\u5199\u6570\u636e\uff0c\u8fd9\u88ab\u79f0\u4e3aWrite-Ahead Logging\u539f\u5219</p> </li> <li> <p>commit \u7684\u6807\u5fd7\u4e0d\u662f\u5b8c\u6210\u6240\u6709\u6570\u636e\u7684\u78c1\u76d8\u5199\uff0c\u53ea\u8981\u662f\u65e5\u5fd7\u4e2d\u5b8c\u6210\u4e86\u8bb0\u5f55commit\uff0c\u5e76\u5c06\u65e5\u5fd7\u5199\u5165\u78c1\u76d8\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3acommit\u5b8c\u6210\u4e86\uff0c\u6570\u636e\u7684\u90e8\u5206\u5373\u4f7fcrush\u4e86\uff0c\u4e5f\u53ef\u4ee5redo</p> </li> <li> <p>\u5bf9\u4e8econcurrent\u7684transaction\uff0c\u6211\u4eec\u4fdd\u8bc1\u4e00\u4e2a\u4e8b\u52a1\u5bf9\u4e00\u4e2a\u6570\u636e\u9879\u7684\u64cd\u4f5c\u662f\u52a0\u6709\u6392\u4ed6\u9501\u7684\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u9020\u6210\u6df7\u4e71</p> </li> </ul>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#checkpoint","title":"Checkpoint","text":"<p>Example</p> <p> </p> <p>\u5728\u8fdb\u884cckpt\u7684\u65f6\u5019\u9700\u8981\u505c\u6b62\u6240\u6709\u7684\u6d3b\u52a8\uff0c\u7136\u540e\u5c06\u5df2\u7ecf\u5199\u597d\u7684log\u9001\u5165\u78c1\u76d8\uff0c\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\uff0c\u8bb0\u5f55\u8fd8\u6ca1\u6709commit\u6216\u8005abort\u7684\u4e8b\u52a1\uff0c\u5b58\u5165\u4e00\u4e2aUndo list\u3002</p> <p>\u5728\u4f8b\u5b50\u4e2dckpt\u7684\u4e0b\u65b9\uff0c\u5148\u53d1\u751f\u4e86\u4e00\u8d77T2\u7684rollback\uff0c\u6211\u4eec\u6267\u884c\u6389\u4ed6\u4ee5\u540e\u53d1\u751f\u4e86crush\uff0c\u5148\u8fdb\u884credo\uff0c\u53ea\u9700\u8981\u4ececkpt\u5f00\u59cb\uff0c\u7136\u540e\u8fdb\u884cundo\uff0c\u73b0\u5728list\u4e2d\u53ea\u6709T4\uff0c\u6240\u4ee5\u53ea\u6709T4\u9700\u8981undo\u3002</p> <ul> <li>\u6570\u636e\u5e93\u7684buffer\u6784\u6210\uff1a</li> </ul> <p>Fuzzy Checkpoint</p> <p>\u4e3a\u4e86\u907f\u514dckpt\u7684\u65f6\u5019\u5927\u91cf\u7684IO\u5bfc\u81f4\u7684\u963b\u585e\uff0c\u5c06ckpt\u4ece\u4e00\u4e2a\u70b9\u53d8\u6210\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u6d41\u7a0b\u662f\uff1a</p> <ul> <li>\u7528\u4e00\u4e2alast-ckpt\u6765\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5df2\u7ecf\u5b8c\u5168\u5b8c\u6210\u7684ckpt</li> <li>\u77ed\u6682\u505c\u4e00\u4e0b\uff0c\u5199\u4e00\u4e2acheckpoint</li> <li>\u9996\u5148\u6807\u8bb0buffer\u4e2d\u7684M\u4e2a\u810f\u9875\uff0c\u7136\u540e\u9010\u6e10\u5c06\u4ed6\u4eec\u5199\u5165\u78c1\u76d8\uff0c\u5f53\u5199\u5b8cM\u4e2a\u810f\u9875\u540e\uff0c\u5c06last-ckpt\u66f4\u65b0\u4e3a\u5f53\u524d\u7684ckpt</li> </ul>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#early-lock-release-and-logical-undo","title":"Early Lock Release and Logical Undo","text":"<p>Logical Undo \u5c31\u662f\u8bb0\u5f55\u4e00\u4e2aoperation log\u6761\u76ee\uff0c\u8868\u793a\u4e00\u4e2a\u4e8b\u52a1\u5bf9\u4e00\u4e2a\u6570\u636e\u9879\u7684\u64cd\u4f5c\uff0c\u4e0e\u539f\u59cb\u7684physical undo\u76f4\u63a5\u5c06\u6570\u636e\u6539\u4e3aold\u503c\u4e0d\u540c\uff0c\u8bb0\u5f55\u4e0b\u64cd\u4f5c\u540e\u6211\u4eec\u7684undo\u5c31\u53d8\u6210\u4e86\u5bf9\u5f53\u524d\u6570\u636e\u7684\u9006\u64cd\u4f5c\uff0c\u5373\u4f7f\u5f53\u524d\u6570\u636e\u53d8\u5316\u4e86\uff0c\u4e5f\u6ca1\u5173\u7cfb\u3002</p> <p>Example</p> <p> </p> <p>\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679ccrush\u53d1\u751f\u5728operation\u8bb0\u5f55\u4e2d\uff0c\u8bf4\u660eoperation\u8bb0\u5f55\u4e0d\u5b8c\u5168\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u8fdb\u884cphysical undo\uff0c\u5982\u679c\u662f\u5df2\u7ecf\u8bb0\u5f55\u5b8c\u5168\u7684\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528undo info U \u8fdb\u884clogical undo\uff0c\u5e76\u5728\u7ed3\u675f\u65f6\u5199operation-abort</p> <p>\u540c\u65f6\u6ce8\u610f\u5982\u679c\u662flogical rollback\uff0c\u5927\u4f53\u4e0a\u4e0erecovery\u662f\u76f8\u4f3c\u7684\uff0c\u5c31\u662f\u901a\u8fc7\u6709\u6ca1\u6709\u5b8c\u6210operation-end\u6765\u770b\uff1a</p> <ul> <li>\u5982\u679c\u5df2\u7ecf\u5b8c\u6210operation-end\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884clogical undo\uff0c\u7136\u540e\u52a0\u5165operation-abort</li> <li>\u5982\u679c\u8fd8\u6ca1\u6709\u5b8c\u6210operation-end\uff0c\u6211\u4eec\u53ea\u80fd\u820d\u5f03\u6389\u4e0b\u4e00\u4e2aoperation\u4e4b\u524d\u7684\u6240\u6709\u8bed\u53e5</li> </ul> <p>Example</p> <p> </p>"},{"location":"notes/cs/Sys/dbs/dbsmemo.html#aries","title":"ARIES","text":"<ul> <li> <p>LSN:</p> <p>\u6bcf\u4e2alog entry\u90fd\u6709\u4e00\u4e2aLSN\uff0c\u8868\u793a\u8fd9\u4e2alog entry\u5728log\u4e2d\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u6709\u5f88\u591alog file\u5171\u540c\u7ec4\u6210log\uff0c\u6240\u4ee5\u6bcf\u4e2alog entry\u5c31\u662f\u6587\u4ef6\u53f7+\u504f\u79fb\u91cf</p> </li> <li> <p>Dirty Page Table:</p> <p>\u8bb0\u5f55\u4e86buffer\u4e2d\u88ab\u4fee\u6539\u8fc7\u7684\u9875\uff0c\u5bf9\u5e94\u7684PageLSN\u3001RecLSN</p> <ul> <li>PageLSN\uff1a</li> </ul> <p>\u6bcf\u4e2aPage\u90fd\u6709\u4e00\u4e2aPageLSN\uff0c\u7528\u4e8e\u8bb0\u5f55\u66f4\u65b0\u8fc7\u8fd9\u4e2aPage\u7684\u6700\u540e\u4e00\u4e2aLSN\uff0c\u8fd9\u6837\u5f53redo\u7684\u65f6\u5019\uff0c\u4efb\u4f55\u5c0f\u4e8e\u8fd9\u4e2aLSN\u7684\u65e5\u5fd7\u8bb0\u5f55\u90fd\u53ef\u4ee5\u88ab\u5ffd\u7565\uff08\u8fd9\u4e2a\u5bf9\u4e8e\u5e42\u7b49\u6027\u5341\u5206\u91cd\u8981\uff0c\u56e0\u4e3a\u975e\u7269\u7406\u7684redo\u518d\u6b21\u6267\u884c\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4\uff09</p> <ul> <li> <p>RecLSN\uff1a</p> <p>\u8fd9\u4e2aLSN\u4e4b\u524d\u7684\u6240\u6709LSN\u5df2\u7ecf\u88ab\u4f5c\u7528\u5230\u78c1\u76d8\u4e2d\uff0c\u8fd9\u6761LSN\u8bb0\u5f55\u7684\u662f\u8ba9\u8fd9\u4e2aPage\u6210\u4e3adirty\u7684\u7b2c\u4e00\u4e2aLSN\uff0c\u8fd9\u4e5f\u662f\u6062\u590d\u7684\u8d77\u70b9</p> </li> </ul> </li> </ul> <ul> <li>Analysis Phase</li> </ul> <p>\u5206\u6790\u9636\u6bb5\uff0c\u76ee\u7684\u662f\u641e\u6e05\u695a\u518d\u5d29\u6e83\u77ac\u95f4\u6570\u636e\u5e93\u7684\u72b6\u6001</p> <ol> <li>\u4ecestable log\u4e2d\u6700\u8fd1\u7684ckpt\u5f00\u59cb\u987a\u5e8f\u8bfb\u5230\u65e5\u5fd7\u6587\u4ef6\u672b\u5c3e</li> <li>\u6536\u96c6\u4fe1\u606f\uff0c\u5efa\u7acb\u4e24\u5f20\u8868\uff1a<ul> <li>\u4e8b\u52a1\u8868\uff1a\u8bb0\u5f55crush\u65f6\u7684\u6d3b\u8dc3\u4e8b\u52a1<ul> <li>\u5f53\u626b\u63cf\u5230\u4e00\u6761begin transaction\u65f6\uff0c\u5c06\u4e8b\u52a1\u52a0\u5165\u4e8b\u52a1\u8868\uff0c\u5f53\u626b\u63cf\u5230commit\u6216\u8005abort\u65f6\uff0c\u5c06\u4e8b\u52a1\u4ece\u4e8b\u52a1\u8868\u4e2d\u79fb\u9664\uff0c\u7ed3\u675f\u65f6\u5f97\u5230\u7684\u5c31\u662f\u5931\u8d25\u8005\u4e8b\u52a1</li> </ul> </li> <li>\u810f\u9875\u8868Dirty Page Table\uff1a\u8bb0\u5f55\u6240\u6709\u53ef\u80fd\u5728\u5d29\u6e83\u65f6\u6bd4disk\u4e2d\u66f4\u65b0\u7684\u6570\u636e<ul> <li>\u5f53\u626b\u63cf\u5230\u4e00\u4e2a\u9488\u5bf9\u4e0d\u5728DPT\u7684\u9875\u7684\u5199\u64cd\u4f5c\u65f6\uff0c\u5c06\u8be5\u9875\u52a0\u5165DPT\uff0c\u540c\u65f6\u8fd9\u6761\u65e5\u5fd7\u7684LSN\u5c31\u662fRecLSN</li> </ul> </li> </ul> </li> </ol> <p>\u8fd9\u4e00\u9636\u6bb5\u5f97\u5230\u7684\u5c31\u662f\u4e00\u4e2a\u5931\u8d25\u8005\u4e8b\u52a1\u8868\u3001\u810f\u9875\u8868\u3001\u4ee5\u53ca\u4e00\u4e2aRedoLSN\uff08min from all RecLSN\uff0c\u5982\u679c\u6ca1\u6709dirty page\uff0c\u90a3\u4e48\u5c31\u662fckpt\u7684LSN\uff09</p> <ul> <li>Redo Phase</li> </ul> <p>\u91cd\u590d\u5386\u53f2\uff0c\u5c06\u6570\u636e\u5e93\u6062\u590d\u5230crush\u7684\u77ac\u95f4\u72b6\u6001\uff0c\u786e\u4fdd\u6240\u6709\u5df2\u5199\u5165\u65e5\u5fd7\u7684\u4fee\u6539\uff08\u65e0\u8bba\u6765\u81ea\u5df2\u63d0\u4ea4\u7684\u4e8b\u52a1\u8fd8\u662f\u672a\u5b8c\u6210\u7684\u4e8b\u52a1\uff09\u90fd\u771f\u5b9e\u5730\u53cd\u6620\u5728\u6570\u636e\u9875\u4e0a\u3002</p> <ol> <li>\u4eceRedoLSN\u5f00\u59cb\uff0c\u987a\u5e8f\u8bfb\u53d6\u65e5\u5fd7\u6587\u4ef6\u5230\u672b\u5c3e</li> <li> <p>\u91cd\u505a\uff1a\u5bf9\u4e8e\u626b\u63cf\u7684\u6bcf\u4e2a\u65e5\u5fd7\uff0c\u5982\u679c\uff1a</p> <ul> <li>\u5224\u65ad\u4e00\uff1a\u8fd9\u4e2a\u9875\u4e0d\u5728\u810f\u9875\u8868\u4e2d\uff0c\u6216\u8005\uff0c\u8fd9\u4e2a\u8fd9\u4e2a\u65e5\u5fd7\u7684LSN &lt; \u4ed6\u5728\u810f\u9875\u8868\u4e2d\u7684RecLSN\uff0c\u5c31\u8df3\u8fc7\u5b83\u4e0d\u7528\u91cd\u505a</li> <li>\u5224\u65ad\u4e8c\uff1a\u5426\u5219\uff0c\u5c06\u9875\u4ecedisk\u4e2d\u53d6\u51fa\uff0c\u5982\u679c\u8fd9\u4e2a\u9875\u5728disk\u4e2d\u7684PageLSN &lt; \u8fd9\u4e2a\u65e5\u5fd7\u7684LSN\uff0c\u90a3\u4e48\u5c31\u91cd\u505a\u8be5\u65e5\u5fd7</li> </ul> </li> <li> <p>\u91cd\u505a\u540e\uff0c\u66f4\u65b0PageLSN</p> </li> </ol> <p>\u8fd9\u4e00\u9636\u6bb5\u4f1a\u6062\u590d\u5230\u4e0ecrush\u524d\u5b8c\u5168\u4e00\u81f4\u7684\u72b6\u6001\uff0c\u5373\u4f7f\u662f\u5931\u8d25\u8005\u4e5f\u4f1a\u88ab\u91cd\u505a</p> <ul> <li>Undo Phase</li> </ul> <p>\u76ee\u6807\u662f\u6e05\u7406\u73b0\u573a\uff0c\u56de\u6eda\u5931\u8d25\u8005\u7684\u4fee\u6539\uff0c\u4fdd\u8bc1\u539f\u5b50\u6027</p> <ol> <li>\u5728\u5931\u8d25\u8005\u4e8b\u52a1\u4e2d\uff0c\u4ece\u6700\u540e\u4e00\u6761\u5f00\u59cb\uff0c\u53cd\u5411\u626b\u63cf\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e8b\u52a1\uff0c\u901a\u8fc7PrevLSN\u627e\u5230\u5173\u4e8e\u8fd9\u4e2a\u4e8b\u7269\u7684\u6240\u6709\u65e5\u5fd7</li> <li>\u6309\u987a\u5e8f\u5c06\u8fd9\u4e9b\u65e5\u5fd7\u7684\u64cd\u4f5c\u9006\u5411\u6267\u884c</li> <li>\u6bcf\u6267\u884c\u4e00\u6b21\u9006\u5411\uff0c\u751f\u6210\u4e00\u4e2a\u8865\u507f\u65e5\u5fd7\u8bb0\u5f55CLR\uff0c\u8bb0\u5f55\u4e0b\u9006\u5411\u64cd\u4f5c</li> <li>\u5f53\u4e00\u6761\u5931\u8d25\u8005\u4e8b\u52a1\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u88ab\u9006\u5411\u6267\u884c\u5b8c\u6210\uff0c\u4e3a\u4ed6\u5199\u4e00\u4e2aend\u65e5\u5fd7</li> </ol> <p>\u8fd9\u4e2a\u9636\u6bb5\u4e2dCLR\u662f\u4e3a\u4e86\u9632\u6b62\u5728undo\u7684\u8fc7\u7a0b\u4e2d\u518d\u6b21crush\uff0c\u8fd9\u6837\u6062\u590d\u65f6\u4e0d\u7528\u91cd\u505a\u5df2\u7ecf\u8865\u507f\u8fc7\u7684\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u5e42\u7b49\u6027</p> <p>\u8fd9\u4e2a\u9636\u6bb5\u7ed3\u675f\u540e\uff0c\u6570\u636e\u5e93\u6062\u590d\u5230\u6240\u6709\u5df2\u63d0\u4ea4\u4e8b\u52a1\u90fd\u751f\u6548\uff0c\u6240\u6709\u672a\u63d0\u4ea4\u4e8b\u52a1\u90fd\u56de\u6eda</p> <ul> <li>\u4e00\u4e2aundo phase\u7684\u4f18\u5316\uff1a</li> </ul> <p>\u4e0a\u8bfe\u65f6\u8001\u5e08\u8bb2\u7684undo phase\u4e0e\u8fd9\u91cc\u7684\u4e0d\u592a\u76f8\u540c\uff0c\u662f\u4e00\u4e2a\u66f4\u4f18\u5316\u65b9\u6848\uff0crather than undo \u6bcf\u4e2a\u4e8b\u52a1\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u6211\u4eec\u9009\u62e9\u627e\u5230\u5f85undo \u7684LSN\u96c6\u5408\uff0c\u9009\u53d6\u5176\u4e2dLSN\u6700\u5927\u7684\u65e5\u5fd7\u8fdb\u884cundo\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u65e5\u5fd7\u7684PrevLSN\uff08\u6216UndoNextLSN\uff09\u627e\u5230\u4e0b\u4e00\u4e2a\u5f85undo\u7684LSN\uff0c\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u5168\u90e8undo\u5b8c\u6210</p> <p>\u5173\u4e8e\u8fd9\u91cc\u9009\u62e9PrevLSN\u8fd8\u662fUndoNextLSN\uff1a</p> <p>Example</p> <p> </p> <p> </p>"},{"location":"notes/cs/algorithm/index.html","title":"Data Structure and Basic Algorithms","text":"<p> \u7ea6 1029 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>intro</p> <p>This chapter includes my notes in FDS and ADS course.</p> <p>maybe I will add more advanced and interesting algorithms and DS later \ud83d\ude0b </p> <p>Table of contents</p> <ul> <li> FDS ( FDS \u5b66\u7684\u4e0d\u592a\u8ba4\u771f\u634f\uff0c\u6700\u540e\u8003\u8bd5\u4e5f\u88ab\u72e0\u72e0\u5236\u88c1\u4e86 )</li> </ul> <p>tips</p> <p>ADS\u8bfe\u7a0b\u4e2d\u524d\u534a\u6bb5\u6570\u636e\u7ed3\u6784\u90e8\u5206\u6211\u662f\u5728yy\u8001\u5e08\u73ed\u4e0a\u542c\u8bfe\u7684\uff0c\u6768\u8001\u5e08\u81ea\u5df1\u662f\u7ade\u8d5b\u9009\u624b\uff0c\u5bf9\u4e8e\u6570\u636e\u7ed3\u6784\u7684\u7406\u89e3\u4e0d\u4f1a\u90a3\u4e48\u62bd\u8c61\uff0c\u4f1a\u91c7\u7528\u66f4\u597d\u61c2\uff0c\u66f4\u53ef\u89c6\u5316\u7684\u65b9\u5f0f\u6765\u8bb2\u89e3\uff0c\u4e0a\u8bfe\u4f53\u9a8c\u5f88\u4e0d\u9519\ud83e\udd13</p> <ul> <li> ADS</li> <li> Backtracking</li> <li> Divide &amp; Conquer</li> <li> Dynamic Programming</li> <li> Greedy Algorithm</li> <li> P/NP \u8fd9\u4e00\u90e8\u5206\u6211\u5b66\u4e60\u7684\u65f6\u5019\u6ca1\u6709\u5b66\u660e\u767d\uff0c\u91c7\u7528\u7684\u662fNoughtQ\u540c\u5b66\u7684\u7b14\u8bb0\u548cwyy\u7684\u8bb2\u4e49</li> </ul> <p>tips</p> <p>\u4ee5\u4e0b\u90e8\u5206\u5185\u5bb9\u7684\u5b66\u4e60\u6211\u4eceyy\u8001\u5e08\u73ed\u8f6c\u5411\u4e86myc\u8001\u5e08\u73ed\uff0c\u6700\u8fd1\u51e0\u5e74\u6bdb\u54e5\u51fa\u5377\u5b50\u5360\u6bd4\u633a\u9ad8\uff0c\u4ed6\u66f4\u559c\u6b22\u516c\u7406\u5316\u7684\u8bb2\u6388\u65b9\u6cd5\uff0c\u5728\u7b97\u6cd5\u5206\u6790\u90e8\u5206\u80fd\u66f4\u4e25\u8c28\u7684\u5bf9\u5b9a\u7406\u8fdb\u884c\u8bc1\u660e\u5e76\u63a8\u5e7f\uff0c\u6211\u5c31\u8f6c\u5411\u6bdb\u54e5\u7684\u667a\u4e91\u4e86 \u4ece\u671f\u672b\u8003\u8bd5\u7ed3\u679c\u53cd\u9988\u8fd9\u4e2a\u9009\u62e9\u4e0d\u9519</p> <ul> <li> Approximation</li> <li> Local Search</li> <li> Randomized Algorithms </li> <li> Parallel Algorithms</li> <li> External Sorting </li> </ul> <p>\u8fd9\u4e2a\u90e8\u5206\u7684\u7b14\u8bb0\u6211\u662f\u5728\u5927\u4e8c\u4e0a\u5b66\u671f\u8fdb\u884cADS\u5b66\u4e60\u65f6\u5f00\u59cb\u5b9a\u671f\u5728Space\u4e0a\u4e0a\u4f20\u66f4\u65b0\u7684\uff0c\u521a\u5f00\u59cb\u6211\u4e5f\u53ea\u662f\u4e3a\u4e86\u76d1\u7763\u81ea\u5df1\u8ba4\u771f\u5b66\u4e60ADS\uff0c\u6bd5\u7adf\u5927\u5bb6\u90fd\u77e5\u9053ADS\u7684\u6050\u6016\u4e4b\u5904\uff0c\uff0c\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u6837\u505a\u786e\u5b9e\u6709\u6548\uff0c\u4f46\u4e5f\u4f1a\u803d\u8bef\u5927\u91cf\u7684\u65f6\u95f4\u5bf9\u8bfe\u7a0b\u5185\u5bb9\u8fdb\u884c\u6574\u7406\uff0c\u8fd9\u4e00\u70b9\u5927\u5bb6\u89c1\u4ec1\u89c1\u667a\uff0c\u4ece\u6700\u7ec8\u7684\u7ed3\u679c\u6765\u770b\uff0c\u6211\u4e0d\u4ec5\u6536\u83b7\u4e86\u81ea\u5df1\u6ee1\u610f\u7684\u6210\u7ee9\uff0c\u8fd8\u62e5\u6709\u4e86\u4e00\u4e2a\u672a\u6765\u80fd\u56de\u987e\u7eaa\u5ff5\u7684\u7cbe\u7f8e\u7684ADS\u7b14\u8bb0\uff0c\u8fd8\u662f\u5f88\u611f\u8c22\u575a\u6301\u4e86\u4e00\u5b66\u671f\u7684\u81ea\u5df1\u263a\ufe0f</p> <ul> <li>\u5982\u679c\u4f60\u6765\u8fd9\u91cc\u662f\u4e3a\u4e86ADS\u7684\u5b66\u4e60\uff0c\u90a3\u4e48\u6211\u6709\u4ee5\u4e0b\u7684\u4e00\u4e9b\u5c0f\u5efa\u8bae\uff1a</li> </ul> <ol> <li>\u8bfe\u5802\uff1a\u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u8001\u5e08\u9009\u62e9\u5916\uff0c\u5305\u62ec\u5f20\u56fd\u5ddd\u8001\u5e08\u7b49\u7b49\u5404\u4f4d\u8001\u5e08\u90fd\u662f\u5341\u5206\u8ba4\u771f\u5e76\u4e14\u9ad8\u6c34\u5e73\u7684\u5728\u8fdb\u884c\u6388\u8bfe\uff0c\u56e0\u6b64\u65e0\u8bba\u4f60\u9009\u62e9\u7684\u662f\u4ec0\u4e48\u8001\u5e08\uff08\u5305\u62ec\u667a\u4e91\u7684\u9009\u62e9\uff09\uff0c\u6211\u90fd\u5efa\u8bae\u5728 \u4e0a\u8bfe\u65f6\u4e00\u5b9a\u5c3d\u529b\u542c\u61c2\uff0c\u81f3\u5c11\u77e5\u9053\u81ea\u5df1\u4e0d\u61c2\u4ec0\u4e48\uff0c\u4e0b\u8bfe\u624d\u80fd\u66f4\u6709\u6548\u7387\u7684\u56de\u987e\u6574\u7406</li> <li>\u56de\u987e\uff1a\u6211\u4f5c\u4e3a\u975eOI\u9009\u624b\uff0c\u5728\u7b2c\u4e00\u6b21\u5b66\u4e60\u8bfe\u4e0a\u7684\u7edd\u5927\u90e8\u5206\u77e5\u8bc6\u65f6\uff0c\u638c\u63e1\u7387\u90fd\u4e0d\u523050%\uff0c\u56e0\u6b64\u6211\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6\u5728\u8bfe\u4e0b\u518d\u8fdb\u884c\u7b14\u8bb0\u7684\u6574\u7406\uff0c\u800c\u4e0d\u662f\u8bfe\u4e0a\u5c31\u8bb0\u7b14\u8bb0\uff0c\u4e00\u662f\u8bfe\u4e0a\u53ef\u4ee5\u5168\u795e\u8d2f\u6ce8\u7684\u542c\u8bfe\u7406\u89e3\uff0c\u4e8c\u662f\u8bfe\u4e0b\u91cd\u65b0\u6574\u7406\u80fd\u66f4\u52a0\u6e05\u6670\u8d77\u5230\u590d\u4e60\u4f5c\u7528\uff08\u5f53\u7136\u6211\u8eab\u8fb9\u4e5f\u6709\u5b8c\u5168\u4e0d\u4e0a\u8bfe\u53ea\u542c\u667a\u4e91\u7684\u4f8b\u5b50\uff0c\u6211\u5728\u542c\u6bdb\u54e5\u8bfe\u65f6\u4e5f\u91c7\u53d6\u4e86\u8fd9\u79cd\u7b56\u7565\uff0c\u6211\u89c9\u5f97\u8fd8\u4e0d\u9519\uff0c\u4f46\u8fd9\u9700\u8981\u5f88\u5f3a\u7684\u81ea\u5236\u529b\uff0c\u8fd9\u91cc\u6211\u4e0d\u5bf9\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u4f18\u52a3\u8fdb\u884c\u6bd4\u8f83\uff09</li> <li> <p>\u590d\u4e60\uff1a\u4e00\u65b9\u9762\u7406\u89e3\u8bfe\u4e0a\u7684\u77e5\u8bc6\uff0c\u5bf9\u6211\u4eec\u4ee5\u540e\u7684\u79d1\u7814/\u5de5\u4f5c\u53ef\u80fd\u4f1a\u6709\u5960\u57fa\u6027\u7684\u4f5c\u7528\uff0c\u53e6\u4e00\u65b9\u9762\u8fd9\u95e8\u8bfe\u7684\u8003\u8bd5\u662f\u5341\u5206\u5730\u72f1\u7684\ud83d\udc7a\uff0c\u56e0\u6b64\u5728\u671f\u672b\u5468\u65f6\uff0c\u4f60\u8feb\u5207\u7684\u9700\u8981\u9762\u5411\u8003\u8bd5\u7684\u590d\u4e60\u7b56\u7565\uff1a</p> <ul> <li>\u77e5\u8bc6\u68b3\u7406\uff1a\u6211\u7684\u5efa\u8bae\u662f\u5feb\u901f\u7684\u8fc7\u4e00\u904d\u81ea\u5df1\u6216\u8005\u522b\u4eba\u7684\u7b14\u8bb0\uff0c\u8fdb\u884c\u56de\u987e\uff0c\u7136\u540e\u7528\u57fa\u7840\u9898\u8fdb\u884c\u68c0\u6d4b</li> <li>\u81ea\u6d4b\uff1a\u8fd9\u91cc\u63a8\u8350\u4e00\u4e9b\u524d\u8f88\u7684\u6574\u7406xyx\u7684\u8003\u8bd5\u6280\u5de7oneko\u7684\u9898\u76ee\u96c6\u8fd9\u4e24\u4e2a\u9898\u76ee\u96c6\u76f8\u4e92\u8865\u5145\uff0c\u4e0d\u770b\u89e3\u6790\u81ea\u5df1\u505a\u5b8c\u8fd9\u4e24\u4e2a\u57fa\u672c\u4e0a\u5c31\u6ca1\u95ee\u9898</li> <li>\u6280\u5de7\uff1a\u8003\u8bd5\u4e2d\u7a33\u4f4f\u5fc3\u6001\u5148\u4fdd\u8bc1\u505a\u51fa\u6765\u7b80\u5355\u9898\uff0c\u7f16\u7a0b\u9898\u6211\u5f53\u65f6\u662f\u76f4\u63a5\u9009\u62e9\u6253\u70b9\u6d4b\u8bd5\u6837\u4f8b\u7684\uff0c\u5c45\u7136\u62ff\u52304\u5206\uff0c\u611f\u8c22yy\u54e5\uff0c\u5bf9\u4e8e\u96be\u9898\u5927\u80c6\u7528\u8fb9\u754c\u5047\u8bbe\u7136\u540e\u6392\u9664\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6b63\u786e\u7387</li> </ul> </li> </ol> <p>\u603b\u4e4b\u6211\u8fd9\u91cc\u7684\u5efa\u8bae\u5e76\u4e0d\u9002\u7528\u4e8e\u51b2\u51fb\u6ee1\u7ee9\u7684\u5927\u4f6c\uff0c\u66f4\u9002\u7528\u4e8e\u60f3\u8981\u6536\u83b7\u4e00\u4e2a\u6ee1\u610f\u6210\u7ee9\u76840\u57fa\u7840\u9009\u624b\uff08\uff09\uff0c\u4f46\u662f\u65e0\u8bba\u5982\u4f55\u8fd9\u95e8\u8bfe\u7684\u4ed8\u51fa\u6211\u76f8\u4fe1\u90fd\u4e0d\u4f1a\u767d\u8d39\uff0c\u5e0c\u671b\u6211\u7684\u7b14\u8bb0\u80fd\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\uff01</p>"},{"location":"notes/cs/algorithm/Approximation.html","title":"Intro","text":"<p> \u7ea6 1497 \u4e2a\u5b57  32 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Dealing with HARD problems</p> <p>\u76ee\u6807\uff1a\u5f97\u5230\u4e00\u4e2a\u8fd1\u4f3c\u89e3</p>"},{"location":"notes/cs/algorithm/Approximation.html#approximation-ratio","title":"Approximation Ratio","text":"<p>\u6211\u4eec\u901a\u8fc7\u8fd1\u4f3c\u6bd4\\(\\rho(n)\\)\u6765\u8861\u91cf\u8fd1\u4f3c\u7b97\u6cd5\u7684\u597d\u574f\uff0c\u79f0\u4e00\u4e2a\u7b97\u6cd5\u662f\\(\\rho(n)\\)-\u8fd1\u4f3c\u7b97\u6cd5\u3002\u5b83\u7684\u610f\u4e49\u662f\uff1a\u89c4\u6a21\u4e3an\u7684\u8f93\u5165\u4e0b\uff0c\u8fd1\u4f3c\u89e3\\(C\\)\u4e0e\u6700\u4f18\u89e3\\(C^*\\)\u7684\u6bd4\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4</p> \\[ max(\\frac{C}{C^*}, \\frac{C^*}{C}) \\leq \\rho(n) \\] <p>\u7b97\u6cd5\u7684\u8fd1\u4f3c\u6bd4\u4e0e\u95ee\u9898\u89c4\u6a21\u76f8\u5173\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\\(\\rho(n)\\)\u968f\u7740n\u7684\u589e\u5927\u800c\u589e\u5927</p>"},{"location":"notes/cs/algorithm/Approximation.html#approximation-scheme","title":"Approximation Scheme","text":"<p>\u6700\u4f18\u89e3\u7684\u8fd1\u4f3c\u65b9\u6848(Approximation Scheme)\uff0c\u6307\u7684\u662f\u4e00\u7c7b\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u5bf9\u7ed9\u5b9a\\(\\epsilon &gt; 0\\)\uff0c\u5b83\u662f\u4e00\u4e2a(1+\\(\\epsilon\\))\u8fd1\u4f3c\u7b97\u6cd5</p> <ul> <li>\u591a\u9879\u5f0f\u65f6\u95f4\u8fd1\u4f3c\u65b9\u6848\uff08PTAS\uff09\uff1a\u5bf9\u4e8e\u4efb\u610f\u7ed9\u5b9a\\(\\epsilon &gt; 0\\)\uff0c\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5b8c\u6210\u8ba1\u7b97\uff0c\u8bb0\u4f5c\\(O(n^{f(\\frac{1}{\\epsilon})})\\)<ul> <li>\u5b8c\u5168\u591a\u9879\u5f0f\u65f6\u95f4\u8fd1\u4f3c\u65b9\u6848\uff08FPTAS\uff09\uff1a\u5bf9\u4e8e\u4efb\u610f\u7ed9\u5b9a\\(\\epsilon &gt; 0\\)\uff0c\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5b8c\u6210\u8ba1\u7b97\uff0c\u8bb0\u4f5c\\(O\\left(n^{O(1)}\\left(\\frac{1}{\\varepsilon}\\right)^{O(1)}\\right)\\)</li> </ul> </li> </ul> <p>\u8bbe\u8ba1\u7b97\u6cd5\u65f6\uff0c\u8003\u8651\u5982\u4e0b\u4e09\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u6700\u4f18\u6027\uff08Optimality\uff09\uff1a\u89e3\u7684\u8d28\u91cf</li> <li>\u6548\u7387\uff08Efficiency\uff09\uff1a\u8ba1\u7b97\u6210\u672c</li> <li>\u5168\u90e8\u5b9e\u4f8b\uff08All instances\uff09\uff1a\u901a\u7528\u6027</li> </ul> <p>\u5bf9\u8fd9\u51e0\u4e2a\u65b9\u9762\u8fdb\u884ctrade-off</p> <ul> <li>A+B\uff1a\u5bf9\u4e8e\u7279\u6b8a\u60c5\u51b5\u7684\u7cbe\u51c6\u5feb\u901f\u7b97\u6cd5</li> <li>A+C\uff1a\u9488\u5bf9\u5168\u90e8\u5b9e\u4f8b\u7684\u7cbe\u51c6\u7b97\u6cd5</li> <li>B+C\uff1a\u8fd1\u4f3c\u7b97\u6cd5</li> </ul>"},{"location":"notes/cs/algorithm/Approximation.html#example","title":"Example","text":""},{"location":"notes/cs/algorithm/Approximation.html#bin-packing","title":"Bin Packing","text":"<p>3 Solutions</p> Next fitFirst fitBest fit <p>Next fit\uff1a\u6309\u7167\u8f93\u5165\u987a\u5e8f\u4e00\u4e2a\u4e2a\u653e\u7269\u54c1\uff0c\u5982\u679c\u5f53\u524d\u7269\u54c1\u80fd\u591f\u653e\u5728\u4e0e\u4e0a\u4e00\u4e2a\u7269\u54c1\u76f8\u540c\u7684\u7bb1\u5b50\u4e2d\uff0c\u653e\u5165\uff0c\u5426\u5219\u65b0\u5f00</p> <pre><code>void NextFit() {\nread item1;\nwhile (read item2) {\n    if (item2 can be packed in the same bin as item1)\n        place item2 in the bin;\n    else\n        create a new bin for item2;\n    item1 = item2;\n} // end-while\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n)\\)</p> <p>\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8fd1\u4f3c\u6bd4\u4e3a2\u7684\u89e3</p> <p>First fit\uff1a\u6309\u7167\u8f93\u5165\u987a\u5e8f\u4e00\u4e2a\u4e2a\u653e\u7269\u54c1\uff0c\u5982\u679c\u5f53\u524d\u7269\u54c1\u80fd\u591f\u653e\u5728\u5f53\u524d\u4efb\u610f\u4e00\u4e2a\u7bb1\u5b50\u4e2d\uff0c\u653e\u5165\uff0c\u5426\u5219\u65b0\u5f00</p> <pre><code>void FirstFit() {\nwhile (read item) {\n    scan for the first bin that is large enough for item;\n    if (found)\n    place item in that bin;\nelse\n    create a new bin for item;\n    } // end-while\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(nlogn)\\)</p> <p>\u53ef\u4ee5\u5f97\u5230\u8fd1\u4f3c\u6bd4\u4e3a1.7\u7684\u89e3</p> <p>Best fit\uff1a\u6309\u7167\u8f93\u5165\u987a\u5e8f\u4e00\u4e2a\u4e2a\u653e\u7269\u54c1\uff0c\u5f53\u524d\u7269\u54c1\u9700\u8981\u653e\u5728\u5269\u4f59\u7a7a\u95f4\u6700\u5c0f\u7684\u7bb1\u5b50\u4e2d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u65b0\u5f00</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(nlogn)\\)</p> <p>\u53ef\u4ee5\u5f97\u5230\u8fd1\u4f3c\u6bd4\u5927\u4e8e1.7\u7684\u89e3</p> <p>Failure</p> <p>\u4e0d\u7528\u592a\u591a\u8003\u8651\u8fb9\u754c\u60c5\u51b5\uff1a\u56e0\u4e3a\u6700\u574f\u60c5\u51b5\u4e0bspecial case \u4e0d\u4f1a\u592a\u591a</p> <ul> <li>On-line Algorithm</li> </ul> <p>\u88c5\u7bb1\u95ee\u9898\u4e2d\u662f\u5728\u7ebf\u7b97\u6cd5\uff0c\u5e76\u4e14\u6ca1\u6709\u56de\u6eaf\uff0c\u8fd9\u6837\u662f\u5f88\u96be\u5bf9\u6297\u6570\u636e\u5206\u5e03\u7684\u2014\u2014\u56e0\u4e3a\u770b\u4e0d\u5230\u6570\u636e\u7684\u6574\u4f53\u60c5\u51b5</p> <p>Failure</p> <p>\u5bf9\u4e8e\u6240\u6709\u5728\u7ebf\u7b97\u6cd5\uff0c\u88c5\u7bb1\u95ee\u9898\u90fd\u5230\u4e0d\u4e86\\(\\frac{5}{3}\\)\u8fd9\u4e2a\u8fd1\u4f3c\u6bd4</p> <ul> <li>Off-line Algorithm</li> </ul> <p>\u5728\u79bb\u7ebf\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7ed3\u8bba\uff1a\u4ee4\\(M\\)\u4e3a\u6876\u7684\u4e2a\u6570\uff0c\u5219\uff1a</p> \\[M \\leq \\frac{11}{9}OPT + 6\\] <p>\u4f7f\u7528First fit Decreasing \u7b97\u6cd5\uff0c\u5373\u5148\u5bf9\u7269\u54c1\u6309\u5927\u5c0f\u964d\u5e8f\u6392\u5217\uff0c\u518d\u4f7f\u7528First fit\u7b97\u6cd5\uff0c\u5219\u6709</p> \\[FFD(L) \\leq \\frac{3}{2}OPT(L)\\]"},{"location":"notes/cs/algorithm/Approximation.html#knapsack-problem","title":"Knapsack Problem","text":""},{"location":"notes/cs/algorithm/Approximation.html#_1","title":"\u5c0f\u6570\u80cc\u5305","text":"<p>Question</p> <p>\u4ee4\u80cc\u5305\u5bb9\u91cf\u4e3a\\(M\\)\uff0c\u7ed9\u5b9a\\(n\\)\u4e2a\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\\(i\\)\u6709\u91cd\u91cf\\(w_i\\)\u548c\u4ef7\u503c\\(p_i\\)\uff0c\u88ab\u653e\u8fdb\u80cc\u5305\u7684\u6bd4\u4f8b\u4e0d\u8d85\u8fc7\\(x_i\\)\uff0c\u6b64\u65f6\u8be5\u7269\u54c1\u7684\u4ef7\u503c\u4e3a\\(p_i x_i\\)\uff0c\u76ee\u6807\u662f\u4ee4\\(\\sum_{i=1}^{n} p_i x_i\\)\u6700\u5927</p> <ul> <li>\u89e3\u51b3\u65b9\u6cd5\u662f\u6bcf\u6b21\u6309\u7167\u4ef7\u503c\u5bc6\u5ea6\uff1a\\(\\frac{p_i}{w_i}\\)\u964d\u5e8f\u6392\u5217\uff0c\u7136\u540e\u8d2a\u5fc3\u9009\u62e9</li> </ul>"},{"location":"notes/cs/algorithm/Approximation.html#0-1","title":"0-1 \u80cc\u5305","text":"<p>\u5728\u5148\u524d\u6211\u4eec\u4f7f\u7528\u7684\u8d2a\u5fc3\u7b97\u6cd5\u8fd9\u91cc\u5c31\u4e0d\u4e00\u5b9a\u4f1a\u5f97\u5230\u6700\u4f18\u89e3\uff0c\u56e0\u6b64\u90a3\u4e2a\u8d2a\u5fc3\u7b97\u6cd5\u5c31\u662f\u4e00\u4e2a\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u4e0b\u9762\u5bf9\u5176\u8fd1\u4f3c\u6bd4\\(2\\)\u8fdb\u884c\u8bc1\u660e\uff1a</p> <p>\u8bc1\u660e</p> <p>\u663e\u7136\uff1a\u6240\u6709\u7269\u54c1\u4e2d\u4ef7\u503c\u6700\u5927\u7684\u4e00\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u80af\u5b9a\u5c0f\u4e8e\u6700\u4f18\u89e3\u7684\u603b\u4ef7\u503c\uff0c\u4e5f\u5c0f\u4e8e\u5c0f\u6570\u80cc\u5305\u7684\u6700\u4f18\u89e3</p> \\[ p_{max} \\leq P_{opt} \\leq P_{frac} \\] <p>\u5e76\u4e14\uff1a\u6700\u5927\u4ef7\u503c\u7269\u54c1\u7684\u4ef7\u503c\u5c0f\u4e8e\u8d2a\u5fc3\u89e3\u7684\u603b\u4ef7\u503c\uff08\u53ef\u4ee5\u53cd\u8bc1\u6765\u7406\u89e3\u6700\u5927\u4ef7\u503c\u7269\u54c1\u4e00\u5b9a\u4f1a\u88ab\u8d2a\u5fc3\u9009\u62e9\uff0c\u5f53\u7136\u8fd9\u91cc\u5047\u8bbe\u6bcf\u4e2a\u7269\u54c1\u7684\u5927\u5c0f\u90fd\u5c0f\u4e8e\u80cc\u5305\u5927\u5c0f\uff09</p> \\[ p_{max} \\leq P_{greedy} \\] <p>\u8fd8\u6709\u4e00\u4e2a\u5f0f\u5b50\uff1a</p> \\[ P_{opt} \\leq P_{greedy} + p_{max} \\] <p>\u8fd9\u662f\u56e0\u4e3a\u4e00\u4e2a\u524d\u63d0\uff1a\u5728\u5c0f\u6570\u89e3\u4e2d\uff0c\u5176\u5b9e\u53ea\u4f1a\u6709\u4e00\u4e2a\u7269\u54c1\u88ab\u62c6\u5206\u653e\u5165\uff0c\u4e5f\u5c31\u662f\u8bf4\u8d2a\u5fc3\u89e3\u548c\u5c0f\u6570\u89e3\u7684\u5dee\u503c\u5c31\u662f\u6ca1\u6709\u88ab\u62c6\u5206\u653e\u5165\u80cc\u5305\u7684\u7269\u54c1\u7684\u4ef7\u503c\uff0c\u8fd9\u4e2a\u7269\u54c1\u80af\u5b9a\u662f\u653e\u5165\u80cc\u5305\u7684\u7269\u54c1\u4e2d\u7684\u4ef7\u503c\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u5728\u8fd9\u91cc\u8fdb\u884c\u653e\u7f29\uff0c\u5c06\u8fd9\u4e2a\u62c6\u5206\u7684\u7269\u54c1\u4ef7\u503c\u66ff\u6362\u4e3a\u4ef7\u503c\u6700\u5927\u7684\u7269\u54c1\uff0c\u8fd9\u65f6\\(P_{greedy} + p_{max}\\)\u4e00\u5b9a\u5927\u4e8e\\(P_{frac}\\)\uff0c\u8fdb\u800c\u5927\u4e8e\\(P_{opt}\\)</p> <p>\u5bf9\u8fd9\u4e2a\u5f0f\u5b50\u9664\u4ee5\\(P_{greedy}\\)\uff0c\u5f97\u5230\uff1a</p> \\[ P_{opt} \\leq 2P_{greedy} \\]"},{"location":"notes/cs/algorithm/Approximation.html#k-center-problem","title":"K-Center Problem","text":"<p>K-Center Problem</p> <p>\u7ed9\u5b9a\\(n\\)\u4e2a\u70b9\uff0c\u5728\u5730\u56fe\u4e0a\u9009\u62e9\\(k\\)\u4e2a\u70b9\uff0c\u4f7f\u5f97\u6240\u6709\u70b9\u5230\u6700\u8fd1\u7684\u4e2d\u5fc3\u70b9\u7684\u8ddd\u79bb\u6700\u5c0f</p> <p> </p> <p>\u8fd9\u91cc\u8fd0\u7528\u8d2a\u5fc3\u7b97\u6cd5\u89e3\u51b3\u95ee\u9898</p> <ul> <li> <p>\u8ba9\u7b2c\u4e00\u4e2a\u70b9\u9009\u62e9\u4e3a\u6240\u6709\u70b9\u7684\u4e2d\u70b9\uff1a\u663e\u7136\u4e0d\u884c\uff0c\u5982\u679c\u6709\u4e24\u5768\u70b9\u79bb\u5f97\u5f88\u8fdc\u90a3\u8fd9\u4e2a\u70b9\u5c31\u975e\u5e38\u4e0d\u5408\u9002</p> </li> <li> <p>\u968f\u673a\u9009\u53d6\u7b97\u6cd5\uff1a</p> </li> </ul> <p>\u5f15\u7406</p> <p>\u5728\u6539\u8fdb\u7684\u8d2a\u5fc3\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u6311\u9009\u67d0\u4e2a\u5730\u5740\u4f5c\u4e3a\u4e2d\u5fc3\u70b9\u3002\u8fd9\u79cd\u505a\u6cd5\u4e4b\u6240\u4ee5\u53ef\u884c\uff0c\u662f\u56e0\u4e3a\u67d0\u4e2a\u4e2d\u5fc3\u70b9\u8986\u76d6\u534a\u5f84\u4e3ar\u7684\u533a\u57df\uff0c\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\u4ee5\uff08\u63a5\u8fd1\uff09\u533a\u57df\u8fb9\u754c\u4e0a\u4e00\u70b9s\u4e3a\u65b0\u7684\u4e2d\u5fc3\u70b9\uff0c2r\u4e3a\u534a\u5f84\u7684\u533a\u57df\u3002\u867d\u7136\u8fd9\u4e2a\u533a\u57df\u660e\u663e\u6bd4\u539f\u533a\u57df\u5927\uff0c\u4f46\u5b83\u4fdd\u8bc1\u80fd\u591f\u8986\u76d6\u539f\u533a\u57df\u6240\u80fd\u8986\u76d6\u7684\u70b9\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u4e0d\u5fc5\u901a\u8fc7\u7e41\u7410\u7684\u8ba1\u7b97\u7b97\u51fa\u4e2d\u5fc3\u70b9\uff0c\u800c\u662f\u4ece\u539f\u6709\u7684\u5730\u5740\u4e2d\u9009\u62e9\u4e2d\u5fc3\u70b9\uff0c\u65b9\u4fbf\u4e86\u5f88\u591a\u3002</p> <p> </p> <ol> <li> <p>\u4ece\u8f93\u5165\u70b9\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u4e2d\u5fc3\uff0c\u7136\u540e\u5220\u9664\u8be5\u70b9\u4e3a\u4e2d\u5fc3\uff0c\\(2r\\)\u4e3a\u534a\u5f84\u7684\u6240\u6709\u70b9</p> <ul> <li>\u8fd9\u91cc\u7684\u53c2\u6570\\(r\\)\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u6765\u8ba1\u7b97\uff0c\u5148\u4ee4\\(r = \\frac{max(d(i,j))}{2}\\)\uff0c\u7136\u540e\u68c0\u67e5\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u5982\u679c\u6ee1\u8db3\u5219\u7f29\u5c0f\\(r\\)\uff0c\u5426\u5219\u589e\u5927\\(r\\)</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(logr_{max})\\)</li> </ul> </li> <li> <p>\u5728\u5269\u4f59\u7684\u70b9\u4e2d\u7ee7\u7eed\u9009\u62e9\u7b2c\u4e8c\u4e2a\u4e2d\u5fc3\uff0c\u4ee5\u6b64\u7c7b\u63a8</p> </li> </ol> <ul> <li>\u5982\u679c\u4e00\u4e2a\u503c\\(r\\)\u662f\u6700\u4f18\u7684\uff0c\u90a3\u4e48\u8fd9\u4e00\u7b97\u6cd5\u5f97\u5230\u7684\u89e3\u662f\u6700\u4f18\u89e3\u7684\u4e24\u500d\u2014\u2014\u5373\u8fd9\u662f\u4e00\u4e2a\\(\\rho(n) = 2\\)\u7684\u8fd1\u4f3c\u7b97\u6cd5</li> </ul> <pre><code>Centers Greedy-2r(Sites S[], int n, int K, double r) {\n    Sites S`[] = S[];  // S` is the set of the remaining sites\n    Centers C[] = NULL;\n    while (S`[] != NULL) {\n        Select any s form S` and add it to C;\n        Delete all s` from S` that are at dist(s`, s) &lt;= 2r;\n    } // end-while\n    if (|C| &lt;= K) \n        return C;\n    else\n        ERROR(\"No set of K centers with covering radius at most r\");\n}\n</code></pre>"},{"location":"notes/cs/algorithm/DandC.html","title":"Divide and Conquer","text":"<p> \u7ea6 1461 \u4e2a\u5b57  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>\u6838\u5fc3\u601d\u60f3\uff1a\u5c06\u8f83\u5927\u7684\u95ee\u9898\u5206\u89e3\u4e3a\u8f83\u5c0f\u7684\u5b50\u95ee\u9898\uff0c\u5206\u522b\u89e3\u51b3\u5b50\u95ee\u9898\uff0c\u7136\u540e\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u5408\u5e76\u4e3a\u539f\u95ee\u9898\u7684\u89e3</p> <p>Recursively:</p> <p>Divide the problem into a number of subproblems</p> <p>Conquer the subproblems by solving them recursively</p> <p>Combine the solutions to the subproblems into the solution for the original problem</p> \\[ T(n) = aT(\\frac{n}{b}) + f(n) \\] \\[ N \u662f\u539f\u95ee\u9898\u7684\u89c4\u5b9a\u5927\u5c0f, f(n) \u662f\u5212\u5206\u548c\u5408\u5e76\u5b50\u95ee\u9898\u7684\u89e3\u6d88\u8017\u7684\u65f6\u95f4 \\]"},{"location":"notes/cs/algorithm/DandC.html#example","title":"Example","text":""},{"location":"notes/cs/algorithm/DandC.html#maximum-subarray","title":"Maximum Subarray","text":"<p>\u5e38\u89c1\u5957\u8def\u662f\u5747\u5300\u7684\u4e00\u5206\u4e3a\u4e8c</p> <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u6570\u7ec4\u4e00\u5206\u4e3a\u4e8c\uff0c\u5206\u522b\u6c42\u51fa\u5de6\u534a\u90e8\u5206\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\u53f3\u534a\u90e8\u5206\u7684\u6700\u5927\u5b50\u6570\u7ec4\uff0c\u7136\u540e\u8003\u8651\u8de8\u8d8a\u4e2d\u70b9\u7684\u6700\u5927\u5b50\u6570\u7ec4</p> <p>\u6a2a\u8de8\u5b50\u5e8f\u5217\u7684\u6c42\u7b97\u65b9\u6cd5\uff1a</p> <p>\u4ece\u4e2d\u95f4\u5411\u4e24\u8fb9\u626b\u63cf\uff0c\u5206\u522b\u6c42\u51fa\u7531\u4e2d\u95f4\u5411\u5de6\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\u7531\u4e2d\u95f4\u5411\u53f3\u7684\u6700\u5927\u5b50\u6570\u7ec4\uff0c\u7136\u540e\u5408\u5e76</p>"},{"location":"notes/cs/algorithm/DandC.html#nearest-neighbor","title":"Nearest Neighbor","text":"<p>\u5e73\u9762\u4e0a\u7ed9\u5b9a\u7684N\u4e2a\u70b9\u4e2d\u627e\u5230\u8ddd\u79bb\u6700\u8fd1\u7684\u4e24\u4e2a\u70b9</p> <p>Solution</p> <p>\u5728\u5148\u524d\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4e5f\u91c7\u7528\u4e86\u5c06\u95ee\u9898\u5747\u5300\u4e00\u5206\u4e3a\u4e8c\u7684\u65b9\u6cd5\uff0c\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u540c\u6837\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002</p> <ul> <li>\u9996\u5148\u6839\u636e\u8fd9\u4e9b\u70b9\u7684x\u5750\u6807\uff0c\u5c06\u8fd9\u4e9b\u70b9\u4e00\u5206\u4e3a\u4e8c\uff0c\u5206\u522b\u6c42\u51fa\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206\u6700\u8fd1\u7684\u4e24\u4e2a\u70b9</li> <li>\u7136\u540e\u8003\u8651\u8de8\u8d8a\u4e2d\u70b9\u7684\u6700\u8fd1\u4e24\u4e2a\u70b9\uff1a</li> <li>\u5982\u679c\u8003\u8651\u5206\u5272\u7ebf\u5de6\u53f3\u4e24\u8fb9\u6240\u6709\u7684\u70b9\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(N^2)\\)\uff0c\u663e\u7136\u592a\u5927\u4e86</li> <li>\u6211\u4eec\u7b2c\u4e00\u6b65\u8003\u8651\u7684\u662f\u9009\u53d6\u4e00\u4e2a\u675f\u72b6\u5e26\u578b\u533a\u57df\uff0c\u8fd9\u4e2a\u533a\u57df\u8ddd\u79bb\u5206\u5272\u7ebf\u7684\u8ddd\u79bb\u662f\\(\\delta\\)\uff0c\u5219\u6b64\u65f6\u5982\u679c\u80fd\u4fdd\u8bc1\u8fd9\u4e2a\u533a\u57df\u4e2d\u53ea\u6709\\(O(\\sqrt{N})\\)\u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\\(O(N)\\)\u7684\u65f6\u95f4\u5185\u627e\u5230\u8de8\u8d8a\u4e2d\u70b9\u7684\u6700\u8fd1\u4e24\u4e2a\u70b9\uff0c\u4f46\u4e07\u4e00\u4e0d\u5462\uff1f</li> <li>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u6539\u8fdb\uff0c\u518d\u786e\u5b9a\u7684\u5782\u76f4\u5e26\u72b6\u533a\u57df\u4e2d\uff0c\u6211\u4eec\u518d\u9009\u53d6\u4e00\u4e2a\u7ad6\u76f4\u9ad8\u5ea6\u4e3a\\(\\delta\\)\u7684\u7684\u533a\u57df\uff0c\u8fd9\u6837\u6784\u6210\u4e86\u4e00\u4e2a\u957f\u4e3a\\(2\\delta\\)\uff0c\u5bbd\u4e3a\\(\\delta\\)\u7684\u77e9\u5f62  </li> <li>\u5728\u8fd9\u4e2a\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u70b9\u53ea\u9700\u8981\u8003\u8651\u4e0e\u5176\u4ed6\u4e03\u4e2a\u70b9\uff08\u4e5f\u5c31\u662f\u8fb9\u6846\u7684\u89d2\u4e0a\uff09\u4e4b\u95f4\u7684\u8ddd\u79bb\u5373\u53ef</li> <li>\u5373\u4f7f\u5728\u6240\u6709\u70b9\u90fd\u5728\u8fd9\u4e2a\u533a\u57df\u7684\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u7684\u5224\u65ad\u6b21\u6570\u662f\u5e38\u6570\u7684\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5dee\u4ecd\u7136\u662f\\(O(N)\\)</li> </ul>"},{"location":"notes/cs/algorithm/DandC.html#analysis","title":"Analysis","text":"<p>\u5206\u6cbb\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\u4f9d\u6258\u4e8e\u6211\u4eec\u5148\u524d\u5b9a\u4e49\u7684\u7b97\u5f0f</p> \\[ T(n) = aT(\\frac{n}{b}) + f(n) \\] <p>\u5bf9\u4e8e\u8fd9\u79cd\u9012\u5f52\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u9012\u5f52\u5c55\u5f00\u7136\u540e\u8ba1\u7b97\uff1a</p> <p>Example</p> \\[ \\begin{aligned} T(n) &amp;= 2T(\\frac{n}{2}) + N\\\\ &amp;= 2(2T(\\frac{n}{4}) + \\frac{n}{2}) + N\\\\ &amp;= 4T(\\frac{n}{4}) + 2N\\\\ &amp;= 4(2T(\\frac{n}{8}) + \\frac{n}{4}) + 2N\\\\ &amp;= 8T(\\frac{n}{8}) + 3N\\\\ &amp;= ...\\\\ &amp;= 2^k T(\\frac{n}{2^k}) + kN\\\\ &amp;= O(NlogN) \\end{aligned} \\]"},{"location":"notes/cs/algorithm/DandC.html#three-methods-for-solving-recurrence","title":"Three Methods for Solving Recurrence","text":"<ul> <li>\u5047\u5b9a\\(\\frac{n}{b}\\) \u662f\u6574\u6570</li> <li>\u5bf9\u4e8e\u8f83\u5c0f\u7684n\uff0c\u6211\u4eec\u5047\u5b9a\\(T(n) = \\Theta(1)\\)</li> </ul> <ol> <li>Substitution Method</li> </ol> <p>\u731c\u6d4b\u4e00\u4e2a\u7ed3\u679c\uff0c\u7136\u540e\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e</p> <p>Warning</p> <p>\u5728\u8fdb\u884c\u8fd9\u6837\u7684\u4e00\u4e2a\u731c\u6d4b\u65f6\uff1a</p> <p>\u5df2\u77e5\\(T(N) = 2T(\\lfloor{\\frac{N}{2}\\rfloor}) + N\\)\uff0c\u5982\u679c\u6211\u4eec\u731c\u6d4b\\(T(N) = O(N)\\)\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u6709\u5982\u4e0b\u7684\u8bc1\u660e\uff1a</p> <ul> <li>\u5047\u8bbe\u5bf9\u4e8e\\(m \\leq N\\)\uff0c\u7ed3\u8bba\u6210\u7acb</li> <li>\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a\u5e38\u6570\\(c\\)\uff0c\u53d6\\(m = \\lfloor{\\frac{N}{2}\\rfloor}\\)\uff0c\u5219\u6709\\(T(\\lfloor{\\frac{N}{2}\\rfloor}) \\leq c \\lfloor{\\frac{N}{2}\\rfloor}\\)</li> <li>\u5c06\u8fd9\u4e2a\u5f0f\u5b50\u4ee3\u5165\\(T(N) = 2T(\\lfloor{\\frac{N}{2}\\rfloor}) + N\\)\uff0c\u5219\u6709\\(T(N) \\leq 2c \\lfloor{\\frac{N}{2}\\rfloor} + N = cN + N = O(N)\\)</li> </ul> <p>\u770b\u8d77\u6765\u4f3c\u4e4e\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u5728\u6700\u540e\u4e00\u4e2a\u7b49\u5f0f\u4e2d\uff0c\u6211\u4eec\u5f97\u5230\u4e86\\(cN+N=(c+1)N\\)\uff0c\u8fd9\u663e\u7136\u662f\\(O(N)\\)\u7684\uff0c\u4f46\u662f\u5728\u5f62\u5f0f\u4e0a\u5b83\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9884\u5148\u5047\u8bbe\u6b63\u786e\u7684\u7ed3\u8bba\u662f\\(T(m) \\leq c m\\)\uff0c\u6240\u4ee5\u8981\u6839\u636e\u8fd9\u4e2a\u683c\u5f0f\u6765\u8bc1\u660e\u51fa\\(T(N) \\leq cN\\)\uff0c\u800c\u4e0d\u662f\\(T(N) \\leq (c+1)N\\)\uff0c\u5fc5\u987b\u4fdd\u8bc1\u7cbe\u786e\u7684\u683c\u5f0f\uff0c\u5e38\u6570\u9879\u4e5f\u5fc5\u987b\u4e00\u81f4</p> <p>Tips</p> <p>\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u9012\u63a8\u4e2d\u51fa\u73b0\u4e86\u7c7b\u4f3c\\(T(\\sqrt{N})\\)\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u91c7\u7528\u6362\u5143\u6765\u5904\u7406\uff0c\u8fd9\u91cc\u7684\u65b9\u6cd5\u6765\u6e90\u4e8enoughtq\u540c\u5b66\u7684\u7b14\u8bb0\uff1a</p> <ul> <li>\u4ee4\\(m = \\log_2 N\\)\uff0c\u90a3\u4e48\\(T(\\sqrt{N}) = T(2^{\\frac{m}{2}})\\)\uff0c\\(T(N) = T(2^m)\\)</li> <li>\u518d\u4ee4\\(S(m) = T(2^m)\\)\uff0c\u5219\u6709\\(S(\\frac{m}{2}) = T(2^{\\frac{m}{2}}) = T(\\sqrt{N})\\)</li> <li>\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\\(T(N)\\)\u7684\u9012\u63a8\u5f0f\u8f6c\u6362\u4e3a\\(S(m)\\)\u7684\u9012\u63a8\u5f0f\uff1a\\(S(m) = 2S(\\frac{m}{2}) + m\\)</li> </ul> Example <p>\u9644\u4e0a\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p> </p> <ol> <li>Recursion-tree Method</li> </ol> <p>\u753b\u51fa\u4e00\u4e9b\u4f8b\u5b50\uff0c\u7528\u6811\u8868\u793a\u9012\u5f52\u7684\u5c55\u5f00</p> <p>\u5728\u6811\u4e2d\uff0c\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u8868\u793a\u7684\u662f\u5411\u4e0a\u9012\u5f52\u65f6\u6240\u9700\u8981\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u516c\u5f0f\u4e2d\u7684\\(f(n)\\)\uff0c\u800c\u53f6\u5b50\u8282\u70b9\u8868\u793a\u7684\u662f\u9012\u5f52\u7684\u7ed3\u675f\uff0c\u4e5f\u5c31\u662f\\(T(1)\\)</p> <ul> <li>\u6211\u4eec\u5728\u8fd0\u7b97\u65f6\u5047\u8bbe\u4e86\u8fd9\u68f5\u6811\u7684\u5f00\u9500\u5c31\u662f\u6bcf\u4e2a\u8282\u70b9\u7684\u5f00\u9500\u4e4b\u548c:</li> <li>\u7b2c\u4e00\u90e8\u5206\u662f\u53f6\u5b50\u7ed3\u70b9\u7684\\(T(1)\\)\u5f00\u9500\u4e4b\u548c</li> <li>\u7b2c\u4e8c\u90e8\u5206\u662f\u6240\u6709\u975e\u53f6\u5b50\u8282\u70b9\u7684\u9012\u5f52\u5408\u5e76\u5f00\u9500\u4e4b\u548c</li> </ul> Example <p></p> <ul> <li>\u9012\u5f52\u6811\u7684\u4f5c\u7528\u4e0d\u662f\u4e3a\u4e86\u80fd\u591f\u5f97\u5230\u6700\u51c6\u786e\u7684\u8bc1\u660e\uff0c\u800c\u662f\u4e3a\u4e86\u80fd\u5f97\u5230\u4e00\u4e2a\u597d\u7684\u731c\u6d4b\uff0c\u4e4b\u540e\u518d\u7528Substitution Method\u6765\u4e25\u683c\u8bc1\u660e</li> </ul> <p>\u8fdb\u884c\u731c\u6d4b\u7684\u65f6\u5019\u4e00\u822c\u4f1a\u8fdb\u884c\u4e00\u4e2a\u653e\u5927\u7684\u731c\u6d4b\uff0c\u53ef\u80fd\u4e0e\u771f\u5b9e\u7684\u76f8\u540c\uff0c\u4e5f\u53ef\u80fd\u6bd4\u771f\u5b9e\u503c\u5927\uff0c\u4f46\u4e00\u5b9a\u4e0d\u80fd\u6bd4\u771f\u5b9e\u503c\u5c0f\uff08\u90a3\u6837\u5c31\u4e0d\u7528\u8bc1\u4e86\uff0c\u80af\u5b9a\u9519\u4e86\uff09\uff0c\u6240\u4ee5\u5bf9\u4e8e\u65e0\u6cd5\u753b\u51fa\u6811\u7684\u5168\u8c8c\u7684\u4f8b\u5b50\u4e00\u822c\u653e\u5927\u4e00\u70b9\u731c\u6d4b\u662f\u6ca1\u6709\u95ee\u9898\u7684</p> <ol> <li>Master Method</li> </ol> <p>\u5148\u7ed9\u51fa\u516c\u5f0f\uff1a</p> <p>Master Method</p> <ol> <li>If \\(f(n) = O(N^{\\log_b a - \\epsilon})\\) for some constant \\(\\epsilon &gt; 0\\), then \\(T(n) = \\Theta(N^{\\log_b a})\\)</li> <li>If \\(f(n) = \\Theta(N^{\\log_b a})\\), then \\(T(n) = \\Theta(N^{\\log_b a} \\log N)\\)</li> <li>If \\(f(n) = \\Omega(N^{\\log_b a + \\epsilon})\\) for some constant \\(\\epsilon &gt; 0\\), and if \\(af(n/b) \\leq cf(n)\\) for some constant \\(c &lt; 1\\) and all sufficiently large \\(n\\), then \\(T(n) = \\Theta(f(n))\\)</li> </ol> <p>yy\u54e5\u7684\u5f62\u8c61\u89e3\u91ca\uff0c\u6211\u89c9\u5f97\u5f88\u6709\u5e2e\u52a9\uff08\u81f3\u5c11\u5bf9\u4e8e\u8bb0\u5fc6\u6765\u8bf4\uff09\uff1a</p> <ul> <li> <p>\u5728\u5206\u6790\u7b97\u6cd5\u6027\u80fd\u65f6\u4e00\u5b9a\u8981\u627e\u5230\u5360\u4e3b\u5bfc\u7684\u90e8\u5206--\u6211\u4eec\u4ece\u6811\u7684\u89d2\u5ea6\u51fa\u53d1:</p> <ul> <li>\u5982\u679c\u6211\u4eec\u7684\u6811\u957f\u5f97\u975e\u5e38\u9738\u6c14\uff0c\u5de8\u9ad8\uff0c\u53f6\u5b50\u5de8\u591a\u65e0\u6bd4\uff0c\u8fd9\u65f6\u5019\u65f6\u95f4\u5f00\u9500\u88ab\u53f6\u5b50dominate\u4e86\uff0c\u7528Master 1\uff0c\u65f6\u95f4\u5f00\u9500\u5c31\u662f\\(\\Theta (N^{\\log_b a})\\)\u2014\u2014\u4e5f\u5c31\u662f\u53f6\u5b50\u7684\u4e2a\u6570</li> <li>\u5982\u679c\u6211\u4eec\u7684\u6811\u8eab\u6750\u975e\u5e38\u5300\u79f0\uff0c\u4e00\u7247\u6b23\u6b23\u5411\u8363\uff0c\u7528Master 2\uff0c\u65f6\u95f4\u5f00\u9500\u5c31\u662f\\(\\Theta (N^{\\log_b a} \\log N)\\)\u2014\u2014\u4e5f\u5c31\u662f\u6bcf\u4e00\u5c42\u7684\u5f00\u9500\u4e58\u4ee5\u6811\u7684\u9ad8\u5ea6</li> <li>\u5982\u679c\u6211\u4eec\u7684\u6811\u6839\u7279\u522b\u5927\uff0c\u4e5f\u5c31\u662f\u8bf4\u5408\u5e76\u95ee\u9898\u6240\u9700\u7684\u65f6\u95f4\u975e\u5e38\u591a\uff0c\u751a\u81f3\u6bd4\u7b2c\u4e00\u5c42\u5212\u5206\u8282\u70b9\u6240\u9700\u8981\u7684\u65f6\u95f4\u8fd8\u8981\u591a\uff08\u5c31\u662f\u6b63\u5219\u5f0f\u7684\u610f\u4e49\uff09\u7528Master 3\uff0c\u65f6\u95f4\u5f00\u9500\u5c31\u662f\\(\\Theta (f(N))\\)\u2014\u2014\u4e5f\u5c31\u662f\u6811\u6839\u7684\u503c</li> </ul> </li> </ul> <p>\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u516c\u5f0f\u5e76\u6ca1\u6709cover\u5230\u6240\u6709\u60c5\u51b5\u7684\uff0c\u5c31\u6bd4\u5982Master 3\u4e2d\uff0c\u5982\u679c\u6839\u5f88\u5927\uff0c\u4f46\u662f\u5212\u5206\u95ee\u9898\u4e5f\u5f88\u6162\uff0c\u5c31\u6ca1\u529e\u6cd5\u7528\u4e3b\u65b9\u6cd5\u4e86\uff0c\u6240\u4ee5\u4e3b\u65b9\u6cd5\u9002\u7528\u7684\u60c5\u51b5\u5c31\u662f\u4e09\u4e2a\u5f88\u6781\u7aef\u7684\u60c5\u51b5</p> <p>\u52a0\u5f3a\u7248\u7684Master Method</p> <p>\u5f53\\(a \\geq 1, b &gt; 1, p \\geq 0\\)\u65f6\uff0c\u65b9\u7a0b</p> \\[ T(n) = aT(\\frac{n}{b}) + \\Theta(N^k \\log^p N) \\] <p>\u7684\u89e3\u4e3a\uff1a</p> \\[ T(n) = \\begin{cases} \\Theta(N^{\\log_b a}) &amp; \\text{if } k &lt; \\log_b a\\\\ \\Theta(N^k \\log^{p+1} N) &amp; \\text{if } k = \\log_b a\\\\ \\Theta(N^k \\log^p N) &amp; \\text{if } k &gt; \\log_b a \\end{cases} \\]"},{"location":"notes/cs/algorithm/NP.html","title":"NP Completeness","text":""},{"location":"notes/cs/algorithm/NP.html#intro","title":"Intro","text":"<p>NP: Non-deterministic Polynomial-time </p> <p>P = NP: </p> <p>\u4ec0\u4e48\u662f NP\u95ee\u9898\u4e2d\u6700\u96be\u7684\u90e8\u5206-&gt;NP-complete </p> <p>\u6027\u611f\u7684\u6027\u8d28 \u53ef\u4ee5\u5c06\u5176\u4ed6\u95ee\u9898\u5f52\u7ea6\u5230 NP-complete \u95ee\u9898 </p> <p>\u53ea\u8981\u89e3\u51b3\u4efb\u610f\u4e00\u4e2a NP-complete \u95ee\u9898 \u5176\u4ed6 NP-complete \u95ee\u9898\u4e5f\u5c31\u89e3\u51b3\u4e86 </p> <p>\u96be\u6613\u548c\u5feb\u6162\uff1a</p> <p>\u6240\u6709\u4e0d\u80fd\u7528\u591a\u9879\u5f0f\u65f6\u95f4\u89e3\u51b3\u7684\u95ee\u9898\u90fd\u662f\u96be\u7684\u95ee\u9898</p> <p>\u53ea\u8981\u662f\u80fd\u7528\u591a\u9879\u5f0f\u65f6\u95f4\u89e3\u51b3\u7684\u95ee\u9898\u90fd\u662f\u5bb9\u6613\u7684\u95ee\u9898 \u4e0d\u9700\u8981\u5177\u4f53\u6bd4\u8f83\u4ed6\u4eec\u4e4b\u95f4\u7684\u5feb\u6162\u6765\u8fdb\u884c\u5b9a\u4e49</p> <p>\u8bc1\u660e\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u662f NP-complete \u95ee\u9898</p> <p>\u62ff\u4e00\u4e2a\u5df2\u77e5\u7684 NP-complete \u95ee\u9898\u8fdb\u884c\u5f52\u7ea6 \u5982\u679c\u80fd\u7528\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5f52\u7ea6 \u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u4e5f\u5c31\u662f NP-complete \u95ee\u9898 </p>"},{"location":"notes/cs/algorithm/backtracking.html","title":"Backtracking","text":"<p> \u7ea6 1637 \u4e2a\u5b57  5 \u884c\u4ee3\u7801  5 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"notes/cs/algorithm/backtracking.html#intro","title":"Intro","text":"<p>\u89e3\u51b3\u95ee\u9898\u53ef\u4ee5\u5c06\u6240\u6709\u53ef\u80fd\u89e3\u7f57\u5217\u51fa\u6765\uff0c\u4f46\u662f\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u56de\u6eaf\u6cd5\u8fdb\u884c\u4f18\u5316</p> <p>\u56de\u6eaf\u6cd5\u5c31\u662f\u5728\u6240\u6709\u89e3\u7684\u7a7a\u95f4\u4e2d\u8fdb\u884c\u6b63\u786e\u89e3\u641c\u7d22\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u4ed6\u901a\u8fc7\u6d88\u9664\u4e0d\u5fc5\u8981\u89e3\u7684\u641c\u7d22\u7a7a\u95f4\uff08\u526a\u679dprune\uff09\u6765\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6</p>"},{"location":"notes/cs/algorithm/backtracking.html#example","title":"Example","text":""},{"location":"notes/cs/algorithm/backtracking.html#8-queens","title":"8 Queens","text":"<p>8 Queens</p> <p>\u5728\u4e00\u4e2a8x8\u7684\u68cb\u76d8\u4e0a\uff0c\u653e\u7f6e8\u4e2a\u7687\u540e\uff0c\u4f7f\u5f97\u4ed6\u4eec\u4e92\u76f8\u4e4b\u95f4\u65e0\u6cd5\u8fdb\u884c\u653b\u51fb</p> <p>\u5bf9\u8fd9\u4e2a\u95ee\u9898\u8fdb\u884c\u6570\u5b66\u5316\u63cf\u8ff0\uff1a</p> <ul> <li>\u4ee4\\(Q_i\\)\u8868\u793a\u7b2c\\(i\\)\u884c\u7684\u7687\u540e\uff0c\\(x_i\\)\u8868\u793a\\(Q_i\\)\u7684\u5217\u5750\u6807\uff0c\\(S_i\\)\u8868\u793a\\(x_i\\)\u53ef\u53d6\u503c\u7684\u96c6\u5408</li> <li>\u9650\u5236\u6761\u4ef6\uff1a<ul> <li>\\(S_i = \\{1, 2, 3, 4, 5, 6, 7, 8\\}\\), \u8868\u660e\u53ef\u80fd\u7684\u53d6\u503c\u7a7a\u95f4\u5927\u5c0f\u662f\\(8^8\\)</li> <li>\u4efb\u610f\u4e24\u4e2a\u7687\u540e\\(Q_i\\)\u548c\\(Q_j\\)\u4e0d\u80fd\u5728\u540c\u4e00\u5217\uff0c\u5373\\(x_i \\neq x_j\\)</li> <li>\u4efb\u610f\u4e24\u4e2a\u7687\u540e\\(Q_i\\)\u548c\\(Q_j\\)\u4e0d\u80fd\u5728\u540c\u4e00\u5bf9\u89d2\u7ebf\uff0c\u5373\\(|x_i - x_j| \\neq |i - j|\\)</li> </ul> </li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <p>\u6784\u5efagame tree\uff0c\u4ee5\u56db\u7687\u540e\u4e3a\u4f8b\uff1a</p> <p></p> <p>\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08\u540e\u5e8f\u904d\u5386 \u4e5f\u5c31\u662f\u5de6\u4e2d\u53f3\uff09\uff0c\u5728\u8fdb\u884c\u904d\u5386\u7684\u65f6\u5019\u4e3b\u8981\u8fdb\u884c\u7684\u662f\u5bf9\u89d2\u7ebf\u7684\u68c0\u67e5\uff08\u56e0\u4e3a\u672c\u8eab\u5217\u7684\u68c0\u67e5\u5728\u6811\u7684\u7ed3\u6784\u4e0a\u5df2\u7ecf\u9690\u542b\u4e86\uff09</p> <ul> <li>\u526a\u679d\u7684\u8fc7\u7a0b\u5c31\u662f\u5728\u6211\u9047\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u5224\u65ad\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5c31\u5c06\u8fd9\u4e2a\u8282\u70b9\u4ee5\u53ca\u4ed6\u7684\u6240\u6709\u5b50\u8282\u70b9\u90fd\u526a\u6389\uff08\u4e0d\u8fdb\u884c\u904d\u5386\uff09\u7136\u540e\u5bf9\u8fd9\u4e2a\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\u8fdb\u884c\u5c1d\u8bd5\uff0c\u5982\u679c\u6240\u6709\u5144\u5f1f\u8282\u70b9\u90fd\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u8bf4\u660e\u7236\u4eb2\u8282\u70b9\u4e5f\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u7ee7\u7eed\u5f80\u4e0a\u8fd4\u56de\u76f4\u5230\u627e\u5230\u4e00\u7ec4\u5b8c\u6574\u89e3</li> </ul> <p>Note</p> <p>\u5b9e\u9645\u4e0a\u6811\u7684\u6784\u5efa\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u5b9e\u9645\u4e0a\u5728\u56de\u6eaf\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6784\u5efa\u6811\uff0c\u6784\u5efa\u6811\u7684\u8fc7\u7a0b\u8ba9\u6211\u4eec\u5bf9\u201c\u526a\u679d\u201d\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u4e86\u66f4\u76f4\u89c2\u7684\u7406\u89e3\uff0c\u5c31\u662f\u5728\u7ea6\u675f\u6761\u4ef6\u4e0b\u63d0\u524d\u6392\u9664\u4e0d\u53ef\u80fd\u7684\u89e3\uff0c\u4ece\u800c\u51cf\u5c11\u641c\u7d22\u7a7a\u95f4</p> Hunting On Mars <p>\u8fd9\u91cc\u8865\u5145\u4e00\u4e2a\u4f8b\u9898\u52a0\u6df1\u5bf9\u6811\u7684\u6784\u5efa\u7684\u7406\u89e3</p> <p>\u95ee\u9898\u662f\uff1a\u5728\u706b\u661f\u4e0a\u6709\u4e00\u4e2a\u56fe\uff0c\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6709\u53ef\u80fd\u6709\u5154\u5b50(1)\u4e5f\u6709\u53ef\u80fd\u6ca1\u6709\u5154\u5b50(0)\uff0c\u4f46\u662f\u730e\u4eba\u51fa\u53d1\u65f6\u6240\u80cc\u7684\u6c27\u6c14\u53ea\u80fd\u652f\u6491\u4ed6\u8d70\\(k\\)\u6b65\u5e76\u4e14\u9700\u8981\u8fd4\u56de\u51fa\u53d1\u70b9\uff0c\u5e76\u4e14\u730e\u4eba\u81f3\u5c11\u9700\u8981\u6293\u5230\\(m\\)\u53ea\u5154\u5b50\uff0c\u627e\u5230\u8fd9\u6837\u7684\u8def\u5f84</p> <p>\u5728\u8fd9\u91cc\u6709\u4e24\u4e2a\u7ea6\u675f\u6761\u4ef6\uff1a</p> <ul> <li>\u730e\u4eba\u53ea\u80fd\u8d70\\(k\\)\u6b65\u5e76\u4e14\u9700\u8981\u8fd4\u56de\u51fa\u53d1\u70b9</li> <li>\u730e\u4eba\u9700\u8981\u6293\u5230\\(m\\)\u53ea\u5154\u5b50</li> </ul> <p>\u8fd9\u91cc\u6211\u4eec\u6784\u5efa\u6811\u7684\u601d\u8def\u662f\u4ee5\u8def\u8fc7\u7684\u8282\u70b9\u6570\u4f5c\u4e3a\u6811\u7684\u8282\u70b9\uff0c\u4ee5\u730e\u4eba\u8d70\u8fc7\u7684\u8def\u5f84\u4f5c\u4e3a\u6811\u7684\u8fb9\uff0c\u540c\u65f6\u8ba1\u7b97\u730e\u4eba\u8d70\u8fc7\u7684\u8def\u5f84\u4e0a\u7684\u5154\u5b50\u6570\u91cf</p> <p>\u526a\u679d\u7684\u6761\u4ef6\u662f\uff1a</p> <ul> <li>\u5982\u679c\u5f53\u524d\u8282\u70b9\u8d70\u5b8c\u5269\u4e0b\u7684\u6b65\u6570\u5c0f\u4e8e\u6240\u9700\u7684\u5154\u5b50\u6570\u91cf\uff0c\u90a3\u4e48\u5c31\u526a\u679d</li> <li>\u5f53\u524d\u8282\u70b9\u8ddd\u79bb\u51fa\u53d1\u70b9\u7684\u6700\u77ed\u8def\u957f\u5ea6\u5927\u4e8e\u5269\u4f59\u7684\u6b65\u6570\uff0c\u90a3\u4e48\u5c31\u526a\u679d</li> </ul> <p>\u4f46\u662f\u8fd9\u91cc\u6bd4\u8f83tricky\u7684\u5730\u65b9\u5728\u4e8e\u6211\u4eec\u5982\u4f55\u8fdb\u884c\u904d\u5386\uff0c\u5982\u679c\u91c7\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u90a3\u4e48\u6211\u4eec\u5927\u6982\u7387\u4f1a\u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f84\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u975e\u5e38\u9ad8\uff0c\u56e0\u6b64\u6211\u4eec\u91c7\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u8fd9\u6837\u5728\u6c42\u5230\u4e00\u7ec4\u89e3\u4e4b\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u8fd4\u56de\uff0c\u4ece\u800c\u8282\u7701\u4e86\u65f6\u95f4</p> <p>Key of pruning</p> <ul> <li>\u7531\u8fd9\u4e2a\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u8fdb\u884c\u526a\u679d\u6761\u4ef6\u7684\u8bbe\u8ba1\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u653e\u5f03\u4e00\u4e2a\u6761\u4ef6\u800c\u4e25\u683c\u9075\u5faa\u53e6\u4e00\u4e2a\u6761\u4ef6</li> <li>\u9ad8\u6548\u7684\u526a\u679d\u5f80\u5f80\u4e0d\u662f\u4f9d\u636e\u5f53\u524d\u6240\u5904\u8282\u70b9\u7684\uff0c\u800c\u662f\u5177\u6709\u9884\u89c1\u6027\u7684\u526a\u679d</li> </ul>"},{"location":"notes/cs/algorithm/backtracking.html#the-turnpike-problem","title":"The Turnpike Problem","text":"<p>The Turnpike Problem</p> <p>\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u6709\u591a\u4e2a\u70b9\uff0c\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\\(d_1, d_2, \\cdots, d_{n}\\)\uff0c\u5171\\(\\frac{n(n-1)}{2}\\)\u4e2a\u8ddd\u79bb\uff0c\u73b0\u5728\u8981\u627e\u5230\u8fd9\u4e9b\u70b9\u5728\u76f4\u7ebf\u4e0a\u7684\u4f4d\u7f6e\uff0c\u5df2\u77e5\u6700\u5de6\u8fb9\u7684\u7b2c\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u4f4d\u7f6e\u662f\u56fa\u5b9a\u7684\u5728\\(0\\)</p> <ul> <li> <p>\u5206\u6790</p> <p>\u6700\u5927\u7684\u8ddd\u79bb\u4e00\u5b9a\u662f\u6700\u5de6\u8fb9\u7684\u70b9\\(0\\)\u548c\u6700\u53f3\u8fb9\u7684\u70b9\\(d_n\\)\uff0c\u63a5\u7740\u5904\u7406\u7b2c\u4e8c\u5927\u7684\u8ddd\u79bb\uff0c\u4f46\u8fd9\u65f6\u6700\u5de6\u8fb9\u7684\u70b9\u53ef\u4ee5\u548c\u53f3\u8fb9\u7684\u7b2c\u4e8c\u4e2a\u70b9\u6784\u6210\u8fd9\u4e2a\u8ddd\u79bb\uff0c\u6700\u53f3\u8fb9\u7684\u70b9\u4e5f\u53ef\u4ee5\u548c\u5de6\u8fb9\u7684\u5012\u6570\u7b2c\u4e8c\u4e2a\u70b9\u6784\u6210\u8fd9\u4e2a\u8ddd\u79bb\uff0c\u6240\u4ee5\u8fd9\u5c31\u5f15\u5165\u4e86\u8fd9\u4e2a\u95ee\u9898\u7684game tree</p> <p>\u5c31\u662f\u9009\u53d6\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\uff0c\u7136\u540e\u901a\u8fc7\u68c0\u67e5\u8fd9\u4e2a\u65b0\u52a0\u5165\u7684\u8282\u70b9\u4e0e\u5176\u4ed6\u5df2\u5b58\u5728\u8282\u70b9\u6784\u6210\u7684\u8ddd\u79bb\u662f\u5426\u5728\u539f\u8ddd\u79bb\u96c6\u5408\u4e2d\uff0c\u5728\u5c31\u5220\u6389\uff0c\u4e0d\u5728\u5c31\u526a\u679d\uff0c\u526a\u679d\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u9700\u8981\u628a\u52a0\u5165\u975e\u6cd5\u8282\u70b9\u6240\u5220\u6389\u7684\u8ddd\u79bb\u52a0\u56de\u6765</p> </li> <li> <p>\u8fc7\u7a0b</p> </li> </ul> <p></p>"},{"location":"notes/cs/algorithm/backtracking.html#stick-problem","title":"Stick Problem","text":"<p>Idea:</p>"},{"location":"notes/cs/algorithm/backtracking.html#coding","title":"Coding","text":"<pre><code>    bool Backtracking (int i) { // i \u4e00\u822c\u662f\u8868\u793a\u5f53\u524d\u7684\u7b54\u6848\u96c6\u5408\u4e2d\u5df2\u7ecf\u5305\u542bi\u4e2a\u5143\u7d20\u4e86\n        Found = false;\n        if (i &gt; N)\n            return true;  // solved with (x1, ..., xN)\n        for (each xi in Si) {\n            // check if satisfies the restriction R\n            OK = Check((x1, ..., xi), R);  // pruning \u5047\u8bbe\u6211\u52a0\u5165xi\u540e\u67e5\u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n            if (OK) {\n                Count xi in; // \u5c06xi\u52a0\u5165\u7b54\u6848\u96c6\u5408\n                Found = Backtracking(i + 1);\n                if (!Found)\n                    Undo(i);  // recover to (x1, ..., x{i-1}) // \u5982\u679c\u6211\u52a0\u5165xi\u540e\u6ca1\u6709\u627e\u5230\u89e3\uff0c\u90a3\u4e48\u5c31\u6062\u590d\u5230\u52a0\u5165xi\u524d\u7684\u72b6\u6001\n            }\n            if (Found) break; \n        }\n        return Found;\n    }\n</code></pre>"},{"location":"notes/cs/algorithm/backtracking.html#minimax-strategy","title":"Minimax Strategy","text":"<p>Question</p> <p>\u4ee5\u4e95\u5b57\u68cb\u4e3a\u4f8b</p> <p>Minimax Strategy \u4e2d\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u601d\u60f3\u5728\u4e8e\u535a\u5f08\uff0c\u5373\u5728\u5f53\u524d\u72b6\u6001\u4e0b\uff0c\u6211\u4f5c\u4e3a\u5f53\u524d\u73a9\u5bb6\uff0c\u6211\u5e94\u8be5\u600e\u4e48\u8d70\uff0c\u624d\u80fd\u4f7f\u5f97\u6211\u8d62\uff0c\u800c\u8fdb\u884c\u64cd\u4f5c\u7684\u5224\u65ad\u6761\u4ef6\u4e4b\u4e00\u5c31\u662f\u5bf9\u5f53\u524d\u72b6\u6001\u7684\u8bc4\u4f30\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u8bc4\u4f30\u51fd\u6570\u4e3aevaluation function</p> <p>\u6bd4\u5982\u8fd9\u6837\u4e00\u79cd\u8bc4\u4f30\u51fd\u6570\uff1a</p> \\[ f(P) = W_{computer} - W_{human}  \\] \\[ \\text{where } W \\text{ is the number of potential wins at position } P \\] <p>\u5728\u4e95\u5b57\u68cb\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9e\u4f8b\u5316\uff1a</p> <ul> <li>\u5c06\\(W_{computer}\\)\u5b9a\u4e49\u4e3a\u5047\u5982\u73b0\u5728\u4eba\u7c7b\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u8ba1\u7b97\u673a\u53ef\u80fd\u7684\u83b7\u80dc\u65b9\u5f0f</li> </ul> <p>\u8fd9\u6837\u6211\u4eec\u5728\u6bcf\u4e00\u6b65\u64cd\u4f5c\u4e4b\u540e\uff0c\u90fd\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5f53\u524d\u72b6\u6001\u7684\u8bc4\u4f30\u503c\uff0c\u8fd9\u4e2a\u8bc4\u4f30\u503c\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u6211\u4eec\u535a\u5f08\u6811\u7684\u8282\u70b9</p> <p>Key of Minimax Strategy</p> <ul> <li>\u5728\u535a\u5f08\u6811\u4e2d\uff0c\u6211\u4eec\u603b\u662f\u5047\u8bbe\u5bf9\u65b9\u662f\u7406\u6027\u7684\uff0c\u5373\u5bf9\u65b9\u603b\u662f\u4f1a\u505a\u51fa\u6700\u4f18\u7684\u9009\u62e9</li> </ul> <p>\u8fd9\u5c31\u662f Minimax \u7684\u6765\u6e90\uff1a</p> <p>\u5728\u81ea\u5df1\u9009\u62e9\u7684\u65f6\u5019\u6211\u4eec\u505a\\(f(P)\\)\u7684\u6700\u5927\u5316\uff0c\u5728\u5bf9\u65b9\u9009\u62e9\u7684\u65f6\u5019\u6211\u4eec\u505a\\(f(P)\\)\u7684\u6700\u5c0f\u5316</p> Example <p></p>"},{"location":"notes/cs/algorithm/backtracking.html#alpha-beta-pruning","title":"Alpha-Beta Pruning","text":"<p>\\(\\alpha - \\beta\\) Pruning \u662f Minimax \u7684\u4f18\u5316\u7248\u672c\uff0c\u4ed6\u901a\u8fc7\u526a\u679d\u7684\u65b9\u5f0f\u5c06\u535a\u5f08\u6811\u7684\u641c\u7d22\u89c4\u6a21\u9650\u5236\u5728\\(O(\\sqrt{N})\\)\u4e2a\u8282\u70b9</p> <ul> <li>\\(\\alpha\\)\u526a\u679d\uff1a\u5728\u5982\u4e0b\u7684\u72b6\u6001\u4e0b\u6211\u4eec\u4e0d\u9700\u8981\u5728\u8fdb\u884c<code>?</code>\u6811\u7684\u6c42\u7b97\u4e86</li> </ul> <ul> <li>\u5728<code>? &gt;= 40(sibling)</code>\u65f6\uff0c<code>min</code>\u8282\u70b9\u4e0d\u4f1a\u91c7\u7528\u8fd9\u4e2a\u5927\u4e8e\u56db\u5341\u7684\u503c</li> <li>\u5728<code>? &lt; 40(sibling)</code>\u65f6\uff0c<code>min</code>\u8282\u70b9\u867d\u7136\u4f1a\u66f4\u65b0\uff0c\u4f46\u662f<code>max</code>\u8282\u70b9\u4e0d\u4f1a\u91c7\u7528</li> </ul> <ul> <li>\\(\\beta\\)\u526a\u679d\uff1a\u5728\u5982\u4e0b\u7684\u72b6\u6001\u4e0b\u6211\u4eec\u4e0d\u9700\u8981\u5728\u8fdb\u884c<code>?</code>\u6811\u7684\u6c42\u7b97\u4e86</li> </ul> <ul> <li>\u5728<code>? &lt;= 68(sibling)</code>\u65f6\uff0c<code>max</code>\u8282\u70b9\u4e0d\u4f1a\u91c7\u7528\u8fd9\u4e2a\u5c0f\u4e8e\u7b49\u4e8e68\u7684\u503c</li> <li>\u5728<code>? &gt; 68(sibling)</code>\u65f6\uff0c<code>max</code>\u8282\u70b9\u867d\u7136\u4f1a\u66f4\u65b0\uff0c\u4f46\u662f<code>min</code>\u8282\u70b9\u4e0d\u4f1a\u91c7\u7528</li> </ul>"},{"location":"notes/cs/algorithm/dp.html","title":"Dynamic Programming","text":"<p> \u7ea6 1676 \u4e2a\u5b57  91 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>TODO:\u611f\u89c9ads\u8bfe\u7a0b\u4e2d\u7684dp\u8bb2\u7684\u6709\u70b9\u7b80\u5355\u6709\u70b9\u5c11\uff0c\u5047\u671f\u65f6\u51c6\u5907\u591a\u5b66\u4e00\u70b9</p>"},{"location":"notes/cs/algorithm/dp.html#intro","title":"Intro","text":"<p>\u6838\u5fc3\u601d\u60f3\u662f\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u901a\u8fc7\u5c06\u8ba1\u7b97\u7ed3\u679c\u5b58\u50a8\u5728\u8868\u683c\u4e2d\uff0c\u4ece\u800c\u5728\u9700\u8981\u65f6\u5feb\u901f\u68c0\u7d22\u3002</p> Fibonacci <p>\u8ba1\u7b97Fibonacci\u6570\u5217\uff1a\u6211\u4eec\u5728\u9012\u5f52\u65f6\u4f1a\u5bf9\u76f8\u540c\u7684\u6570\u503c\u8fdb\u884c\u91cd\u590d\u8ba1\u7b97\uff0c\u6240\u4ee5\u5c06\u6bcf\u4e2an\u7684Fibonacci\u6570\u5217\u7684\u503c\u5b58\u50a8\u5728\u8868\u683c\u4e2d</p> <p>\u4f46\u662f\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u5b58\u4e0b\u6700\u8fd1\u4e24\u6b21\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u8fd9\u6837\u53ea\u9700\u8981\\(O(n)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6</p> Fibonacci <pre><code>int fibonacci(int n) {\n    int i, Last, NextToLast, Answer;\n    if(n == 0) return 1;\n    Last = NextToLast = 1;\n    for(i = 2; i &lt;= n; i++) {\n        Answer = Last + NextToLast;\n        NextToLast = Last; Last = Answer;//\u66f4\u65b0\u6700\u8fd1\u7684\u4e24\u6b21\u8ba1\u7b97\u7ed3\u679c\n    }\n    return Answer;\n}\n</code></pre>"},{"location":"notes/cs/algorithm/dp.html#design","title":"Design","text":"<ul> <li> <p>\u7528\u72b6\u6001\u51fd\u6570\u8868\u793a\u4e00\u4e2a\u5b50\u95ee\u9898</p> </li> <li> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u8868\u793a\u5b50\u95ee\u9898\u4e4b\u95f4\u7684\u9012\u63a8\u5173\u7cfb</p> </li> </ul> <p>\u6761\u4ef6\uff1a</p> <ul> <li>\u95ee\u9898\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u82e5\u5e72\u5b50\u95ee\u9898</li> <li>\u5b50\u95ee\u9898\u6709\u91cd\u53e0</li> <li>\u6700\u4f18\u5b50\u7ed3\u6784\uff1a\u5f53\u524d\u95ee\u9898\u7684\u6700\u4f18\u89e3\u53ea\u4f9d\u8d56\u4e8e\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3</li> </ul>"},{"location":"notes/cs/algorithm/dp.html#examples","title":"Examples","text":""},{"location":"notes/cs/algorithm/dp.html#ordering-matrix-chain-multiplication","title":"Ordering Matrix Chain Multiplication","text":"<p>\u4e24\u4e2a\u77e9\u9635\u7684\u4e58\u6cd5\u7684\u57fa\u672c\u590d\u6742\u5ea6\u662f\\(O(n^3)\\)</p> <p>\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e32\u8fde\u7eed\u7684\u77e9\u9635\u94fe\u4e58\u6cd5\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u77e9\u9635\u94fe\u987a\u5e8f\uff0c\u5176\u8ba1\u7b97\u590d\u6742\u5ea6\u53ef\u4ee5\u76f8\u5dee\u5f88\u5927</p> <p>Different Order</p> <p> </p> <p>      \u6211\u4eec\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u627e\u51fa\u6700\u4f18\u7684\u77e9\u9635\u4e58\u6cd5\u987a\u5e8f\uff0c\u4f7f\u5f97\u603b\u7684\u8ba1\u7b97\u91cf\u6700\u5c0f\u3002 <p>\u7b56\u7565\u662f\u4f18\u5148\u8ba1\u7b97\u89c4\u6a21\u8f83\u5c0f\u7684\u77e9\u9635\u4e58\u6cd5\u3002 </p> <p>Solution</p> <p> \u7528\u6253\u62ec\u53f7\u7684\u65b9\u5f0f\u8868\u793a\u77e9\u9635\u94fe\u7684\u5212\u5206\uff0c\u5982\u679c\u62ec\u53f7\u662f\u5728\u7b2c\\(i\\)\u4e2a\u77e9\u9635\u7684\u53f3\u4fa7\uff0c\u6211\u4eec\u5c31\u8fd9\u6837\u8868\u793a\uff1a </p> \\[ M_{1,N} = M_1 \\text{...} M_N = M_{1,i} \\times M_{i+1,N} \\] <p> \u8fd9\u4e5f\u662f\u52a8\u6001\u89c4\u5212\u548c\u5206\u6cbb\u6cd5\u7684\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u5c31\u662f\u76f4\u63a5\u60f3\u4e00\u4e0b\u6700\u540e\u4e00\u6b65\u7684\u8ba1\u7b97\uff0c\u8fd9\u91cc\u7531\\(M_{1,i}\\)\u548c\\(M_{i+1,N}\\)\u7684\u8ba1\u7b97\u7ed3\u679c\u76f8\u4e58\u5f97\u5230\\(M_{1,N}\\)\u5c31\u662f\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u5c31\u662f\u53bb\u627e\u6700\u597d\u7684\\(i\\) </p> <p> \u5728\u8fd9\u91cc\u6211\u4eec\u89c4\u5b9a\u72b6\u6001\u65b9\u7a0b\u4e3a\\(F[k][i]\\)\uff0c\u8868\u793a\u7531\u7b2c\\(i\\)\u4e2a\u77e9\u9635\u5230\u7b2c\\(i+k\\)\u4e2a\u77e9\u9635\u76f8\u4e58\u7684\u8ba1\u7b97\u65f6\u95f4\u5f00\u9500\uff0ck\u8868\u793a\u7684\u662f\u77e9\u9635\u94fe\u7684\u957f\u5ea6\uff0c\u8fd9\u6837\u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u5148\u5bf9k\u8fdb\u884c\u904d\u5386\uff08\u5982\u679c\u5148\u5bf9i\uff0cj\u904d\u5386\uff0c\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8ba1\u7b97\u524d\u534a\u90e8\u5206\u65f6\uff0c\u540e\u534a\u90e8\u5206\u6839\u672c\u8fd8\u6ca1\u6709\u8ba1\u7b97\uff09\u8fd9\u4e2a\u904d\u5386\u662f\u4e25\u683c\u6309\u7167\u5b50\u95ee\u9898\u89c4\u6a21\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8fdb\u884c\u7684 </p> <p>\u5c0f\u6280\u5de7</p> <p> \u6211\u4eec\u5728\u8bbe\u8ba1\u72b6\u6001\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u6309\u7167ppt\u4e2d\u7684i\u5230j\u7684\u601d\u8def\uff0c\u4f46\u662f\u8fd9\u6837\u5bf9\u4ee3\u7801\u8bbe\u8ba1\u6765\u8bf4\u4e0d\u662f\u5f88\u53cb\u597d\uff0cyy\u54e5\u5efa\u8bae\u6211\u4eec\u5728\u72b6\u6001\u8f6c\u79fb\u51fd\u6570\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570k\u8868\u793a\u95ee\u9898\u7684\u89c4\u6a21\uff0c\u8fd9\u6837\u5728\u4ee3\u7801\u4e2d\u6700\u5916\u5c42\u7684\u904d\u5386\u5c31\u662f\u5bf9\u95ee\u9898\u7684\u89c4\u6a21\u8fdb\u884c\u653e\u5927\u7684\u8fc7\u7a0b\u4e86 Brute Force <p>\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u66b4\u529b\u65b9\u6cd5\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u77e9\u9635\u94fe\u5212\u5206\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u79cd\u5212\u5206\u65b9\u5f0f\u7684\u8ba1\u7b97\u65f6\u95f4\u5f00\u9500\uff0c\u7136\u540e\u627e\u51fa\u6700\u5c0f\u503c\uff0c\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u6700\u540e\u5f97\u5230\u7684\u603b\u7684\u8ba1\u7b97\u6b21\u6570\u662f\uff1a</p> \\[ b_n = \\sum_{k=1}^{n-1} b_k b_{n-k} \\] <p>\u8fd9\u4e5f\u662f\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u4ed6\u8868\u793a\u7684\u662f\u8ba1\u7b97n\u4e2a\u77e9\u9635\u6240\u9700\u6b21\u6570\uff0c\u8fd9\u4e2a\u8ba1\u7b97\u590d\u6742\u5ea6\u662f\\(O(\\frac{4^n}{n^{3/2}})\\)(Catalan Number)\uff0c\u663e\u7136\u662f\u4e0d\u53ef\u63a5\u53d7\u7684</p> <p> \u6211\u4eec\u5728\u4e4b\u524d\u7684\u601d\u8def\u4e2d\u63d0\u5230\u4e86\uff0c\u95ee\u9898\u7684\u6700\u540e\u4e00\u6b65\u5c31\u662f\u5408\u5e76\u4e24\u4e2a\u77e9\u9635\u94fe\uff0c\u5728\u5408\u5e76\u65f6\uff0c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u6700\u540e\u4e00\u4e2a\u62ec\u53f7\u7684\u4f4d\u7f6e\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u8fdb\u884c\u904d\u5386\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u65b9\u7a0b\uff1a </p> <p> \\[ F[k][i] =\\begin{cases} 0 &amp; \\text{if } k = i\\\\ \\min_{i \\leq k &lt; j} \\{ F[i][k] + F[k+1][j] + r_{i-1} r_k r_j \\} &amp; \\text{if } i &lt; j \\end{cases} \\] <p></p> <p> \u5176\u4e2d\\(r_i\\)\u8868\u793a\u7684\u662f\u7b2c\\(i\\)\u4e2a\u77e9\u9635\u7684\u884c\u6570\u6216\u5217\u6570 \u8fd9\u4e2a\u65b9\u7a0b\u7684\u610f\u601d\u5c31\u662f\uff0c\u6211\u4eec\u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u62ec\u53f7\u4f4d\u7f6e\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u79cd\u5212\u5206\u65b9\u5f0f\u7684\u8ba1\u7b97\u65f6\u95f4\u5f00\u9500\uff1a\u62ec\u53f7\u5de6\u8fb9\u77e9\u9635\u94fe\u5f00\u9500 + \u62ec\u53f7\u53f3\u8fb9\u77e9\u9635\u94fe\u5f00\u9500 + \u5408\u5e76\u4e24\u4e2a\u77e9\u9635\u94fe\u7684\u5f00\u9500 </p> \u987a\u5e8f\u5b9e\u73b0code <pre><code>int MatrixChainOrder(int p[], int n) {\n// p[]\u5b58\u50a8\u77e9\u9635\u7ef4\u5ea6\uff0cp[i-1]\u548cp[i]\u8868\u793a\u7b2ci\u4e2a\u77e9\u9635\u7684\u7ef4\u5ea6\n// n\u662f\u77e9\u9635\u7684\u4e2a\u6570\nint F[n][n];  // F[k][i]\u8868\u793a\u4ece\u7b2ci\u4e2a\u77e9\u9635\u5f00\u59cb\uff0c\u957f\u5ea6\u4e3ak\u7684\u5b50\u94fe\u7684\u6700\u5c0f\u8ba1\u7b97\u4ee3\u4ef7\n\n// \u521d\u59cb\u5316\uff1a\u5355\u4e2a\u77e9\u9635\u7684\u8ba1\u7b97\u4ee3\u4ef7\u4e3a0\nfor(int i = 0; i &lt; n; i++) {\n    F[0][i] = 0;\n}\n\n// \u6309\u7167\u5b50\u95ee\u9898\u89c4\u6a21k\u4ece\u5c0f\u5230\u5927\u8ba1\u7b97\nfor(int k = 1; k &lt; n; k++) {           // k\u8868\u793a\u5b50\u94fe\u957f\u5ea6\n    for(int i = 0; i &lt; n-k; i++) {     // i\u8868\u793a\u5b50\u94fe\u8d77\u59cb\u4f4d\u7f6e\n        F[k][i] = INT_MAX;\n        // \u5c1d\u8bd5\u5728\u4e0d\u540c\u4f4d\u7f6e\u5207\u5206\n        for(int j = i; j &lt; i+k; j++) {\n            // \u8ba1\u7b97\u5728\u4f4d\u7f6ej\u5207\u5206\u7684\u4ee3\u4ef7\n            int cost = F[j-i][i] +              // \u5de6\u534a\u90e8\u5206\u4ee3\u4ef7\n                     F[k-(j-i+1)][j+1] +       // \u53f3\u534a\u90e8\u5206\u4ee3\u4ef7\n                     p[i]*p[j+1]*p[i+k+1];     // \u5408\u5e76\u4e24\u90e8\u5206\u7684\u4ee3\u4ef7\n\n            if(cost &lt; F[k][i]) {\n                F[k][i] = cost;\n            }\n        }\n    }\n}\n\nreturn F[n-1][0];  // \u8fd4\u56de\u6574\u4e2a\u77e9\u9635\u94fe\u7684\u6700\u5c0f\u8ba1\u7b97\u4ee3\u4ef7\n}\n</code></pre> \u8bb0\u5fc6\u5316\u641c\u7d22code <pre><code>#define MAX_N 100\n#define INF 0x3f3f3f3f\n\nint memo[MAX_N][MAX_N];  // \u8bb0\u5fc6\u5316\u6570\u7ec4\nint p[MAX_N];            // \u5b58\u50a8\u77e9\u9635\u7ef4\u5ea6\n\n// \u8ba1\u7b97\u4ece\u7b2ci\u4e2a\u77e9\u9635\u5f00\u59cb\uff0c\u957f\u5ea6\u4e3ak\u7684\u5b50\u94fe\u7684\u6700\u5c0f\u8ba1\u7b97\u4ee3\u4ef7\nint dp(int k, int i) {\n    // \u57fa\u7840\u60c5\u51b5\uff1a\u957f\u5ea6\u4e3a0\uff08\u5355\u4e2a\u77e9\u9635\uff09\n    if(k == 0) return 0;\n\n    // \u5982\u679c\u5df2\u7ecf\u8ba1\u7b97\u8fc7\uff0c\u76f4\u63a5\u8fd4\u56de\u8bb0\u5fc6\u5316\u7684\u7ed3\u679c\n    if(memo[k][i] != -1) return memo[k][i];\n\n    // \u521d\u59cb\u5316\u4e3a\u6700\u5927\u503c\n    int min_cost = INF;\n\n    // \u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u7684\u5207\u5206\u70b9\n    for(int j = i; j &lt; i+k; j++) {\n        int cost = dp(j-i, i) +                // \u5de6\u534a\u90e8\u5206\n                dp(k-(j-i+1), j+1) +         // \u53f3\u534a\u90e8\u5206\n                p[i] * p[j+1] * p[i+k+1];    // \u5408\u5e76\u4ee3\u4ef7\n\n        if(cost &lt; min_cost) {\n            min_cost = cost;\n        }\n    }\n\n    // \u5b58\u50a8\u5e76\u8fd4\u56de\u7ed3\u679c\n    return memo[k][i] = min_cost;\n}\n\nint MatrixChainOrder(int dimensions[], int n) {\n    // \u590d\u5236\u7ef4\u5ea6\u6570\u7ec4\n    for(int i = 0; i &lt; n; i++) {\n        p[i] = dimensions[i];\n    }\n\n    // \u521d\u59cb\u5316\u8bb0\u5fc6\u5316\u6570\u7ec4\u4e3a-1\n    for(int i = 0; i &lt; n; i++) {\n        for(int j = 0; j &lt; n; j++) {\n            memo[i][j] = -1;\n        }\n    }\n\n    // \u8ba1\u7b97\u6574\u4e2a\u77e9\u9635\u94fe\u7684\u6700\u5c0f\u4ee3\u4ef7\n    return dp(n-1, 0);\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^3)=\u72b6\u6001\u6570 O(n^2) \\times \u72b6\u6001\u8f6c\u79fb\u7684\u65f6\u95f4\u5f00\u9500 O(n)\\)</p>"},{"location":"notes/cs/algorithm/dp.html#optimal-binary-search-tree","title":"Optimal Binary Search Tree","text":"<p>\u6700\u4f73\u9759\u6001\u67e5\u627e\u6811</p> <p> \u7ed9\u51faN\u4e2a\u5173\u952e\u5b57\\(w_1, w_2, ..., w_n\\)\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u5173\u952e\u5b57\u7684\u67e5\u627e\u6982\u7387\\(p_1, p_2, ..., p_n\\)\uff0c\u8981\u6c42\u6784\u9020\u4e00\u68f5\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u4f7f\u5f97\u6240\u6709\u5173\u952e\u5b57\u7684\u603b\u67e5\u627e\u6b21\u6570\u6700\u5c0f </p> <p> \u67e5\u627e\u6b21\u6570\u516c\u5f0f\uff1a </p> \\[ T(N) = \\sum_{i=1}^{N} (p_i \\times (depth_i + 1)) \\] <p>Solution</p> <p> \u8fd8\u662f\u6309\u7167\u4e4b\u524d\u7684\u601d\u8def\uff0c\u5728\u8003\u8651\u6700\u540e\u4e00\u6b65\u65f6\uff0c\u6211\u4eec\u8003\u8651\u6700\u540e\u4e00\u6b65\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u67e5\u627e\u6b21\u6570\uff0c\u7136\u540e\u5408\u5e76\uff0c\u5e76\u4e14\u7531\u4e8e\u5408\u5e76\u65f6\u65b0\u589e\u4e86\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u6574\u4e2a\u6811\u7684\u6df1\u5ea6\u90fd\u589e\u52a0\u4e861\uff0c\u56e0\u6b64\u8981\u518d\u52a0\u4e0a\\(p_{\\text{all in this step}}\\)\uff0c\u5e76\u4e14\u8fd9\u4e00\u6b65\u4e5f\u662f\u9700\u8981\u8fdb\u884c\u904d\u5386\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5f97\u5230\u72b6\u6001\u65b9\u7a0b\uff1a </p> \\[ F[N][i] = \\min_{i \\leq k &lt; j} \\{ F[k-i][i] + F[N-k+i-1][k+1] + \\sum_{j=i}^{k} p_j \\} \\] <p> </p>"},{"location":"notes/cs/algorithm/dp.html#floyd-algorithm","title":"Floyd Algorithm","text":"<p>Floyd</p> <p>\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\uff0c\u627e\u5230\u6240\u6709\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84</p> <p>Solution</p> <p>  \u8fd9\u4e2a\u95ee\u9898\u672c\u8d28\u4e0a\u662f\u5728\u89e3\u51b3\u5bf9\u4e8e\u6709\u5411\u56fe\u4e0a\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\uff0c\u7ecf\u8fc7\u600e\u6837\u7684\u8def\u5f84\uff08\u7ecf\u8fc7\u51e0\u4e2a\u4e2d\u8f6c\u70b9\uff09\uff0c\u4f7f\u5f97\u8def\u5f84\u4e0a\u7684\u6743\u91cd\u548c\u6700\u5c0f </p> <p> \u6211\u4eec\u4ece\u6b63\u5e38\u7684\u601d\u8def\u5148\u8fdb\u884c\u8bd5\u63a2\u6027\u7684\u5206\u6790,\u5148\u8003\u8651\u6784\u5efa\u4e00\u4e2a\u666e\u9002\u6027\u7684\u72b6\u6001\u65b9\u7a0b\uff1a\\(F[N][i]\\)\u53d1\u73b0\u5b8c\u5168\u4e0d\u9002\u7528\uff0c\u56e0\u4e3a\u7b54\u6848\u80af\u5b9a\u662f\u7531i\u5230j\u7684\uff0c\u800c\u4e0e\u95ee\u9898\u89c4\u6a21\uff08\u56fe\u7684\u5927\u5c0f\uff09\u65e0\u5173\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u72b6\u6001\u65b9\u7a0b\u4e3a\\(F[i][j]\\)\uff0c\u8868\u793a\u4ecei\u5230j\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6839\u636e\u4e4b\u524d\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u6700\u540e\u7684\u4e2d\u8f6c\u70b9K\uff0c\u5199\u6210\\(F[i][j] = \\min \\{ F[i][k] + F[k][j] \\}\\)\u8fd9\u6837\u7684\u65b9\u7a0b </p> <p>\u4f46\u662f\u9519\u8bef</p> <p>\u56e0\u4e3a\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u6240\u6c42\u89e3\u7684\u4e0d\u518d\u662f\u50cf\u4e4b\u524d\u7684\u77e9\u9635\u94fe\u4e58\u6cd5\u90a3\u6837\u7684\u5e26\u6709\u5e8f\u5217\u6027\u8d28\u7684\u95ee\u9898\uff0c\u800c\u662f\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\uff0c\u8fd9\u4e2a\u8def\u5f84\u53ef\u4ee5\u7ecf\u8fc7\u5f88\u591a\u8282\u70b9\uff08\u95ee\u9898\u89c4\u6a21\u672a\u88ab\u5b9a\u4e49\uff09\uff0c\u56e0\u6b64\u8fd9\u4e2a\u65b9\u7a0b\u65e0\u6cd5\u4fdd\u8bc1\u5b50\u95ee\u9898\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8fdb\u884c\u6c42\u89e3</p> <p> \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u51fd\u6570\u8fdb\u884c\u9650\u5236\uff0c\u9650\u5236\u53c2\u6570\u5c31\u662f\u7ecf\u8fc7\u7684\u4e2d\u8f6c\u70b9\u7684\u4e2a\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6309\u7167\u4e2d\u8f6c\u70b9\u4e2a\u6570\u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u6c42\u89e3\uff0c\u5f97\u5230\u72b6\u6001\u65b9\u7a0b\uff1a </p> \\[ F[k][i][j] = \\min \\{ F[k-1][i][j]\uff0cF[k-1][i][k] + F[k-1][k][j] \\} \\] <p> \u5176\u4e2d\\(F[k][i][j]\\)\u8868\u793a\u7684\u662f\u4ecei\u5230j\uff0c\u7ecf\u8fc7k\u4e2a\u4e2d\u8f6c\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\\(F[k-1][i][j]\\)\u8868\u793a\u7684\u662f\u4ecei\u5230j\uff0c\u4e0d\u7ecf\u8fc7\u7b2ck\u4e2a\u4e2d\u8f6c\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\\(F[k-1][i][k] + F[k-1][k][j]\\)\u8868\u793a\u7684\u662f\u4ecei\u5230k\uff0c\u518d\u4ecek\u5230j\uff0c\u7ecf\u8fc7\u7b2ck\u4e2a\u4e2d\u8f6c\u70b9\u7684\u6700\u77ed\u8def\u5f84 </p>"},{"location":"notes/cs/algorithm/external.html","title":"External Sort","text":"<p> \u7ea6 1628 \u4e2a\u5b57  16 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>\u6570\u636e\u6ca1\u6709\u529e\u6cd5\u5168\u90e8\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u7528\u786c\u76d8\u5b58\u50a8\uff0c\u4eca\u5929\u7684\u6a21\u578b\u57fa\u4e8e\u786c\u76d8\u4e0e\u5185\u5b58\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93</p>"},{"location":"notes/cs/algorithm/external.html#intro","title":"Intro","text":"<p>\u4eca\u5929\u7684\u6a21\u578b\uff1aexternal memory model</p> <p>\u5728\u8fd9\u4e2amodel\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2aCPU\uff0c\u4e00\u4e2aInternal Memory\uff0cwith \\(M\\) cells\uff08\u6bcf\u4e2acell\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e2aitem\uff09\uff0c\u4e00\u4e2aExternal Memory\uff08disk\uff09\uff0c\u7531\u82e5\u5e72\u6761\u78c1\u5e26\uff08tape\uff09\u7ec4\u6210\uff1a</p> <ul> <li>infinite length</li> <li>\u53ea\u652f\u6301sequential access\uff0c\u53ea\u80fd\u4ece\u524d\u5f80\u540e\u8bfb</li> <li> <p>CPU\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u9700\u8981\u5c06\u6570\u636e\u4ecedisk\u8bfb\u5230memory\uff0c\u7136\u540e\u8fdb\u884c\u5904\u7406\uff0c\u5904\u7406\u5b8c\u540e\u518d\u5c06\u6570\u636e\u5199\u56dedisk\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3aI/O</p> <ul> <li>I/O\u8fc7\u7a0b\u4ee5block\u4e3a\u5355\u4f4d\u8fdb\u884c\uff0c\u6bcf\u4e2ablock\u6709\\(B\\)\u4e2aitem</li> <li>I/O cost\uff1a\u603b\u5171\u8bfb\u5199\u7684block\u6570</li> </ul> </li> </ul> <p>\u5728\u8fd9\u91cc\uff1a\\(M\\)\u548c\\(B\\)\u662f\u53c2\u6570\uff0c\u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u901a\u5e38\u6211\u4eec\u5047\u8bbe\\(M \\geq 3B\\)\uff0c\u5e76\u4e14\u8f93\u5165\u89c4\u6a21\\(N &gt;&gt; M\\)</p> <p>scan\uff1a</p> <p>\u6709\\(N\\)\u4e2aitem\uff0c\u9700\u8981\u626b\u63cf\u6240\u6709item</p> <p>\u8fd9\u65f6\u7684cost = \\(O(N/B)\\)\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2acost\u4e3alinear cost\uff08\u800c\u4e0d\u662f\\(O(N)\\)\uff09\uff0c\u4e00\u6b21\u8fd9\u6837\u7684\u626b\u63cf\u79f0\u4e3a\u4e00\u4e2apass</p>"},{"location":"notes/cs/algorithm/external.html#sorting","title":"Sorting","text":"<p>\u91c7\u7528merge sort\u7684\u601d\u8def\u8fdb\u884c\uff0c\u4f46\u662f\u662f\u5bf9disk\u7684\u64cd\u4f5c\u65b9\u6cd5\uff1a</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\\(M=3, B=1\\)\u7684\u4f8b\u5b50\uff1a</p> <p>Example</p> <p> </p> <ul> <li>\u6211\u4eec\u7684\u6bd4\u8f83\u5e76\u4ea4\u6362\u64cd\u4f5c\u662f\u5728memory\u4e2d\u8fdb\u884c\u7684</li> <li>\u78c1\u5e26\u53ea\u80fd\u5b8c\u6210\u987a\u5e8f\u8bfb\u5199\u64cd\u4f5c</li> </ul> <p>\u6b65\u9aa4\uff1a</p> \u7528memory\u5b8c\u6210block\u6392\u5e8fmerge <ol> <li>\u5c06\u7b2c\u4e00\u4e2ablock\u4ece\u78c1\u5e26\u8bfb\u5230memory\u4e2d\u5e76\u5b8c\u6210\u6392\u5e8f</li> <li>\u5c06\u6392\u597d\u540e\u7684block\u6682\u5b58\u5230tape2\u4e2d</li> <li>\u5c06\u7b2c\u4e8c\u4e2ablock\u4ece\u78c1\u5e26\u8bfb\u5230memory\u4e2d\u5e76\u5b8c\u6210\u6392\u5e8f</li> <li> <p>\u5c06\u6392\u597d\u540e\u7684block\u6682\u5b58\u5230tape3\u4e2d</p> <p>\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u78c1\u5e26\u4e0a\u7684block\u5168\u90e8\u8bfb\u5b8c</p> <p>\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u7b2c\u4e00\u6b21pass\uff0c\u6b64\u65f6tape1\u4e2d\u7684\u6570\u636e\u6309blcok\u6392\u597d\u4e86\uff0c\u4ea4\u66ff\u653e\u7f6e\u5728tape2\u548ctape3\u4e2d\uff1a</p> <p> </p> </li> </ol> <p>\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u4e86\u4e24\u4e2a\u78c1\u5e26\u6765\u4ea4\u66ff\u5b58\u50a8\u5185\u5b58\u8f93\u51fa\u7684block\u7ed3\u679c\uff0c\u5c31\u662f\u56e0\u4e3a\u78c1\u5e26\u53ea\u80fd\u987a\u5e8f\u8bfb\u5199\uff0c\u5728merge\u65f6\u5c31\u4f53\u73b0\u51fa\u6765\u4e86</p> <p>merge\u91c7\u7528\u7684\u601d\u8def\u662f\u7528\u5185\u5b58\u4f5c\u4e3a\u6bd4\u8f83\u5668\uff0c\u5c06\u4e24\u4e2atape\u4e2d\u5bf9\u9f50\u7684block\u8fdb\u884c\u6bd4\u8f83\uff0c\u8c01\u5c0f\u8c01\u5199\u5165\u78c1\u5e26\uff0c\u7136\u540e\u6307\u9488\u540e\u79fb\uff1a</p> <p> </p> <p>\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b</p> <p> </p> <p>\u518d\u5bf9\u4e0a\u9762\u8fd9\u5f20\u56fe\u7247\u7684tape\u8fdb\u884c\u4e00\u6b21merge</p> <p>\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b8c\u6210\u4e861+3\u6b21pass\uff1a</p> <ul> <li>1\u6b21pass\uff1a\u7528memory\u5b8c\u6210block\u6392\u5e8f</li> <li>3\u6b21pass\uff1a\u7528\u78c1\u5e26\u5b8c\u6210merge</li> </ul> <p>\u63a8\u5e7f</p> <p>\u5728\u8f93\u5165\u89c4\u6a21\u4e3a\\(N\\)\u65f6\uff0c\u6211\u4eec\u6bcf\u6b21\u5728memory\u4e2d\u5b8c\u6210\u4e00\u4e2ablock\u7684\u6392\u5e8f\uff0c\u4f1a\u8f93\u51fa\u4e00\u4e2arun\uff08\u4e00\u4e2a\u6709\u5e8f\u7684block\uff09\uff0c\u5728\u5c06disk\u5b8c\u5168\u8bfb\u597d\u540e\uff0c\u4ea7\u751f\u4e86\u4e86\\(N/M\\)\u4e2arun\uff0c\u7136\u540e\u8fdb\u884cmerge\uff0c\u6bcf\u6b21merge\u51cf\u5c11\u4e00\u534a\u7684run\uff0c\u76f4\u5230\u53ea\u5269\u4e0b\u4e00\u4e2arun\u4e3a\u6b62\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u7ed3\u679c</p> \\[ \\text{pass} = 1 + \\lceil \\log_2(\\frac{N}{M}) \\rceil \\] <p>\u56e0\u6b64\u603b\u7684I/O cost\u4e3a\uff1a</p> \\[ \\text{I/O cost} = O(\\frac{N}{B} \\cdot \\log_2(\\frac{N}{M})) \\] <p>\u600e\u6837\u51cf\u5c11pass\u7684\u6b21\u6570\uff1f</p>"},{"location":"notes/cs/algorithm/external.html#k-way-merge","title":"K-way Merge","text":"<p>\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\u662f\u5728merge\u65f6\uff0c\u589e\u52a0\u78c1\u5e26\u7684\u4e2a\u6570\uff0c\u5c06\u539f\u5148\u76842\u4e2a\u78c1\u5e26\u6539\u4e3a\\(k\\)\u4e2a\u78c1\u5e26\uff0c\u8fd9\u6837\u6bcf\u6b21merge\u65f6\uff0crun\u7684\u6570\u91cf\u9664\u4ee5\\(k\\)\uff0c\u539f\u5148\u7684\\(log_2\\)\u5c31\u53d8\u6210\u4e86\\(log_k\\)\uff0c\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86pass\u7684\u6b21\u6570</p> <p>\u7406\u60f3\u60c5\u51b5\u4e0b\u662f\u50cf\u4e0a\u9762\u8fd9\u6837\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5728\u8fdb\u884cmerge\u65f6\u9700\u8981\u4f7f\u7528memory\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u6b64\u8fd8\u8981\u8003\u8651memory\u7684\u9650\u5236\uff1a</p> <p>\u5728merge\u65f6\uff0c\u6211\u4eec\u8bfb\u5165\\(k\\)\u4e2ablock\uff0c\u5bf9block\u6392\u597d\u5e8f\u540e\u5c06\u7ed3\u679c\u5b58\u50a8\u5230buffer\u4e2d\uff0c\u7136\u540e\u5199\u5165\u78c1\u5e26\uff1a</p> <p>\u4f46\u662fbuffer\u6ee1\u4e86\u540e\uff0c\u9700\u8981\u5c06buffer\u4e2d\u7684\u6570\u636e\u5199\u5165\u78c1\u5e26\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5f88\u6162\uff0c\u4e3a\u4e86\u4e0d\u8ba9\u6392\u5e8f\u505c\u6b62\uff0c\u6211\u4eec\u518d\u7559\u51fa\u4e00\u4e2abuffer\uff0c\u4f5c\u4e3aI/O buffer\uff0c\u8fd9\u4e2a\u4e00\u8fb9\u7ee7\u7eed\u6392\u5e8f\u4e00\u8fb9I/O\uff1a</p> <p>k's limit</p> <p>\u4ece\u4e0a\u9762\u7684\u63cf\u8ff0\u4e2d\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u81f3\u5c11\u9700\u8981k+2\u4e2ablock\uff0c\u7531\u4e8e\u6211\u4eec\u6700\u5927\u53ea\u6709\\(M\\)\u5927\u5c0f\u7684memory\uff0c\u6240\u4ee5\u6709\u4e0d\u7b49\u5f0f\uff1a</p> \\[ (k + 2) \\cdot B  \\leq M \\] <p>\u56e0\u6b64\uff0c\\(k\\)\u7684\u6700\u5927\u503c\u4e3a\\(M/B - 2\\)</p> <p>\u56e0\u6b64\uff0ck-way merge\u7684pass\u6b21\u6570\u4e3a\uff1a</p> \\[ \\text{pass} = 1 + \\lceil \\log_{\\frac{M}{B}-2}(\\frac{N}{M}) \\rceil \\] <p>\u56e0\u6b64\u603b\u7684I/O cost\u4e3a\uff1a</p> \\[ \\text{I/O cost} = O(\\frac{N}{B} \\cdot \\log_{\\frac{M}{B}}(\\frac{N}{M})) \\] <p>\u5728\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\uff0cB\u8d8a\u5927\u65f6\uff0c\u6bcf\u6b21\u7684linear cost\u8d8a\u5c0f\uff08\u505a\u4e00\u6b21pass\u7684cost\u53d8\u5c0f\uff09\uff0c\u4f46\u662f\u5e95\u6570\u4e5f\u4f1a\u53d8\u5c0f\uff0c\u5bfc\u81f4\u540e\u9762\u7684log\u53d8\u5927\uff08pass\u53d8\u591a\uff09\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u4e2atrade-off</p>"},{"location":"notes/cs/algorithm/external.html#replacement-selection","title":"Replacement Selection","text":"<p>\u521a\u624d\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u6bcf\u6b21\u5408\u5e76\u591a\u4e2arun\u6765\u51cf\u5c11pass\u6b21\u6570\uff0c\u8fd9\u91cc\u91c7\u7528\u7684\u65b9\u6cd5\u662f\u589e\u957frun\u7684\u957f\u5ea6</p> <p>\u5728\u8fd9\u91cc\u91c7\u7528\u7f6e\u6362\u9009\u62e9\u7684\u65b9\u6cd5\u6765\u751f\u6210run\uff08myc\u8001\u5e08\u8bf4\u8fd9\u662f\u4e00\u4e2a\u5f88\u5de5\u7a0b\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4e5f\u5c31\u76f4\u63a5\u901a\u8fc7\u4f8b\u5b50\u5199\u7b97\u6cd5\u64cd\u4f5c\u7684\u6b65\u9aa4\u4e86\uff09</p> <p>\u4f8b\u5b50</p> <p>\u8fd9\u91cc\u6211\u4eec\u8fd8\u662f\u7528M=3, B=1\u7684\u4f8b\u5b50</p> <p> </p> <p>\u65b9\u6cd5\u5c31\u662f\u901a\u8fc7\u7528\u5185\u5b58\u751f\u6210\u4e00\u4e2a\u6700\u5c0f\u5806\uff0c\u521d\u59cb\u60c5\u51b5\u4e0b\u5c06\u5806\u9876\u5143\u7d20\u653e\u5165tape\u4e2d\uff0c\u7136\u540e\u4ece\u5806\u4e2d\u5220\u9664\u5806\u9876\u5143\u7d20\uff0c\u8bfb\u5165\u65b0\u7684\u5143\u7d20\uff1a</p> <ul> <li>\u5982\u679c\u65b0\u7684\u5143\u7d20\u5c0f\u4e8etape\u4e2d\u7684\u672b\u5c3e\u5143\u7d20\uff0c\u65b0\u5143\u7d20\u53d8\u7ea2\u4e0d\u518d\u5904\u7406\uff0c\u540c\u65f6\u7ef4\u62a4\u5806</li> <li>\u5f53\u5806\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u4e3a\u7ea2\u65f6\uff0c\u7ed3\u675f\u5f53\u524drun\uff0c\u5f00\u59cb\u4e0b\u4e00\u4e2arun</li> <li>\u5f53\u6240\u5269\u4f59\u7684\u5143\u7d20\u5c0f\u4e8e\u7b49\u4e8e\u5185\u5b58\u5927\u5c0f\u65f6\uff0c\u76f4\u63a5\u5199\u5165\u65b0\u7684run</li> </ul> \u521d\u59cb\u5e38\u89c4\u63a8\u5165run\u53d8\u7ea2\u7ed3\u679c <p> </p> <p> </p> <p> </p> <p>\u6ce8\u610f\u8fd9\u91cc\u53d8\u7ea2\u4e4b\u540e\u4ecd\u7136\u662f\u8981\u505a\u4e00\u6b21\u7ef4\u62a4+\u63a8\u5165\u7684 </p> <p> </p> <p>\u8fd9\u4e2a\u65b9\u6cd5\u5f97\u5230\u7684\u5e73\u5747\u610f\u4e49\u7684run\u957f\u5ea6\u4e3a\\(2M\\)\uff0c\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u521d\u59cb\u6761\u4ef6\u6bd4\u8f83\u6709\u5e8f\u7684\u6570\u636e\uff0crun\u4f1a\u975e\u5e38\u957f</p>"},{"location":"notes/cs/algorithm/external.html#reduce-merge-time","title":"Reduce Merge Time","text":"<p>\u5229\u7528\u4e86\u4e00\u4e0b\u79bb\u6563\u6570\u5b66\u4e2d\u5b66\u4e60\u7684huffman\u7f16\u7801\uff0c\u5148\u5c06\u8f83\u77ed\u7684run\u8fdb\u884c\u5408\u5e76</p> <p>\u7136\u540e\u8ba1\u7b97\u5408\u5e76\u65f6\u957f\uff1a</p> <p>\\((2+4)*3 + 5*2 + 15*1 = 39\\)</p> <p>\u539f\u5148\u7684\u65b9\u6cd5\uff08k = 2\uff09\u9700\u8981\u5c06\u6bcf\u4e00\u4e2arun\u90fd\u8dd1\u4e24\u904d\uff0c\u9700\u898152</p>"},{"location":"notes/cs/algorithm/external.html#polyphase-merge","title":"Polyphase Merge","text":"<p>\u521a\u521a\u8bf4\u7684k-way merge\uff0c\u9700\u89812k\u4e2a\u78c1\u5e26</p> <p>\u8fd9\u91cc\u4f1a\u8bb2\u89e3\u4e00\u79cd\u7b97\u6cd5\uff0c\u4f7f\u7528k+1\u4e2a\u78c1\u5e26\u5b8c\u6210merge</p> <p>\u5728\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2ak=2\u7684\u4f8b\u5b50</p> <p>\u89c4\u5f8b\u603b\u7ed3\uff1a</p> <p>\u63a8\u5e7f\u5230k=3\u65f6\uff1a</p> <p>\u6ce8\u610f</p> <p>\u8fd9\u91cc\u53ef\u80fd\u6709\u4e9b\u4e0d\u6e05\u6670\uff0cmyc\u8001\u5e08\u5728\u4e0a\u8bfe\u65f6\u6ca1\u6709\u8bf4\u660e\\(k &gt; 2\\)\u65f6\u521d\u59cb\u60c5\u51b5\u7684\u5212\u5206\uff0c\u6211\u5728\u9489\u9489\u95ee\u4e86\u4e00\u4e0b\uff1a</p> <p>\u6211\u7684\u95ee\u9898\u662f\uff1a\u50cfk=2\u65f6\uff0c\u6211\u4eec\u901a\u8fc7\u5bf9\\(F_N\\)\u7684\u5212\u5206\uff0c\u5f97\u5230\u4e86\\(F_N = F_{N-1} + F_{N-2}\\)\u5e76\u5c06\u5176\u62c6\u5206\u6210\u5230\u4e86t2\u548ct3\u4e2d\uff0c\u90a3\u4e48k=3\u65f6\uff0c\u4e3a\u4ec0\u4e48\u62c6\u5206\u51fa\u6765\u7684\u7ed3\u679c\u52a0\u548c\u4e0d\u662f\\(F_N\\)\uff1f</p> <p>\u4ed6\u7684\u56de\u7b54\u662f\uff1a</p> <p>\u5728\\(k&gt;2\\)\u65f6\uff0c\u6211\u4eec\u7684\u521d\u59cb\u6570\u91cf\u5e76\u4e0d\u662f\\(F_N\\)\uff0c\u800c\u662ft1+t2+t3\u8fd9\u4e9btape\u4e2d\u7684run\u4e4b\u548c\uff08\u5982\u679c\u6211\u4eec\u62e5\u6709\u7684run\u7684\u6570\u91cf\u8fbe\u4e0d\u5230\u8fd9\u4e2a\u6570\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0dummy run\u6765\u5b9e\u73b0\uff09</p> <p>\u8fd9\u4e00\u70b9\u5728\u63a5\u4e0b\u6765\u7684\u4efb\u610f\u6570\u91cf\u63a8\u5e7f\u4e2d\u540c\u6837\u9002\u7528</p> <p>\u63a8\u5e7f\u5230\\(\\forall k\\)\uff1a</p>"},{"location":"notes/cs/algorithm/gdy.html","title":"Greedy Algotithms","text":"<p> \u7ea6 1405 \u4e2a\u5b57  82 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"notes/cs/algorithm/gdy.html#intro","title":"Intro","text":"<p>\u89e3\u51b3\u6700\u4f18\u95ee\u9898:</p> <ul> <li>\u4f18\u5316\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u7ec4\u7ea6\u675f\u6761\u4ef6(constraints)\uff0c\u548c\u4e00\u4e2a\u4f18\u5316\u51fd\u6570(optimization function)\uff0c\u79f0\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\u7684\u89e3\u4e3a\u53ef\u884c\u89e3(feasible solution)\uff0c\u79f0\u4f7f\u5f97\u4f18\u5316\u51fd\u6570\u53d6\u5f97\u6700\u4f18\u503c\u7684\u53ef\u884c\u89e3\u4e3a\u6700\u4f18\u89e3(optimal solution)\u3002</li> <li>\u8d2a\u5fc3\u7b97\u6cd5\uff1a\u901a\u8fc7\u4e00\u7cfb\u5217\u5c40\u90e8\u6700\u4f18\u7684\u9009\u62e9\uff0c\u671f\u671b\u80fd\u591f\u5bfc\u81f4\u5168\u5c40\u6700\u4f18\u89e3\u3002<ul> <li>\u8d2a\u5fc3\u7b97\u6cd5\u901a\u5e38\u662f\u81ea\u9876\u5411\u4e0b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u4f5c\u51fa\u7684\u51b3\u7b56\u5728\u540e\u9762\u662f\u4e0d\u5141\u8bb8\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u8981\u786e\u4fdd\u6bcf\u4e00\u6b65\u7684\u9009\u62e9\u90fd\u662f\u6700\u4f18\u7684\u3002</li> <li>\u53ea\u6709\u5f53\u5c40\u90e8\u6700\u4f18=\u5168\u5c40\u6700\u4f18\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u624d\u80fd\u4fdd\u8bc1\u5f97\u5230\u6700\u4f18\u89e3\u3002</li> <li>\u5f88\u591a\u65f6\u5019\u8d2a\u5fc3\u627e\u4e0d\u5230\u6700\u4f18\u89e3\uff0c\u4f46\u662f\u53ef\u4ee5\u7528\u8d2a\u5fc3\u627e\u5230\u4e00\u4e2a\u5c40\u90e8\u4f18\u89e3\u4f5c\u4e3a\u526a\u679d\u7684\u53c2\u7167\u7269</li> </ul> </li> </ul> <p>\u8d2a\u5fc3\u7b97\u6cd5\u7684\u6982\u5ff5\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u662fyy\u54e5\u8bf4\u8fc7\uff0c\u5f80\u5f80\u5b9a\u4e49\u7b80\u5355\u7684\u4e1c\u897f\u5e94\u7528\u8d77\u6765\u4f1a\u6bd4\u8f83\u96be\uff0c\u56e0\u4e3a\u7f3a\u5c11\u56fa\u5b9a\u7684\u8303\u5f0f\uff0c\u4f46\u662f\u5728\u7b97\u6cd5\u7814\u7a76\u4e2d\uff0c\u8d2a\u5fc3\u6cd5\u6709\u7740\u5e7f\u6cdb\u7684\u4f7f\u7528\uff0c\u5c24\u5176\u662f\u5728\u4eba\u5de5\u667a\u80fd\u7b97\u6cd5\u4e2d\u6c42\u89e3\u7ec4\u5408\u4f18\u5316\u65f6\u5341\u5206\u5e38\u89c1\u3002</p>"},{"location":"notes/cs/algorithm/gdy.html#example","title":"Example","text":""},{"location":"notes/cs/algorithm/gdy.html#activity-selection","title":"Activity Selection","text":"<p>\u95ee\u9898\u63cf\u8ff0</p> <p>     \u7ed9\u5b9a\u4e00\u7ec4\u6d3b\u52a8\u96c6\\(S = \\{a_1, a_2, \\cdots, a_n\\}\\)\uff0c\u6bcf\u4e2a\u6d3b\u52a8\\(a_i\\)\u90fd\u6709\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4\\(s_i\\)\u548c\u4e00\u4e2a\u7ed3\u675f\u65f6\u95f4\\(f_i\\)\uff0c\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u8fd9\u4e9b\u6d3b\u52a8\u6309\u7167\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\uff0c\u5373\\(f_1 \\leq f_2 \\leq \\cdots \\leq f_n\\)\u3002\u73b0\u5728\u8981\u6c42\u9009\u51fa\u4e00\u4e2a\u6700\u5927\u7684\u76f8\u4e92\u517c\u5bb9\u7684\u6d3b\u52a8\u5b50\u96c6\u3002 </p> <p>\u6211\u4eec\u5148\u6765\u7528DP\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a</p> <p>DP Solution</p> <p>     DP\u7684\u601d\u8def\u5c31\u662f\u4e00\u79cd\u7c7b\u4f3c\u904d\u5386\u7684\u601d\u8def\uff0c\u5b9a\u4e49\\(c_{ij}\\)\u4e3a\u6d3b\u52a8\\(a_i\\)\u548c\\(a_j\\)\u4e4b\u95f4\u7684\u6700\u5927\u517c\u5bb9\u6d3b\u52a8\u5b50\u96c6\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a </p> \\[ c_{ij} = \\max_{ak \\in S} (c_{ik} +  c_{kj} + 1, c_{ij}) \\] <p>\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n^3)\\)\uff0c\u56e0\u4e3a\u9700\u8981\u904d\u5386\\(i, j, k\\)\u4e09\u4e2a\u53d8\u91cf\u3002</p> \u4ee3\u7801 <pre><code>vector&lt;cevtor&lt;int&gt;&gt; c(n, vector&lt;int&gt;(n, 0));\n\nfor (int len = 2; len &lt;= n; len++&gt;) {\n    for (int i = 0; i &lt;= n - len; i++) {\n        int j = i + len - 1;\n        c[i][j] = 0;\n        for(int k = i+1; k &lt; j; k++) {\n            if (s[k] &gt;= f[i] &amp;&amp; f[k] &lt;= s[j]) {// \u6d3b\u52a8k\u5728\u6d3b\u52a8i\u548c\u6d3b\u52a8j\u4e4b\u95f4\n                c[i][j] = max(c[i][j], c[i][k] + c[k][j] + 1);\n            }\n        }\n    }\n}\n</code></pre> <p>     \u6240\u4ee5\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u66f4\u597d\u7684\u7b97\u6cd5\uff0c\u8fd9\u91cc\u7ed9\u51fa\u7684\u8d2a\u5fc3\u7b97\u6cd5\u662f\u9009\u62e9\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8\uff08\u8fd9\u91cc\u5206\u522b\u5426\u5b9a\u4e86\u9009\u62e9\u6700\u65e9\u5f00\u59cb\u3001\u9009\u62e9\u6700\u77ed\u6d3b\u52a8\u3001\u9009\u62e9\u6700\u5c11\u51b2\u7a81\u6d3b\u52a8\u7684\u65b9\u6cd5\uff0c\u627e\u5230\u53cd\u4f8b\u7684\u65b9\u6cd5\u6211\u8ba4\u4e3a\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u9009\u62e9\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8\u662f\u6b63\u786e\u7684\u5462\uff0c\u8fd9\u91cc\u9700\u8981\u7ed9\u51fa\u8bc1\u660e\uff09\u3002 </p> <p>\u4ea4\u6362\u53c2\u6570\u8bc1\u660e\u6cd5</p> <p>\u5728\u975e\u7a7a\u5b50\u95ee\u9898\\(S_k\\)\u4e2d\uff0c\u4ee4\\(A_k\\)\u4e3a\u6700\u4f18\u89e3\uff0c\\(a_m\\)\u662f\\(S_k\\)\u4e2d\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8\uff0c\u90a3\u4e48\\(a_m\\)\u5728\\(A_k\\)\u4e2d\u3002</p> <ul> <li>\u4ee4\\(A_k\\)\u4e3a\u6700\u4f18\u89e3\uff0c\\(a_{ef}\\)\u662f\\(A_k\\)\u4e2d\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8</li> <li>\u5982\u679c\\(a_m = a_{ef}\\)\uff0c\u5219\\(a_m\\)\u5728\\(A_k\\)\u4e2d\uff0c\u5426\u5219</li> <li>\u7528\\(a_m\\)\u66ff\u6362\\(a_{ef}\\)\uff0c\u5f97\u5230\\(A_k'\\)\uff0c\u56e0\u4e3a\u7ed3\u675f\u65f6\u95f4\\(f_m \\leq f_{ef}\\)\uff0c\u6240\u4ee5\\(A_k'\\)\u4e5f\u662f\\(S_k\\)\u7684\u6700\u4f18\u89e3\uff0c\u5f97\u8bc1\u3002</li> </ul> <p></p> <p>     \u7ecf\u8fc7\u8bc1\u660e\u540e\u6211\u4eec\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u4f18\u5316DP\uff0c\u91cd\u65b0\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a </p> \\[ c_{1,j} = \\begin{cases}     1 &amp; \\text{if } j = 1 \\\\     \\max(c_{1,j-1}, c_{1,k(j)} + 1) &amp; \\text{if } j &gt; 1 \\end{cases} \\] <p>     \u8fd9\u91cc\u6211\u4eec\u5bf9\u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5230\u7b2c\\(j\\)\u4e2a\u6d3b\u52a8\u8fd9\u4e2a\u8303\u56f4\u8fdb\u884c\u904d\u5386\uff0c\u627e\u5230\u5728\u7b2c\\(j\\)\u4e2a\u6d3b\u52a8\u5f00\u59cb\u524d\u7ed3\u675f\u7684\u6d3b\u52a8\\(a_{k(j)}\\)\uff0c\u7136\u540e\u8fdb\u884c\u5224\u65ad\uff1a\u4e0d\u9009\u62e9\\(a_j\\)\uff0c\u5219\\(c_{1,j} = c_{1,j-1}\\)\uff0c\u9009\u62e9\\(a_j\\)\uff0c\u5219\\(c_{1,j}\\)\u5c31\u662f\u5728\\(a_j\\)\u6d3b\u52a8\u5f00\u59cb\u524d\u7ed3\u675f\u7684\u6d3b\u52a8\\(a_{k(j)}\\)\u52a0\u4e0a\\(a_j\\)\u3002\uff08\u8fd9\u91cc\\(k(j)\\)\u662f\\(j\\)\u7684\u524d\u4e00\u4e2a\u6d3b\u52a8\uff0c\u6240\u4ee5\\(a_{k(j)}\\)\u4e5f\u5c31\u662f\u4e00\u4e2a\u6700\u4f18\u5b50\u7ed3\u6784\uff09 </p> \u4f18\u5316\u4ee3\u7801 <p>\u5148\u5bf9\\(k(j)\\)\u8fdb\u884c\u9884\u5904\u7406\uff0c\u7136\u540e\u8fdb\u884cDP\uff1a <pre><code>struct Activity {\n    int start, finish;\n};\n\nint activity_selector(const vector&lt;Activity&gt;&amp; activities) {\n    int n = activities.size();\n    vector&lt;int&gt; dp(n, 0);\n    vector&lt;int&gt; k(n, -1);\n\n    // \u9884\u5904\u7406k(j)\n    for(int j = 1; j &lt; n; j-- ) {\n        for(int i = n-1; i &gt;= 0; i--) {\n            if (activities[i].finish &lt;= activities[j].start) {\n                k[j] = i;\n                break;\n            }\n        }\n    }\n\n\ndp[0] = 1;\n\nfor(int j = 1; j &lt; n; j++) {\n        dp[j] = dp[j-1]; // \u4e0d\u9009\u62e9a_j\n        if(k[j] != -1) {\n            dp[j] = max(dp[j], dp[k[j]] + 1); // \u9009\u62e9a_j\n        } else {\n            dp[j] = max(dp[j], 1); // \u6ca1\u6709\u517c\u5bb9\u7684\u6d3b\u52a8\uff0c\u9009\u62e9\u81ea\u5df1\n        }\n    }\n}\n\nreturn dp[n-1];\n</code></pre></p> <p>     \u6b64\u65f6\u5982\u679c\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u786e\u5b9a\\(k(j)\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u4f18\u5316\u5230\\(O(n \\log n)\\)\u3002 </p>"},{"location":"notes/cs/algorithm/gdy.html#design","title":"Design","text":"<ul> <li>\u8d2a\u5fc3\u7b97\u6cd5\u4e0e\u52a8\u6001\u89c4\u5212\u533a\u522b\u5728\u4e8e\uff1a<ul> <li>\u52a8\u6001\u89c4\u5212\u662f\u81ea\u5e95\u5411\u4e0a\u7684\uff0c\u800c\u8d2a\u5fc3\u7b97\u6cd5\u662f\u81ea\u9876\u5411\u4e0b\u7684\u3002</li> <li>\u5bf9\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u90fd\u505a\u51fa\u9009\u62e9\uff0c\u4e0d\u80fd\u56de\u9000\u3002\u52a8\u6001\u89c4\u5212\u5219\u4f1a\u4fdd\u5b58\u4ee5\u524d\u7684\u8fd0\u7b97\u7ed3\u679c\uff0c\u5e76\u6839\u636e\u4ee5\u524d\u7684\u7ed3\u679c\u5bf9\u5f53\u524d\u8fdb\u884c\u9009\u62e9\uff0c\u6709\u56de\u9000\u529f\u80fd\u3002</li> </ul> </li> </ul> <p>\u5e38\u89c1\u65b9\u6cd5</p> <p>     \u5728OIWiki\u4e2d\u8d2a\u5fc3\u7b97\u6cd5\u6709\u4e24\u79cd\u5e38\u89c1\u89e3\u6cd5\uff1a </p> <p>     1. \u90bb\u9879\u4ea4\u6362\u6cd5 </p> <p>     2. \u540e\u6094\u6cd5 </p> <p></p> <p>\u90bb\u9879\u4ea4\u6362\u7684\u65b9\u6cd5\u6211\u5e76\u4e0d\u662f\u5f88\u7406\u89e3\uff0c\u8fd9\u91cc\u7ed9\u51faOIWiki\u7684\u4f8b\u9898\u8bb2\u89e3\uff1a\u56fd\u738b\u6e38\u620f</p> <p>\u8fd9\u91cc\u7ed9\u51fa\u540e\u6094\u6cd5\u7684\u8bb2\u89e3\uff0c\u56e0\u4e3a\u8bfe\u4e0a\u5e76\u6ca1\u6709\u63d0\u53ca\u3002</p> <ol> <li>\u540e\u6094\u6cd5\u5148\u6309\u7167\u67d0\u79cd\u7b56\u7565\u505a\u51fa\u9009\u62e9</li> <li>\u5982\u679c\u53d1\u73b0\u5f53\u524d\u9009\u62e9\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u5219\u8fdb\u884c\u53cd\u6094\uff0c\u9009\u62e9\u5176\u4ed6\u7b56\u7565</li> </ol> <p>Work Scheduling</p> <p>\u7ea6\u7ff0\u6709\u592a\u591a\u7684\u5de5\u4f5c\u8981\u505a\u3002\u4e3a\u4e86\u8ba9\u519c\u573a\u9ad8\u6548\u8fd0\u8f6c\uff0c\u4ed6\u5fc5\u987b\u9760\u4ed6\u7684\u5de5\u4f5c\u8d5a\u94b1\uff0c\u6bcf\u9879\u5de5\u4f5c\u82b1\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u3002 \u4ed6\u7684\u5de5\u4f5c\u65e5\u4ece0\u65f6\u523b\u5f00\u59cb\uff0c\u6709\\(10^9\\)\u4e2a\u5355\u4f4d\u65f6\u95f4\u3002\u5728\u4efb\u4e00\u65f6\u523b\uff0c\u4ed6\u90fd\u53ef\u4ee5\u9009\u62e9\u7f16\u53f71\u5230N\u7684\u5de5\u4f5c\u4e2d\u7684\u4e00\u9879\u3002\u56e0\u4e3a\u4ed6\u5728\u6bcf\u4e2a\u5355\u4f4d\u65f6\u95f4\u91cc\u53ea\u80fd\u505a\u4e00\u4e2a\u5de5\u4f5c\uff0c\u800c\u6bcf\u9879\u5de5\u4f5c\u53c8\u6709\u4e00\u4e2a\u622a\u6b62\u65e5\u671f\uff0c\u6240\u4ee5\u4ed6\u5f88\u96be\u6709\u65f6\u95f4\u5b8c\u6210\u6240\u6709N\u4e2a\u5de5\u4f5c\u3002\u5bf9\u4e8e\u7b2c\\(i\\)\u4e2a\u5de5\u4f5c\u6709\u4e00\u4e2a\u622a\u6b62\u65f6\u95f4\\(D_i\\)\uff0c\u5982\u679c\u4ed6\u53ef\u4ee5\u5b8c\u6210\u8fd9\u4e2a\u5de5\u4f5c\uff0c\u53ef\u4ee5\u83b7\u5229\\(P_i\\)\u3002</p> <p>\u73b0\u5728\u8981\u6c42\u6c42\u51fa\u7ea6\u7ff0\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\u3002</p> <p>\u9898\u89e3</p> <ol> <li>\u9ed8\u8ba4\u7b56\u7565\u4e3a\u6240\u6709\u5de5\u4f5c\u90fd\u505a\uff0c\u5c06\u5404\u9879\u5de5\u4f5c\u6309\u7167\u622a\u6b62\u65f6\u95f4\u6392\u5e8f</li> <li>\u5f53\u524d\u65f6\u95f4\u672a\u8d85\u8fc7\u622a\u6b62\u65f6\u95f4\uff0c\u5c31\u52a0\u5165\u5f53\u524d\u5de5\u4f5c</li> <li>\u5f53\u524d\u65f6\u95f4\u8d85\u8fc7\u622a\u6b62\u65f6\u95f4\u4e14\u5f53\u524d\u5de5\u4f5c\u4ef7\u503c\u5927\u4e8e\u5806\u9876\u5de5\u4f5c\u4ef7\u503c\uff0c\u5219\u653e\u5f03\u5806\u9876\u5de5\u4f5c\uff0c\u9009\u62e9\u5f53\u524d\u5de5\u4f5c</li> </ol> \u4ee3\u7801 <pre><code>struct Work {\n    int d, p;\n}a[10005];\n\nbool cmp(Work a, Work b) {\n    return a.d &lt; b.d;\n}\n\npriority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; q;\n\nint main() {\n    int n;\n    cin &gt;&gt; n;\n    for(int i = 1; i &lt;= n; i++) {\n        cin &gt;&gt; a[i].d &gt;&gt; a[i].p;\n    }\n\n    sort(a+1, a+n+1, cmp);\n    int ans = 0;\n    for(int i = 1; i &lt;= n; i++) {\n        if(a[i].d &lt;= (int)q.size()) {// \u5f53\u524d\u65f6\u95f4\u8d85\u8fc7\u622a\u6b62\u65f6\u95f4\n            if(q.top() &lt; a[i].p) {// \u5f53\u524d\u5de5\u4f5c\u4ef7\u503c\u5927\u4e8e\u5806\u9876\u5de5\u4f5c\u4ef7\u503c\n                ans += a[i].p - q.top();// \u53cd\u6094\n                q.pop();\n                q.push(a[i].p);\n            }\n        } else {// \u5f53\u524d\u65f6\u95f4\u672a\u8d85\u8fc7\u622a\u6b62\u65f6\u95f4\n            ans += a[i].p;\n            q.push(a[i].p);\n        }\n    }\n    cout &lt;&lt; ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"notes/cs/algorithm/localsearch.html","title":"Local Search","text":""},{"location":"notes/cs/algorithm/localsearch.html#intro","title":"Intro","text":"<p>\u5c40\u90e8\u641c\u7d22\u4e5f\u662f\u4e00\u79cd\u8fd1\u4f3c\u95ee\u9898\u7684\u5ef6\u4f38\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u5c40\u90e8\u641c\u7d22\u8fdb\u884c\u4e00\u4e2a\u5168\u5c40\u6027\u7684\u5b9a\u4e49\uff1a</p> <p>\u5b9a\u4e49</p> <p>\u5c40\u90e8\u641c\u7d22\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u4e8e\u90bb\u57df\u7684\u641c\u7d22\u7b97\u6cd5\uff0c\u5b83\u901a\u8fc7\u5728\u5f53\u524d\u89e3\u7684\u90bb\u57df\u5185\u8fdb\u884c\u641c\u7d22\uff0c\u6765\u627e\u5230\u66f4\u4f18\u7684\u89e3\u3002</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u6700\u4f18\u5316\u95ee\u9898\u6709\u9ad8\u7ef4\u7684\u53ef\u884c\u89e3\u7a7a\u95f4\\(C= \\{ S|S \\text{ is feasible} \\}\\)\uff0c\u5e76\u4e14\u5bf9\u53ef\u884c\u89e3\u6765\u8bf4\u6709cost\u51fd\u6570\\(f:C\\rightarrow R\\)\uff0c</p> <p>\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u89e3\\(S\\in C\\)\u4f7f\u5f97\\(f(S)\\)\u6700\u5c0f\u3002</p> <p>\u57fa\u672c\u7684\u89e3\u51b3\u601d\u8def\uff1a</p> <ul> <li>\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u89e3\\(S_0\\in C\\)</li> <li>\u627e\u5230\\(S_0\\)\u7684\u90bb\u5c45\\(S'\\)</li> <li>\u5982\u679c\\(f(S')&lt;f(S_0)\\)\uff0c\u90a3\u4e48\u66f4\u65b0\\(S_0=S'\\)</li> <li>\u91cd\u590d2\uff0c3\u6b65\u9aa4\u76f4\u5230\u6ee1\u8db3\u67d0\u4e2a\u7ec8\u6b62\u6761\u4ef6</li> </ul> <p>\u5173\u952e\u7684\u6b65\u9aa4\u5c31\u662f\u5b9a\u4e49neighborhood\uff0c\u7136\u540e\u8fdb\u884cbetter neighbor\u7684\u641c\u7d22\u3002</p>"},{"location":"notes/cs/algorithm/localsearch.html#example","title":"Example","text":""},{"location":"notes/cs/algorithm/localsearch.html#vertex-cover","title":"Vertex Cover","text":"<p>Vertex Cover</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u56fe\\(G=(V,E)\\)\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u9876\u70b9\u96c6\u5408\\(min S\\subseteq V\\)\uff0c\u4f7f\u5f97\u6bcf\u4e00\u6761\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u9876\u70b9\u5728\u96c6\u5408\\(C\\)\u4e2d\u3002</p> <p>\u53ef\u884c\u89e3\u89e3\u7a7a\u95f4\uff1a\\(C= \\{ S|S \\text{ is a vertex cover} \\}\\)</p> <p>cost\u51fd\u6570\uff1a\\(f(S)=|S|\\)</p> <ul> <li>\u8fdb\u884cneighbor\u5b9a\u4e49\uff1a</li> </ul> <p>\u5b9a\u4e49neighbor\u662f\u4e0e\u5f53\u524d\u89e3\\(S\\)\u76f8\u5dee\u4e00\u4e2a\u9876\u70b9\u7684\u89e3\uff0c\u5373</p> \\[  N(S)= \\{ S'|S' \\text{ is a vertex cover and } S' \\text{can be obtained from } S \\text{ by + or - one vertex} \\}  \\] <p>\u5931\u8d25\u7684man</p> <p>\u4e00\u79cd\u60c5\u51b5\u7684\u7b97\u6cd5\u8bbe\u8ba1\u662f\u5c06\u5168\u96c6\u8bbe\u7f6e\u4e3a\u521d\u59cb\u89e3\uff0c\u7136\u540e\u6bcf\u6b21\u526a\u6389\u4e00\u4e2a\u9876\u70b9\uff0c\u4f46\u662f\u8fd9\u6837\u5f88\u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6700\u4f18\uff1a</p> <p>\u53ef\u4ee5\u60f3\u50cf\u4e00\u4e2a\u8718\u86db\u7f51\uff0c\u4e2d\u5fc3\u70b9\u8fde\u63a5\u6240\u6709\u8fb9\u7f18\u8282\u70b9\uff0c\u4e00\u65e6\u7b2c\u4e00\u6b21\u526a\u6389\u4e2d\u5fc3\u70b9\uff0c\u5916\u90e8\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u4e0d\u80fd\u53bb\u6389\uff0c\u4f46\u662f\u6700\u4f18\u89e3\u5176\u5b9e\u662f\u53ea\u4fdd\u7559\u4e2d\u5fc3\u70b9</p> <ul> <li>\u56e0\u6b64\u9700\u8981\u722c\u51falocal optimum</li> </ul> <p>Metropolis Algorithm</p> <p>     \u6838\u5fc3\u601d\u60f3\u662f\u5728\u9009\u5b9a\u4e00\u4e2a\u89e3\\(S\\)\u540e\uff0c\u5728\u90bb\u5c45\u4e2d\u968f\u673a\u518d\u627e\u4e00\u4e2a\u89e3\\(S'\\)\uff0c\u5982\u679c\u65b0\u7684\u89e3\u66f4\u4f18\uff0c\u90a3\u4e48\u5c31\u66f4\u65b0\uff0c\u5373\u4f7f\u8fd9\u4e2a\\(S'\\)\u6bd4\\(S\\)\u5dee\uff0c\u4e5f\u6709\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u3002\u8fd9\u6837\u5c31\u6709\u673a\u4f1a\u9009\u5230\u5c40\u90e8\u5dee\u89e3\uff0c\u4ece\u800c\u722c\u51falocal optimum\u3002 </p> <p>\u8fd9\u4e2a\u6982\u7387\u7684\u8bbe\u7f6e\u662f\uff1a</p> \\[ \\text{with given constant } K \\text{ and } T \\] \\[ P(S\\rightarrow S') = e^{-\\frac{|f(S')-f(S)|}{KT}} \\] <ul> <li> <p>\u5206\u5b50\u4e0a\u7684\\(f(S')-f(S)\\)\u79f0\u4e3a\u5761\u5ea6</p> <ul> <li>\u5761\u5ea6\u5927\u65f6\uff0c\u6982\u7387\u8f83\u5c0f\uff0c\u4e0d\u503e\u5411\u4e8e\u9009\u62e9\u722c\u5761 </li> </ul> </li> <li> <p>\u79f0\\(T\\)\u4e3atemperature\uff0c\\(K\\)\u4e3aBoltzmann\u5e38\u6570\u3002</p> <ul> <li>\u5f53\\(T\\)\u6bd4\u8f83\u5927\u65f6\uff0c\u7cfb\u7edf\u5341\u5206\u6d3b\u8dc3\uff0c\u5bb9\u6613\u8fdb\u884c\u722c\u5761\uff0c\u53cd\u4e4b\u4e0d\u6613</li> <li>\u5728\u7cfb\u7edf\u521d\u671f\uff0c\\(T\\)\u6bd4\u8f83\u5927\uff0c\u5bb9\u6613\u722c\u5761\uff0c\u968f\u7740\\(T\\)\u9010\u6e10\u51cf\u5c0f\uff0c\u722c\u5761\u8d8a\u6765\u8d8a\u96be\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u88ab\u79f0\u4e3a\u6a21\u62df\u9000\u706b\uff08simulated annealing gradully decrease T\uff09</li> </ul> </li> </ul> <p>\u574f\u5904\u5728\u4e8e\uff1a\u96be\u4ee5\u5206\u6790\ud83e\udd72\uff0cmyc\u8001\u5e08\u8fd9\u79cd\u505a\u7b97\u6cd5\u5206\u6790\u7684\u4eba\u4e0d\u559c\u6b22\uff08\uff09</p> <p>\u4f46\u662f\u505a\u5e94\u7528\u7684\u4eba\u559c\u6b22\uff0c\u56e0\u4e3a\u5b9e\u9a8c\u7ed3\u679c\u5bfc\u5411\uff0c\u8fd8\u597d\u7528\uff08\uff09</p>"},{"location":"notes/cs/algorithm/localsearch.html#hopfield-network-problem","title":"Hopfield Network Problem","text":"<p>Hopfield Network</p> <p>\u8f93\u5165\u4e00\u4e2a\u56fe\\(G=(V,E)\\)\uff0c\u6bcf\u4e2a\u8fb9\u7684\u6743\u91cd\\(w\\)</p> <ul> <li>\u5b9a\u4e49configuration \\(S\\)\uff0c\u5176\u4e2d\\(S_v \\in \\{0,1\\}\\)\uff0c</li> <li>\u5b9a\u4e49\u4e00\u4e2a\u8fb9\\(e\\)\u4e3a\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a</li> </ul> \\[ w_{e}S_uS_v \\leq 0 \\] <p>\u4e5f\u5c31\u662f\u8bf4\u6b63\u6743\u91cd\u8fb9\u8fde\u63a5S\u4e0d\u540c\u7684\u9876\u70b9\uff0c\u8d1f\u6743\u91cd\u8fb9\u8fde\u63a5S\u76f8\u540c\u7684\u70b9</p> <p>\u5728\u8bbe\u8ba1\u6240\u6709\u70b9\u7684configuration\u65f6\uff0c\u6211\u4eec\u6709\u5982\u4e0b\u4e24\u4e2a\u76ee\u6807\uff1a</p> <ul> <li>\u6700\u5927\u5316\u597d\u8fb9\u6743\u91cd\u7edd\u5bf9\u503c\u4e4b\u548c</li> <li>\u5bf9\u6bcf\u4e2a\u9876\u70b9\\(u\\)\uff0c\u6700\u5927\u5316\u6240\u6709\u4e0e\\(u\\)\u76f8\u8fde\u7684\u597d\u8fb9\u7684\u6743\u91cd\u4e4b\u548c</li> </ul> <p>\u5728\u7ed9\u51fa\u4e24\u4e2a\u5b9a\u4e49\uff1a</p> <p>Definition</p> <ul> <li> <p>\u4e00\u4e2a\u9876\u70b9\\(u\\)\u662f\u6ee1\u610f\u7684satisfied\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a $$ \\sum_{\\text{\u90bb\u63a5\u597d\u8fb9}}{|w_u|} \\geq \\sum_{{\u90bb\u63a5\u574f\u8fb9}}{|w_u|} $$</p> </li> <li> <p>\u4e00\u4e2aconfiguration\u662fstable\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u9876\u70b9\u90fd\u662f\u6ee1\u610f\u7684</p> </li> </ul> <p>\u5f88\u5bb9\u6613\u53ef\u4ee5\u770b\u51fa\uff0c\u4e00\u4e2a\u9876\u70b9\u7ecf\u8fc7\u53cd\u8f6c\uff0c\u53ef\u4ee5\u4f7f\u597d\u7684\u8fb9\u53d8\u574f\uff0c\u574f\u7684\u8fb9\u53d8\u597d\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u901a\u8fc7\u5bf9\u9876\u70b9\u7684flip\u64cd\u4f5c\uff0c\u6765\u6539\u53d8configuration</p> <p>\u8fdb\u800c\u5f15\u51fa\u65b9\u6cd5</p> <p>State-Flipping</p> <ul> <li>\u968f\u673a\u9009\u53d6\u4e00\u4e2aconfiguration \\(S\\)</li> <li>while \\(S\\) is unstable with \\(u\\) is not satisfied <ul> <li>flip \\(u\\)</li> </ul> </li> <li>return \\(S\\)</li> </ul> <p>\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u7b97\u6cd5\u4e00\u5b9a\u4f1a\u5728\u6709\u9650\u6b65\u5185\u5b8c\u6210\uff1a</p> <p>\u52bf\u80fd\u51fd\u6570\u8bc1\u660e</p> <p>\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570\\(\\Phi(S)\\)\u4e3a\u6240\u6709\u597d\u8fb9\u7684\u6743\u91cd\u7edd\u5bf9\u503c\u7684\u548c</p> <p>\u5728\u6539\u53d8\u4e00\u4e2a\u9876\u70b9\\(u\\)\u65f6\uff0cconfig\u53d8\u4e3a\\(S'\\)\uff0c\u6b64\u65f6\u52bf\u80fd\u51fd\u6570\u7684\u53d8\u5316\u4e3a\uff1a</p> \\[ \\Phi(S')-\\Phi(S) = - \\sum_{u \\text{\u7684\u597d\u90bb\u8fb9}}{|w_e|} + \\sum_{u \\text{\u7684\u574f\u90bb\u8fb9}}{|w_e|} \\] <p>\u56e0\u4e3a\\(u\\)\u662funsatisfied\u7684\uff0c\u6240\u4ee5\u7b49\u5f0f\u53f3\u8fb9\u662f\u6b63\u7684\uff08\u56e0\u4e3a\u5b9a\u4e49\u8fb9\u6743\u4e3a\u6574\u6570\uff0c\u4e5f\u4e00\u5b9a\u5927\u4e8e1\uff09\uff0c\u56e0\u6b64\u52bf\u80fd\u51fd\u6570\u4e00\u5b9a\u9012\u589e\u81f3\u5c111\uff0c\u6700\u7ec8\u52bf\u80fd\u4e0d\u4f1a\u8d85\u8fc7\u603b\u7684\u8fb9\u6743\u91cd\u548c\uff0c\u56e0\u6b64\u7b97\u6cd5\u4e00\u5b9a\u4f1a\u5b8c\u6210\uff08\u6700\u574f\u60c5\u51b5\u5c31\u662f\u6bcf\u4e2a\u9876\u70b9\u90fd\u53cd\u8f6c\uff0c\u5373\\(O(W)\\)\u590d\u6742\u5ea6\uff09</p> <p>Pseudo-Poly \u4f2a\u591a\u9879\u5f0f</p> <p>\u8fd9\u4e2a\u64cd\u4f5c\u7684\u6700\u574f\u60c5\u51b5\u662f\u5728\\(W\\)\u6b21\u64cd\u4f5c\u540e\u505c\u6b62\uff0c\u6211\u4eec\u5f97\u5230\u4e86\\(O(W)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8fd9\u770b\u4e0a\u53bb\u5c31\u662f\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u64cd\u4f5c\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u7684\\(W\\)\u5e76\u4e0d\u662f\u8f93\u5165\u95ee\u9898\u7684\u89c4\u6a21\uff0c\u800c\u662f\u8f93\u5165\u56fe\u7684\u8fb9\u6743\u91cd\u548c\uff0c\u5bf9\u4e8e\u8f93\u5165\u95ee\u9898\u7684\u5927\u5c0f\uff0c\u9700\u8981\u5bf9\u5176\u53d6\u5bf9\u6570\u6362\u7b97\u62102\u8fdb\u5236\u957f\u5ea6\uff0c\u56e0\u6b64\u8fd9\u4e2a\u7b97\u6cd5\u662f\u4f2a\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u7684</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u52bf\u80fd\u51fd\u6570\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u76ee\u6807\u4e00\u8981\u8fbe\u5230\u6700\u5927\u503c\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u5c31\u662f </p> \\[ \\text{local search to maximize objective } 1 \\]"},{"location":"notes/cs/algorithm/localsearch.html#maximum-cut","title":"Maximum Cut","text":"<p>NP-Hard</p> <p>\u5b9a\u4e49</p> <p>\u7ed9\u5b9a\u6709\u6b63\u6574\u6570\u6743\u91cd\u7684\u65e0\u5411\u56fe\\(G=(V,E)\\)\uff0ca cut (A, B)\u5c31\u662f\\(V\\)\u7684\u4e00\u4e2a\u5212\u5206\uff0c\u5c06\\(V\\)\u5212\u5206\u4e3a\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\\(A\\)\u548c\\(B\\)\uff0c</p> <p>cut\u7684\u6743\u91cd\u5b9a\u4e49\u4e3a\uff1a</p> \\[ w(A,B) = \\sum_{(u,v)\\in E|u\\in A, v\\in B}w_{uv} \\] <p>\u4e5f\u5c31\u662f\u6240\u6709\u8de8\u8d8a\\(A\\)\u548c\\(B\\)\u7684\u8fb9\u7684\u6743\u91cd\u4e4b\u548c</p> <p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2acut\uff0c\u4f7f\u5f97\\(w(A,B)\\)\u6700\u5927</p> <p>\u5176\u5b9e\u662f\u4e00\u4e2aHopfield Network Problem\u7684\u7279\u4f8b\uff0c\u4e4b\u524d\u7684config\u662f\u6b63\u8d1f\u4e24\u79cd\u914d\u7f6e\uff0c\u73b0\u5728\u5c31\u5bf9\u5e94\u5230\u4e86A\u548cB\uff0c\u597d\u8fb9\u4e5f\u5c31\u662f\u73b0\u5728\u7684cut\u8fb9\uff08\u4ea4\u53c9\u8fb9\uff09</p> <ul> <li> <p>\u4f7f\u7528state-flipping\u7b97\u6cd5\u89e3\u51b3</p> <ul> <li> <p>\u8fd9\u65f6\u8fd9\u4e2a\u7b97\u6cd5\u662flocal optimal\u7684\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a\u8fd1\u4f3c\u7b97\u6cd5</p> </li> <li> <p>\u8fd1\u4f3c\u6bd4\u4e3a2</p> </li> </ul> </li> </ul> <p>\u7ed9\u51fa\u8bc1\u660e\uff1a</p> <p>\u8bc1\u660e</p> <p>\u5728\u5b8c\u6210state-flipping\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u7ec4\\((A,B)\\)\u662fstable\u7684</p> <p>for any \\(u\\in A\\) and his neighbors \\(v\\)\u6784\u6210\u7684\u8fb9\\(e=(u,v)\\)\u6211\u4eec\u6709\uff1a</p> \\[ \\sum_{v \\in A}{w_e} \\leq \\sum_{v \\in B}{w_e} \\] <p>\u5bf9\u6240\u6709\\(u\\in A\\)\uff0c\u6211\u4eec\u6709\uff1a</p> \\[ \\sum_{u \\in A}{\\sum_{v \\in A}{w_e}} \\leq \\sum_{u \\in A}{\\sum_{v \\in B}{w_e}} \\] <p>\u4e0d\u7b49\u53f7\u53f3\u4fa7\u5c31\u662f\\(w(A,B)\\)</p> <p>\u4e0d\u7b49\u53f7\u5de6\u4fa7\u662f\u5c06\u6240\u6709\u5728\\(A\\)\u5185\u90e8\u8fb9\u7684\u6743\u91cd\u76f8\u52a0\uff0c\u7531\u5bf9\u79f0\u6027\u53ef\u77e5\u8fb9\u88ab\u6c42\u548c\u4e86\u4e24\u6b21\uff0c\u56e0\u6b64\u4e0d\u7b49\u5f0f\u5de6\u4fa7\u5c31\u662f\\(2\\sum_{e\\text{\u662f\u5185\u90e8\u8fb9}}{w_e}\\)</p> <p>\u5bf9\\(B\\)\u540c\u7406</p> <p>\u5c06\u6574\u4e2a\u56fe\u7684\u8fb9\u6743\u91cd\u548c\u8bb0\u4e3a\\(W\\)\uff0c\u5219\u6709\uff1a</p> \\[ W = \\sum_{e\\text{\u662fA\u5185\u90e8\u8fb9}}{w_e} + \\sum_{e\\text{\u662fB\u5185\u90e8\u8fb9}}{w_e} + w(A,B) \\] <p>\u901a\u8fc7\u4e0a\u9762\u7684\u4e0d\u7b49\u5f0f\uff0c\u5c06\u4e24\u4e2a\u5185\u90e8\u8fb9\u653e\u7f29\u6389\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[ w(A,B) \\geq \\frac{W}{2} \\geq \\frac{OPT}{2} \\] <p>\u4f46\u662f\u521a\u521a\u8bf4\u5230\u4e86\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u6211\u4eec\u8fdb\u884c\u4f18\u5316\uff1a</p> <p>\u5728\u5148\u524d\u9009\u62e9flip\u7684\u70b9\u65f6\uff0c\u53ea\u8981\u662f\u597d\u8fb9\u548c\u5c0f\u4e8e\u574f\u8fb9\u548c\u6211\u4eec\u5c31\u8fdb\u884c\u53cd\u8f6c\uff0c\u4f46\u662f\u8fd9\u6837\u53cd\u8f6c\u7684\u9891\u7387\u592a\u9ad8\uff0c\u65f6\u95f4\u4e0a\u82b1\u8d39\u592a\u5927\uff0c\u6211\u4eec\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u8fd1\u4f3c\u6a21\u7cca\uff0c\u53ea\u6709\u5f53\u6539\u8fdb\u8db3\u591f\u5927\uff0c\u6211\u4eec\u624d\u53cd\u8f6c</p> <ul> <li>flip only when after flipping\uff1a</li> </ul> \\[ w(A',B') \\geq (1+\\frac{\\epsilon}{|V|})w(A,B) \\] <p>\u7531\u4e8e\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff1a</p> \\[ (1+\\frac{\\epsilon}{n})^{\\frac{n}{\\epsilon}} \\geq 2 \\] <p>\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u5c31\u662f\u8bf4\u6211\u8981\u8ba9\\(w(A',B')\\)\u7ffb\u500d\uff0c\u9700\u8981\u8fdb\u884c\\(\\frac{n}{\\epsilon}\\)\u6b21\u6570\u7684\u53cd\u8f6c</p> <p>\u800c\u6211\u4eec\u77e5\u9053\u6700\u591a\u53cd\u8f6c\u6b21\u6570\u662f\\(\\log W\\)\uff0c\u56e0\u6b64\u8fd9\u4e2a\u7b97\u6cd5\u662f\\(O(\\frac{n}{\\epsilon}\\log W)\\)\u7684\uff0c\u8fbe\u5230\u4e86\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6</p> <ul> <li>\u8fd9\u4e2a\u8fd1\u4f3c\u7b97\u6cd5\u7684\u8fd1\u4f3c\u6bd4\u4e3a $$ 2+\\frac{\\epsilon}{2} $$</li> </ul> <p>\u8bc1\u660e\u7684\u601d\u8def\u548c\u4e0a\u9762\u7c7b\u4f3c\uff0c\u5728\u8fdb\u884c\u7b2c\u4e00\u6b65\u53cd\u8f6c\u5224\u65ad\u7684\u65f6\u5019\u9700\u8981\u66f4\u6539\u4e0d\u7b49\u5f0f\uff0c\u4e0d\u7b49\u53f7\u53f3\u8fb9\u52a0\u5165\u90a3\u4e2a\\(\\frac{\\epsilon}{|V|}w(A,B)\\)\u5176\u4ed6\u6b65\u9aa4\u76f8\u540c</p> <p>\u51cf\u5c11\u6b65\u6570</p> <p>\u5176\u5b9e\u8fd9\u5c31\u662f\u76f8\u5f53\u4e8e\u5728local search\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6bcf\u6b65\u8d70\u7684\u592a\u5c0f\u4e86\u56e0\u6b64\u6162\uff0c\u8fd9\u4e2a\u5224\u65ad\u6761\u4ef6\u5c31\u662f\u5728\u51cf\u5c11\u6b65\u6570</p>"},{"location":"notes/cs/algorithm/localsearch.html#kerninghan-lin-algorithm","title":"Kerninghan-Lin algorithm","text":"<p>\u6211\u4eec\u521a\u624d\u7684\u51cf\u5c11\u6b65\u6570\u65b9\u6cd5\u662f\u4e00\u79cd\u63d0\u9ad8\u6548\u7387\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u589e\u5927\u6b65\u957f\u3002</p> <p>\u5728\u6700\u57fa\u672c\u7684\u60c5\u51b5\u4e2d\u6211\u4eec\u901a\u8fc7\u6539\u53d8\u4e00\u4e2a\u70b9\u7684config\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u5982\u679c\u6211\u4eec\u540c\u65f6\u6539\u53d8k\u4e2a\u70b9\u5462\uff1f\u8fd9\u6837\u5c31\u589e\u5927\u4e86\u90bb\u5c45</p> <ul> <li>\u597d\u5904\u662f\u90bb\u5c45\u53d8\u591a\u52a0\u5feb\u6536\u655b</li> <li>\u574f\u5904\u662f\u90bb\u5c45\u8981\u8ba1\u7b97\uff0c\u8d70\u6bcf\u4e00\u6b65\u7684\u65f6\u95f4\u53d8\u957f\uff0c\u603b\u5171\u8981\\(\\rightarrow\\) \\(O(n^k)\\)</li> </ul> <p>\u8fd9\u91cc\u63d0\u51fa\u4e86\u4e00\u4e2a\u7b97\u6cd5\uff1a</p> <p>\u5728\u7b2c\u4e00\u6b21\u64cd\u4f5c\u4e2d\uff0c\u9009\u62e9\u4f7f\u5f97\u53cd\u8f6c\u6536\u76ca\u6700\u5927\u7684\u4e00\u4e2a\u70b9\u8fdb\u884c\u53cd\u8f6c\u5f97\u5230\\((A_1,B_1)\\)\uff0c\u7136\u540e\u5728\u5269\u4e0b\u6ca1\u6709\u88ab\u9009\u4e2d\u7684\u70b9\u4e2d\u9009\u62e9\u4f7f\u5f97\u5269\u4e0b\u7684\u70b9\u6536\u76ca\u6700\u5927\u7684\u70b9\u53cd\u8f6c\u5f97\u5230\\((A_2,B_2)\\)\uff0c\u8fd9\u6837\u64cd\u4f5c\u4e0b\u53bb\u5f97\u5230\u4e00\u4e2a\u90bb\u5c45\u96c6\u5408</p> \\[ N(A,B) = \\{(A_1,B_1),(A_2,B_2),...,(A_{n-1},B_{n-1})\\} \\] <p>\u7136\u540e\u5728\u8fd9\u4e2a\u90bb\u5c45\u96c6\u5408\u4e2d\u8fdb\u884clocal search    </p> <ul> <li>\u5f97\u5230\u8fd9\u4e2a\u90bb\u5c45\u96c6\u5408\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n^2)\\)\u7684\uff0c\u8dd1\u51fa\u6765\u6548\u679c\u4e0d\u9519myc\u8001\u5e08\u8bf4\uff08\uff09</li> </ul>"},{"location":"notes/cs/algorithm/para.html","title":"Parallel Algorithms","text":""},{"location":"notes/cs/algorithm/para.html#intro","title":"Intro","text":"<p>intro</p> <p>\u5bf9\u4e8e\u95ee\u9898\\(a+b\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u600e\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u5462\uff1f</p> <p>\u4e00\u662f\\(O(\\log a + \\log b)\\)\uff0c\u4ed6\u5bf9\u5e94\u7684\u662f\u7528\u56fe\u7075\u673a\u6765\u89e3\u51b3</p> <p>\u4e8c\u662f\\(O(1)\\)\uff0c\u4ed6\u5bf9\u5e94\u7684\u662f\u7528Random Access Machine\u6765\u89e3\u51b3</p> <p>\u6211\u4eec\u4eca\u5929\u6765\u8ba8\u8bba\u7684\u662f\\(O(1)\\)\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u5b9a\u4e49</p> <p>\u4eca\u5929\u6211\u4eec\u8ba8\u8bba\u7684\u5e76\u884c\u7b97\u6cd5\u662f\u57fa\u4e8eRAM\u7684\uff0c\u4f7f\u7528parallel RAM\uff08PRAM\uff09\u6a21\u578b\u3002</p> <ul> <li>\u5df2\u77e5\u4e00\u6bb5\u65e0\u9650\u957f\u7684cell sequence\uff0c\u6bcf\u4e2acell\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e2a\u6574\u6570\uff0c\u540c\u65f6\u6bcf\u4e00\u5757cell\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5730\u5740\u3002</li> <li>\u6709\u4e00\u5b9a\u6570\u91cf\u7684CPU\uff0c\u6bcf\u4e2aCPU\u4e2d\u6709\u5e38\u6570\u4e2a\u5bc4\u5b58\u5668\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u6709\u81ea\u5df1\u7684\u540d\u5b57\u3002</li> <li>\u6bcf\u4e2aCPU\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u5bc4\u5b58\u5668\u8d4b\u503c\uff1a\u5e38\u6570\u6216\u8005\u5176\u4ed6\u5bc4\u5b58\u5668\u7684\u503c</li> <li>\u8fd0\u7b97\uff1a\u6574\u6570\u7684\u52a0\u51cf\u4e58\u9664</li> <li>\u6bd4\u8f83\uff1a\u4e24\u4e2a\u5bc4\u5b58\u5668\u7684\u5927\u5c0f</li> <li>\u5185\u5b58\u8bbf\u95ee\uff1a\u5bc4\u5b58\u5668\u5185\u90e8\u5b58\u50a8\u4e00\u4e2a\u5185\u5b58\u7684\u5730\u5740\uff0c\u901a\u8fc7\u53e6\u4e00\u4e2a\u5bc4\u5b58\u5668write/read\u5bf9\u5e94\u5730\u5740\u7684cell\u7684\u503c</li> </ul> </li> </ul> <p>\u7531\u4e8e\u591a\u4e2aCPU\u540c\u65f6\u5bf9\u5185\u5b58\u8fdb\u884c\u8bfb\u5199\uff0c\u6240\u4ee5\u9700\u8981\u8003\u8651\u5185\u5b58\u7684\u51b2\u7a81\u95ee\u9898\uff0c\u6839\u636e\u51b2\u7a81\u7684\u89e3\u51b3\u65b9\u5f0f\uff0cPRAM\u6a21\u578b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li>CREW\uff1aConcurrent Read Exclusive Write\uff0c\u5141\u8bb8\u591a\u4e2aCPU\u540c\u65f6\u8bfb\u53d6\u540c\u4e00\u4e2acell\uff0c\u4f46\u662f\u5199\u5165\u65f6\u9700\u8981\u72ec\u5360</li> <li>EREW\uff1aExclusive Read Exclusive Write\uff0c\u5199\u548c\u8bfb\u90fd\u662f\u72ec\u5360\u7684</li> <li>CRCW\uff1aConcurrent Read Concurrent Write\uff0c\u5141\u8bb8\u591a\u4e2aCPU\u540c\u65f6\u8bfb\u53d6\u548c\u5199\u5165\u540c\u4e00\u4e2acell</li> </ul>"},{"location":"notes/cs/algorithm/para.html#analysis-of-parallel-algorithms","title":"Analysis of Parallel Algorithms","text":"<p>\u5728\u5e76\u884c\u7b97\u6cd5\u7684\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u6362\u4e00\u4e2a\u89c6\u89d2\u8fdb\u884c\u5206\u6790\uff0c\u6216\u8005\u8bf4\u8fdb\u884c\u4e00\u79cd\u65b0\u7684\u5b66\u4e60\u3002</p> <p>\u4ee5\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f8b\u5b50\u5f00\u59cb\uff1aSummation</p> <ul> <li>input\uff1a\\(A_1, A_2, \\cdots, A_n\\)</li> <li>output\uff1a\\(S = \\sum_{i=1}^{n} A_i\\)</li> </ul> <p>\u5f88\u5bb9\u6613\u60f3\u5230\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e8c\u5206\u6cd5\u8fdb\u884c\u6c42\u548c\uff1a</p> <p>\u60f3\u8c61\u8fd9\u4e2a\u6c42\u548c\u8fc7\u7a0b\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u4e8c\u5206\u8ba1\u7b97\u7684\u5b50\u95ee\u9898\u79f0\u4e3a\\(B(h,i)\\)\uff0c\u5176\u4e2d\\(h\\)\u662f\u6811\u7684\u9ad8\u5ea6\uff0c\\(i\\)\u662f\u8282\u70b9\u5728\u7b2c\\(h\\)\u5c42\u7684\u7f16\u53f7\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>for i in range(n): pardo  #pardo \u662f\u5e76\u884c\u8ba1\u7b97\u7684\u610f\u601d\n    B(0,i) = A[i] # \u521d\u59cb\u5316\n\nfor h in range(1, log 2 n):\n    for i in range(1, n/2^i): # \u6bcf\u5c42\u6709n/2^i\u4e2a\u95ee\u9898\n        B(h,i) = B(h-1,2i-1) + B(h-1,2i) # \u6bcf\u4e2a\u95ee\u9898\u7b49\u4e8e\u4e24\u4e2a\u5b50\u95ee\u9898\u4e4b\u548c\n\nreturn B(log 2 n, 1) # \u6700\u540e\u8fd4\u56de\u6839\u8282\u70b9\u7684\u95ee\u9898\n</code></pre> <p>\u5b9a\u4e49</p> <p>\u5728\u5e76\u884c\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u65f6\u95f4\u590d\u6742\u5ea6\u9700\u8981\u4f9d\u8d56processor\u7684\u4e2a\u6570</p> <ul> <li> <p>\\(T_p(n)\\)\uff1a\\(p\\)\u4e2aprocessor\u89e3\u51b3\u95ee\u9898\u89c4\u6a21\u4e3a\\(n\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6</p> <ul> <li> <p>Work\uff1a\\(=T_1(n)\\)\u662f\\(1\\)\u4e2aprocessor\u5de5\u4f5c\u65f6\u7684\u65f6\u95f4</p> <p>\u6bcf\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c\u7684\u548c\u7684\u603b\u65f6\u95f4</p> </li> <li> <p>Depth\uff1a\\(=T_{\\infty}(n)\\)\u662f\\(p=\\infty\\)\u65f6\u7684\u65f6\u95f4\u590d\u6742\u5ea6</p> <p>\u6700\u957f\u7684\u4f9d\u8d56\u94fe\u7684\u957f\u5ea6\uff0c\u7528\u6765\u5f62\u5bb9algorithm\u6709\u591a\u4e48\u7684parallel\uff08\uff09\u597d\u50cf\u5728cy\u7684ppt\u4e2d\u8fd9\u90e8\u5206\u5c31\u662f\u65f6\u95f4\u590d\u6742\u5ea6</p> </li> </ul> </li> </ul> <p>\u73b0\u5728\u6211\u4eec\u60f3\u6c42\u7684\u662f\u5f53\u6211\u4eec\u6709\u4efb\u610f\u7684\\(p\\)\u4e2aprocessor\u65f6\uff0c\\(T_p(n)\\)\u662f\u591a\u5c11\u3002</p> <p>\u5f88\u76f4\u89c2\u7684\u7ed3\u679c\u662f\\(T_p(n) = \\frac{W}{p}\\)\uff0c\u4f46\u662f\u8fd9\u4e2a\u7ed3\u679c\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u5f88\u660e\u663e\u6211\u4eec\u6bcf\u4e00\u7ea7\u7684\u8ba1\u7b97\u662f\u4f9d\u8d56\u4e8e\u524d\u4e00\u7ea7\u7684\u8ba1\u7b97\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0b\u754c\uff1a</p> \\[ T_p(n) \\geq max(D, \\frac{W}{p}) \\] <p>\u5bf9\u4e8e\u4e00\u822c\u7b97\u6cd5\u6240\u9700\u8981\u7684\u4e0a\u754c\uff0c\u6211\u4eec\u6709Brent's Theorem\uff1a</p> \\[ T_p(n) \\leq \\frac{W}{p} + D \\] \u8bc1\u660e <p>\u6574\u4e2a\u5de5\u4f5c\u7531\u4e8e\u662f\u5206\u5c42\u8fdb\u884c\u7684\uff0c\u6709\u76f8\u4e92\u4f9d\u8d56\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u4e0d\u4eff\u6309\u7167\u6bcf\u4e00\u5c42\u7684\u5de5\u4f5c\u8fdb\u884c\u7ec4\u7684\u5212\u5206\uff1a</p> <p>\\(g_1, g_2, \\cdots, g_D \\text{ and } \\sum_{i=1}^{D} g_i = W\\)</p> <p>\u5728\u6bcf\u5c42\u4e2d\u6211\u4eec\u6240\u9700\u8981\u7684\u65f6\u95f4\u5c31\u662f\u53ef\u6c42\u7684\u4e86\uff1a</p> <p>\\(T_p(n) = \\sum_{i=1}^{D} \\lceil \\frac{g_i}{p} \\rceil  \\leq \\sum_{i=1}^{D} (\\frac{g_i}{p} + 1) = \\frac{W}{p} + D\\)</p> <p>\u8fd9\u6837\u6211\u4eec\u5728summation\u95ee\u9898\u4e2d\uff0c\\(W = n\\)\uff0c\\(D = \\log_2 n\\)\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u7ed3\u679c</p> <p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a</p> <p>\u5bf9\u4e8e\u4e24\u4e2a\u95ee\u9898\\(A_1, A_2\\)\uff0c\u4ed6\u4eec\u5206\u522b\u6709\\(W_1, W_2\\)\u4e2a\u539f\u5b50\u64cd\u4f5c\uff0c\\(D_1, D_2\\)\u4e2a\u4f9d\u8d56\u94fe</p> <p>\u90a3\u4e48\u6211\u4eec\u5206\u522b\u5728\u4e32\u884c\u548c\u5e76\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u6c42\u89e3\u4ed6\u4eec\u7684\\(W\\)\u548c\\(D\\)</p> <ul> <li>\u4e32\u884c\uff1a\\(W = W_1 + W_2\\)\uff0c\\(D = D_1 + D_2\\)</li> <li>\u5e76\u884c\uff1a\\(W = W_1 + W_2\\)\uff0c\\(D = max(D_1, D_2)\\)</li> </ul> <p>\u901a\u8fc7\u4e0a\u9762\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u601d\u8def\uff1a</p> <p>\u5728\u5e76\u884c\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c3d\u53ef\u80fd\u8981\u5728\u4fdd\u8bc1\u76f8\u540c\\(W\\)\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\\(D\\)\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u7528\u5e76\u884c\u7b97\u6cd5\u63d0\u9ad8\u7684\u662f\\(D\\)\u7684\u4f18\u52a3\uff0c\u4f46\u662f\\(W\\)\u7684\u4f18\u52a3\u4e5f\u8981\u5c3d\u53ef\u80fd\u7684\u4fdd\u8bc1\uff09</p> <p>\u63a5\u4e0b\u6765\u7684\u4f8b\u5b50\u662f\uff1a</p> <p>Prefix Sum</p> <ul> <li>input\uff1a\\(A_1, A_2, \\cdots, A_n\\)</li> <li>output\uff1a\\(\\sum_{i=1} A_i, \\sum_{i=1}^{2} A_i, \\cdots, \\sum_{i=1}^{n} A_i\\)</li> </ul> <p>\u4e5f\u5c31\u662f\u6c42\u51fa\u524d\u7f00\u548c</p> <p>\u5728\u4e32\u884c\u7b97\u6cd5\u4e2d\uff1a</p> \\[ W = O(n) \\quad D = O(n) \\] <p>\u4e00\u4e2a\u7b80\u5355\u7684\u5e76\u884c\u7b97\u6cd5\u662f\uff1a\u6211\u4eec\u5bf9\u6bcf\u4e00\u9879\u6c42\u548c\u8fdb\u884c\u4e8c\u5206\u5e76\u884c\u8ba1\u7b97\uff0c\u5176\u4e2d\u7684\u6bcf\u4e00\u9879\u5de5\u4f5c\u91cf\u662f\\(O(j)\\)\uff0c\u6240\u4ee5</p> \\[ W = \\sum_{j=1}^{n} O(j) = O(n^2) \\quad D = O(\\log n) \\] <p>\u53ef\u4ee5\u770b\u5230\u867d\u7136\u5e76\u884c\u7b97\u6cd5\u5bf9\\(D\\)\u7684\u4f18\u5316\u5f88\u5927\uff0c\u4f46\u662f\u589e\u5927\u4e86\\(W\\)\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u7b97\u6cd5\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5bf9\u8fd9\u4e2a\u7b97\u6cd5\u8fdb\u884c\u4f18\u5316\uff1a</p> <p>\u5b9a\u4e49</p> <p>\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2atag\uff0c\\(C(h,i)\\)\uff0c\u8868\u793a\u5728\u7b2c\\(h\\)\u5c42\uff0c\u7b2c\\(i\\)\u4e2a\u8282\u70b9\u4f4d\u7f6e\u4e0a\u7684tag\u503c</p> <p>\u8fd9\u4e2a\u503c\u662f\u4ece\u6700\u5de6\u8fb9\u7684\u53f6\u5b50\u5f00\u59cb\uff0c\u4e00\u76f4\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u53f6\u5b50\u8282\u70b9\u7684\u548c</p> <p>\u50cf\u8fd9\u6837\uff1a</p> <pre><code>        o\n       / \\\n      o   o  //C(1,1) = A1 + A2   C(1,2) = A1 + A2 + A3 + A4\n     / \\  / \\\n    o  o  o  o\n    A1 A2 A3 A4\n</code></pre> <p>\u8fd9\u662f\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u8ba1\u7b97\uff1a\\(C(0, 1), C(0, 2), \\cdots, C(0, n)\\)</p> <pre><code>        o\n       /  \\\n      o    o  \n     / \\   / \\\n    o  o  \uff5co\uff5c o //\u8ba1\u7b97C(1,3)\n   / \\ /\\  /\\  /\\\n  o o o o  o o  o o\n[A1 .. A4][A5A6]\n</code></pre> <p>\u6211\u4eec\u6765\u8ba1\u7b97\\(C(h, i)\\)\uff08\u4ee5\\(h=1, i=3\\)\u4e3a\u4f8b\uff09</p> <p>\u6211\u4eec\u5c06\u8fd9\u4e2a\u8282\u70b9\u7684\u53f6\u5b50\u5206\u4e3a\uff1b\u4e24\u4e2a\u90e8\u5206\uff0c1-4\u548c5-6</p> <p>1-4\u7684\u548c\u662f\u8be5\u8282\u70b9\u7684\u7236\u4eb2\u7684\u5de6\u5144\u5f1f\u7684C\u503c\uff0c5-6\u662f\u8be5\u8282\u70b9\u7684B\u503c\uff08B\u662f\u5f53\u524d\u8282\u70b9\u7684\u53f6\u5b50\u503c\u4e4b\u548c\uff09</p> <p>\u5f97\u5230\uff1a</p> \\[ C(h, i) = C(h-1, \\frac{i-1}{2}) + B(h, i) \\] <p>\u8fd9\u662f\u5de6\u513f\u5b50\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u53f3\u513f\u5b50\u5c31\u76f8\u5bf9\u7b80\u5355\uff0c\u76f4\u63a5\u7b49\u4e8e\u7236\u4eb2\u7684C\u503c</p> \\[ C(h, i) = C(h-1, \\frac{i}{2}) \\] <p>\u5f53\u8282\u70b9\u662f\u6bcf\u4e00\u5c42\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\\(C(h, 0) = B(h, 0)\\)</p> <p>\u73b0\u5728\u5bf9\u590d\u6742\u5ea6\u8fdb\u884c\u5206\u6790\uff1a</p> <p>\u6211\u4eec\u8981\u5bf9B\u503c\u5148\u8fdb\u884c\u8ba1\u7b97\uff0c\u7136\u540e\u6c42\u51faC\u503c\uff0c\u518d\u5bf9\u8fd9\u4e24\u4e2a\u503c\u8fdb\u884c\u6c42\u548c</p> \\[ W_B = O(n) \\quad D_B = O(\\log n) \\] \\[ W_C = O(n) \\quad D_C = O(\\log n) \\] <p>\u5c06\u8fd9\u4e24\u4e2a\u503c\u4e32\u884c\u6c42\u548c</p> \\[ W = O(n) \\quad D = O(\\log n) \\]"},{"location":"notes/cs/algorithm/para.html#example","title":"Example","text":""},{"location":"notes/cs/algorithm/para.html#_1","title":"\u5e76\u884c\u6392\u5e8f","text":"<p>\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\uff0c\u6211\u4eec\u4e5f\u80fd\u5c06\u5de5\u4f5c\u8fc7\u7a0b\u5199\u4e3a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5728\u7b2c\\(i\\)\u5c42\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u6240\u6709\u5143\u7d20\u5206\u6210\u4e86\\(2^i\\)\u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u6709\\(\\frac{n}{2^i}\\)\u4e2a\u5143\u7d20\uff0c\u8fdb\u884c\u4e24\u4e24\u5408\u5e76\uff0c\u8fd9\u65f6\u6bcf\u4e2a\u8282\u70b9\u7684\\(W\\)\u662f\\(O(\\frac{n}{2^i})\\)\uff0c\\(D\\)\u4e5f\u662f\\(O(\\frac{n}{2^i})\\)\uff0c\u5728\u8fd9\u4e00\u5c42\u4e2d\u6240\u6709\u8282\u70b9\u8fdb\u884c\u6c42\u548c\uff0c\u6240\u4ee5\\(W\\)\u662f\\(O(n)\\)\uff0c\\(D\\)\u5e76\u884c\u5904\u7406\u7684\uff0c\u56e0\u6b64\u8fd8\u662f\\(O(\\frac{n}{2^i})\\)</p> <p>\u6700\u540e\u5bf9\u6bcf\u4e00\u5c42\u8fdb\u884c\u6c42\u548c\uff0c\\(W\\)\u662f\\(O(n \\log n)\\)\uff0c\\(D\\)\u662f\\(O(n)\\)</p> <p>\u5728\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u7b97\u6cd5\u7684\u74f6\u9888\u5728\u4e8emerge\uff0c\u5982\u679c\u6211\u4eec\u80fd\u5bf9merge\u8fdb\u884c\u4f18\u5316\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u63d0\u9ad8\u6574\u4e2a\u7b97\u6cd5\u7684\u6548\u7387\u3002</p> <p>\u56e0\u6b64\u95ee\u9898\u53d8\u6210\u4e86\uff1a</p> <p>merge</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\\(A\\)\u548c\\(B\\)\uff0c\u5982\u4f55\u5c06\u4ed6\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\\(C\\)\uff1f</p> <ul> <li>serial\uff1a\u5f97\u5230\u6bcf\u4e2a\u5143\u7d20\u5728\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff08rank\uff09\uff0c\u7136\u540e\u653e\u8fdb\u65b0\u7684\u6570\u7ec4</li> </ul> <pre><code>for i in range(1, n): pardo\n    C[i + rank(i, B) - 1] = A[i]\n    C[i + rank(i, A) - 1] = B[i]\n</code></pre> <p>\u8fd9\u4e2arank\u6cd5\u5f97\u5230\u7684\\(W\\)\u662f\\(O(n)\\)\uff0c\\(D\\)\u662f\\(O(1)\\)</p> <p>\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u7ed3\u679c\uff0c\u4f46\u95ee\u9898\u662f\u6211\u4eec\u600e\u6837\u5f97\u5230rank\uff1f</p> <p>\u95ee\u9898\u53d8\u6210\u4e86\uff1a</p> <p>rank</p> <p>\u5728\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u4e2d\uff0c\u5982\u4f55\u627e\u5230\u4e00\u4e2a\u5143\u7d20\u5728\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff1a</p> <p>\\(A\\)\u7684\u7b2c\\(i\\)\u4e2a\u5143\u7d20\u5728\\(B\\)\u4e2d\u7684rank\u662f\\(rank(i, B)\\)</p> <p>\\(B\\)\u7684\u7b2c\\(j\\)\u4e2a\u5143\u7d20\u5728\\(A\\)\u4e2d\u7684rank\u662f\\(rank(j, A)\\)</p> <ul> <li>serial:</li> </ul> <p>\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u8bbe\u7f6e\u53cc\u6307\u9488\uff1a</p> <pre><code>i = 1\nj = 1\nwhile i &lt;= n and j &lt;= n:\n    if A[i] &lt; B[j]:\n        rank(i, B) = j\n        i += 1\n    else:\n        rank(j, A) = i\n        j += 1\n</code></pre> <p>\u8fd9\u4e2a\u7b97\u6cd5\u5f97\u5230\u7684\\(W\\)\u662f\\(O(n)\\)\uff0c\\(D\\)\u662f\\(O(n)\\)\uff0c\u4e0d\u592a\u597d\uff0c\u662f\u7eaf\u79cd\u4e32\u884c\uff08\uff09</p> <ul> <li>Binary Search\uff1a</li> </ul> <pre><code>for i in range(1, n): pardo\n    rank(i, B) = binary_search(A, B[i])\n    rank(i, A) = binary_search(B, A[i])\n</code></pre> <p>\u8fd9\u4e2a\u7b97\u6cd5\u5f97\u5230\u7684\\(W\\)\u662f\\(O(n \\log n)\\)\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4e8c\u5206\u67e5\u627e\u7684\u590d\u6742\u5ea6\u662f\\(O(\\log n)\\)\uff0c\u7136\u540e\u6709\\(n\\)\u4e2a\u5143\u7d20</p> <p>\\(D\\)\u662f\\(O(\\log n)\\)\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4e8c\u5206\u67e5\u627e\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u6df1\u5ea6\u5c31\u662f\u5355\u6b21\u4e8c\u5206\u67e5\u627e\u7684\u6df1\u5ea6</p> <p>\u8fd9\u4e24\u79cd\u7b97\u6cd5\u4e00\u79cd\u662fW\u597d\uff0c\u4e00\u79cd\u662fD\u597d\uff0c\u90a3\u4e48\u6211\u4eec\u80fd\u4e0d\u80fd\u627e\u5230\u4e00\u4e2aW\u548cD\u90fd\u597d\u7684\u7b97\u6cd5\u5462\uff1f</p> <ul> <li>parallel ranking</li> </ul> <p>\u8fd9\u4e2a\u7b97\u6cd5\u662f\u7ed3\u5408\u4e86\u4e0a\u8ff0\u4e24\u79cd\u65b9\u6cd5\u7684\u4e00\u79cd\u7b97\u6cd5\uff0c\u5728serial\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5b8c\u5168\u4e32\u884c\uff0c\u5bfc\u81f4\u6df1\u5ea6\u5f88\u5927\uff0c\u5728binary\u4e2d\uff0c\u6211\u4eec\u6bcf\u4e00\u6b65\u90fd\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u5bfc\u81f4\u5de5\u4f5c\u91cf\u5f88\u5927\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u6311\u9009\u4e00\u90e8\u5206\u5173\u952e\u5143\u7d20\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u5173\u952e\u5143\u7d20\u95f4\u9694\u51fa\u7684\u6570\u7ec4\u5757\u8fdb\u884c\u5e76\u884c\u7684\u4e32\u884c\u8fde\u63a5\uff0c\u8fd9\u6837\u5c31\u80fd\u5927\u5927\u51cf\u5c0f\u6df1\u5ea6\uff0c\u540c\u65f6\u4e5f\u80fd\u51cf\u5c0f\u5de5\u4f5c\u91cf</p> <p>parallel ranking</p> <ol> <li> <p>\u95f4\u9694\\(k\\)\u4e2a\u5143\u7d20\uff0c\u5bf9\u4e24\u4e2a\u6570\u7ec4\u6311\u9009\u4e00\u4e2a\u5143\u7d20\\(A[i], B[i]\\)\u8fdb\u884cbinary ranking\uff0c\u7bad\u5934\u6307\u5411\u5bf9\u65b9\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u6bcf\u5bf9\u7bad\u5934\u5c06\u4e24\u4e2a\u6570\u7ec4\u5206\u6210k\u4e2agroup</p> <p>\u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u4f1a\u5f62\u6210\u4ea4\u53c9\uff08\u63a8\u7406\u4e00\u4e0b\u5c31\u80fd\u77e5\u9053\uff0c\u5927\u5c0f\u5173\u7cfb\u4f1a\u53d1\u751f\u77db\u76fe\uff09  </p> \\[ W = O(\\frac{2n}{k} \\log n) \\quad D = O(\\log n) \\] </li> <li> <p>\u5e76\u884c\u5730\u5c06\u6bcf\u4e2agroup\u8fdb\u884cserial rank</p> \\[ W = O(n) \\quad D = O(k) \\] </li> </ol> <p>Total:</p> \\[ W = O(\\frac{2n}{k} \\log n + n) \\quad D = O(\\log n + k) \\] <p>\u5f53\\(k = \\log n\\)\u65f6\uff0c\\(W = O(n)\\)\uff0c\\(D = O(\\log n)\\)\uff0c\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u7ed3\u679c </p> <p>\u5f97\u5230\u8f83\u597d\u7684ranking\u65b9\u6cd5\u540e\uff0c\u6211\u4eec\u5728\u8ba1\u7b97merge\u5f00\u9500\u65f6\u5c31\u80fd\u5f97\u5230\\(W = O(n)\\)\uff0c\\(D = O(\\log n)\\)</p> <p>\u8fd9\u65f6\u5019\u6574\u4e2amergesort\u7684\\(D_i\\)\u53ef\u4ee5\u5bf9\\(O(\\frac{n}{2^i})\\)\u53d6\u5bf9\u6570\uff0c\u6c42\u548c\u540e\u5f97\u5230\\(D = O((\\log n)^2)\\)</p>"},{"location":"notes/cs/algorithm/para.html#maximum-finding","title":"Maximum Finding","text":"<p>\u7ed9\u51fa\\(n\\)\u4e2a\u6570\uff0c\u6c42\u51fa\u5176\u4e2d\u7684\u6700\u5927\u503c</p> <ul> <li> <p>serial:</p> <p>\\(W = O(n) \\quad D = O(n)\\)</p> </li> <li> <p>summation algorithm</p> <p>\u5c06\u52a0\u6cd5\u6539\u6210max</p> \\[ W = O(n) \\quad D = O(\\log n) \\] </li> <li> <p>compare all pairs</p> <p>\u5728\u4e0d\u8003\u8651Work\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528\u5e76\u884c\uff1a</p> <pre><code>for i in range(1, n): pardo\n    B[i] = 0 # \u521d\u59cb\u5316 \u6807\u8bb0\u503c\u5168\u90e8\u4e3a0\nfor every pair (i, j): pardo\n    if A[i] &lt; A[j]:\n        B[i] = 1  #\u5c06\u5c0f\u7684\u6807\u8bb0\u4e3a1\n    else:\n        B[j] = 1\n</code></pre> </li> </ul> <p>\u8fd9\u6837\u6700\u7ec8\u6807\u8bb0\u503c\u8fd8\u662f0\u7684\u5143\u7d20\u5c31\u662f\u6700\u5927\u503c</p> \\[ W = O(n^2) \\quad D = O(1) \\] <p>\u95ee\u9898</p> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u4f1a\u53d1\u73b0\u5bf9\u6807\u8bb0\u503c\u8fdb\u884c\u66f4\u6539\u65f6\u53ef\u80fd\u591a\u4e2aprocessor\u540c\u65f6\u8fdb\u884c\uff0c\u56e0\u6b64\u8981\u5141\u8bb8\uff0c\u4f46\u662f\u8fd8\u8981\u4fdd\u8bc1\u5199\u5165\u65f6\u7684\u6570\u636e\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528 common CRCW \u6a21\u578b</p> <ul> <li> <p>Divide and Conquer</p> <ol> <li>\u5c06\u6574\u4e2a\u95ee\u9898\u62c6\u5206\u6210\\(\\sqrt{n}\\)\u4e2a\u5b50\u95ee\u9898\uff0c\u6bcf\u4e2a\u90e8\u5206\u6709\\(\\sqrt{n}\\)\u4e2a\u5143\u7d20</li> <li>\u5728\u6bcf\u4e2a\u5b50\u95ee\u9898\u4e2d\u7528compare all pairs\u7684\u65b9\u6cd5\u6c42\u51fa\u6700\u5927\u503c</li> </ol> <p>\u5199\u51fa\u9012\u63a8\u5173\u7cfb\u5f0f\uff1a</p> \\[ W(n) = \\sqrt{n} W(\\sqrt{n}) + O(n) \\] \\[ D(n) = D(\\sqrt{n}) + O(1) \\] <p>\u6700\u540e\u89e3\u5f97\uff1a</p> \\[ W(n) = O(n \\log \\log n) \\quad D(n) = O(\\log \\log n) \\] </li> </ul> <p>\u540c\u6837\u7684\u6211\u4eec\u4f1a\u60f3\uff0c\u6709\u6ca1\u6709\u80fd\u591f\u964d\u4f4eWork\u7684\u65b9\u6cd5\uff1a</p> <ul> <li> <p>\u5206\u5757\u540e\u518dD&amp;C</p> <ol> <li>\u5c06\u6574\u4e2a\u95ee\u9898\u62c6\u5206\u6210\\(k\\)\u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u6709\\(\\frac{n}{k}\\)\u4e2a\u5143\u7d20</li> <li>\u5728\u6bcf\u4e2a\u5b50\u95ee\u9898\u4e2d\u7528compare all pairs\u7684\u65b9\u6cd5\u6c42\u51fa\u6700\u5927\u503c</li> <li>\u5c06\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u6700\u5927\u503c\u8fdb\u884cD&amp;C\u6bd4\u8f83\uff0c\u5f97\u5230\u5168\u5c40\u6700\u5927\u503c</li> </ol> </li> </ul> <p>\u7b2c\u4e00\u6b65\u7684\\(W\\)\u662f\\(O(\\frac{n}{k})\\)\uff0c\\(D\\)\u662f\\(O(\\frac{n}{k})\\)</p> <p>\u7b2c\u4e8c\u6b65\u7684\\(W\\)\u662f\\(O(k \\log \\log k)\\)\uff0c\\(D\\)\u662f\\(O(\\log \\log k)\\)</p> <p>\u6c42\u548c\uff0c\u4ee4\\(k = \\log \\log n\\)\uff0c\u5f97\u5230\uff1a</p> \\[ W = O(n) \\quad D = O(\\log \\log n) \\] <ul> <li>Random Sampling</li> </ul> <p>\u901a\u8fc7\u968f\u673a\u53d6\u6837\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\\(W=O(n) \\quad D=O(1)\\)\u7684\u7b97\u6cd5</p> <p>\u601d\u60f3\u5c31\u662f\u901a\u8fc7\u968f\u673a\u53d6\u6837\u540e\u5e76\u884c\u4e24\u4e24\u6bd4\u8f83\uff0c\u4e0d\u65ad\u7f29\u5c0f\u6570\u7ec4\u7684\u89c4\u6a21\uff0c\u76f4\u5230\u6570\u7ec4\u89c4\u6a21\u8fbe\u5230\\(\\sqrt{n}\\)\uff0c\u7136\u540e\u4f7f\u7528compare all pairs\u7684\u65b9\u6cd5</p> <ol> <li>\u5728A\u4e2d\u968f\u673a\u53d6\u6837\\(n^\\frac{7}{8}\\)\u4e2a\u5143\u7d20\uff0c\u5f62\u6210\u6570\u7ec4\\(B\\)</li> <li>\u5728B\u4e2d\u5206\u5757\uff0c\u6bcf\u5757\u6709\\(n^\\frac{1}{8}\\)\u4e2a\u5143\u7d20\uff0c\u8fd9\u6837\\(B\\)\u5c31\u6709\\(n^\\frac{3}{4}\\)\u4e2a\u5757</li> <li>\u7528compare all pairs\u7684\u65b9\u6cd5\u6c42\u51fa\u6bcf\u4e00\u7ec4\u7684\u6700\u5927\u503c</li> <li>\u5f97\u5230\u4e00\u4e2aC\u53ea\u6709\\(n^\\frac{3}{4}\\)\u4e2a\u5143\u7d20\u7684\u6570\u7ec4</li> <li>\u5bf9C\u5206\u4e3a\\(n^\\frac{1}{2}\\)\u4e2a\u5757\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u5757\u8fdb\u884ccompare all pairs\uff0c\u5f97\u5230\u6700\u5927\u503c</li> <li>\u5f97\u5230D\uff0cD\u4e2d\u53ea\u6709\\(n^\\frac{1}{2}\\)\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u5bf9D\u8fdb\u884ccompare all pairs\uff0c\u5f97\u5230\u6700\u5927\u503c</li> </ol> <p>random sampling\uff1a</p> <pre><code>for i in range(1, n^(7/8)): pardo\n    B[i] = random select(A)\n</code></pre> <p>\u8fd9\u6837\u5f97\u5230\u7684\u7b97\u6cd5\u51c6\u786e\u6027\u5f88\u9ad8\uff0c\u51fa\u73b0\u9519\u8bef\u7684\u6982\u7387\u662f\\(O(\\frac{1}{n})\\)</p>"},{"location":"notes/cs/algorithm/random.html","title":"Randomized Algorithms","text":""},{"location":"notes/cs/algorithm/random.html#intro","title":"Intro","text":"<ul> <li> <p>Deterministic Algorithms: \u786e\u5b9a\u8f93\u5165\u8f93\u51fa</p> </li> <li> <p>Randomized Algorithms: \u7ed9\u5b9a\u56fa\u5b9a\u8f93\u5165 \u968f\u673a\u8f93\u51fa</p> </li> </ul>"},{"location":"notes/cs/algorithm/random.html#example","title":"Example","text":""},{"location":"notes/cs/algorithm/random.html#hiring-problem","title":"Hiring Problem","text":"<p>Hiring condition</p> <p>\u6709n\u4e2a\u5019\u9009\u4eba\uff0c\u5728\u7ed3\u675f\u6bcf\u4e00\u6b21\u9762\u8bd5\u7684\u65f6\u5019\u5fc5\u987b\u7acb\u5373\u51b3\u5b9a\u662f\u5426\u5f55\u7528\u5e76\u4e14\u4e0d\u80fd\u53cd\u6094</p> <ol> <li>\u9009\u62e9\u6700\u597d\u7684candidate</li> <li>\u5728\u80fd\u591f\u4fdd\u8bc1\u9009\u51fa\u6700\u597d\u7684candidate\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u4ecb\u7ecd\u96c7\u4f63\u7684\u6b21\u6570</li> </ol> <p>\u5f88\u7b80\u5355\u76f4\u63a5\u7684\u601d\u8def\u5c31\u662f\u6bcf\u6b21\u9762\u8bd5\u5230\u4e86\u4e00\u4e2a\u5728\u5df2\u7ecf\u9762\u8bd5\u7ed3\u675f\u7684candidate\u4e2d\u6700\u597d\u7684\uff0c\u7136\u540e\u5f55\u7528\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2adeterministic\u7b97\u6cd5\u3002</p> <ul> <li>\u4f46\u662f\u663e\u7136\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679ccandidate\u8bc4\u4f30\u662f\u9012\u589e\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u4f1a\u5f55\u7528\u6240\u6709candidate\uff0c\u663e\u7136\u4e0d\u662f\u6700\u4f18\u7684\u3002</li> </ul> <p>Randomly Permute</p> <p>\u5bf9candidate\u8fdb\u884c\u968f\u673a\u6392\u5217\u540e\u518d\u91c7\u7528\u786e\u5b9a\u7b97\u6cd5\uff0c\u8fd9\u6837\u5728\u671f\u671b\u4e0b\u53ef\u4ee5\u4fdd\u8bc1hire\u4e0d\u8d85\u8fc7\\(\\ln{n}\\)\u6b21</p> Prove <p>\u8bbe\u5b9a\u4e00\u4e2a\u4e8b\u4ef6\\(A_i\\)\uff0c\u8868\u793a\u7b2c\\(i\\)\u4e2acandidate\u662f\u524d\\(i\\)\u4e2acandi\u4e2d\u6700\u597d\u7684\uff0c\u90a3\u4e48\u663e\u7136\\(P(A_i) = \\frac{1}{i}\\)</p> <p>\u5bf9\u6bcf\u4e2a\u5019\u9009\u8005\\(X_i\\)\uff0c\u5982\u679c\u6ee1\u8db3\u4e8b\u4ef6\\(A_i\\)\uff0c\u90a3\u4e48\u5c31\u5f55\u7528\uff0c\\(X_i=1\\)\uff0c\u5426\u5219\\(X_i=0\\)</p> <p>\u5bf9\\(X_i\\)\u6c42\u671f\u671b\uff0c\u6709 $$ E[X_i] = P(A_i) \\cdot 1 + (1-P(A_i)) \\cdot 0 = \\frac{1}{i} $$</p> <p>\u5bf9\u6240\u6709\\(i\\)\u6c42\u548c\uff0c\u6709 $$ E[\\sum_{i=1}^{n} X_i] = \\sum_{i=1}^{n} E[X_i] = \\sum_{i=1}^{n} \\frac{1}{i} \\leq \\ln{n}+1 $$</p> <p>Variant</p> <p>\u73b0\u5728\u95ee\u9898\u7684\u53d8\u4f53\u662f\uff0c\u5982\u679c\u6210\u672c\u6709\u9650\uff0c\u6211\u4eec\u53ea\u80fd\u96c7\u4f63\u4e00\u4e2acandi\uff0c\u8fd9\u65f6\u600e\u6837\u505a\u624d\u80fd\u6700\u5927\u5316\u9009\u5230\u6700\u597dcandi\u7684\u6982\u7387</p> <p>\u89e3\u51b3\uff1a</p> <ol> <li>Randomly Permute</li> <li>\u9762\u8bd5\u524d\\(k\\)\u4e2acandidate\uff0c\u4f46\u662f\u4e0d\u96c7\u4f63</li> <li> <p>for i = k+1 to n:</p> <p>\u5982\u679c\u7b2c\\(i\\)\u4e2acandidate\u6bd4\u524d\\(k\\)\u4e2acandidate\u4e2d\u6700\u597d\u7684\u8fd8\u8981\u597d\uff0c\u90a3\u4e48\u5c31\u96c7\u4f63</p> </li> </ol> <p>\u6211\u4eec\u8981\u8ba1\u7b97\u9009\u5230\u6700\u597dcandi\u7684\u6982\u7387\uff1a</p> \\[ P(\\text{hire the best}) = \\sum_{i=k+1}^{n} P(\\text{best is at i } \\cap \\text{hire him}) \\] <p>\u6211\u4eec\u8bb0\u7b49\u53f7\u53f3\u4fa7\u524d\u9762\u7684\u4e8b\u4ef6\u4e3a\\(A_i\\)\uff0c\u540e\u9762\u7684\u4e8b\u4ef6\u4e3a\\(B_i\\)\uff0c\u90a3\u4e48\u6709</p> \\[ = \\sum_{i=k+1}^{n} P(A_i)P(B_i|A_i) \\] <p>A\u4e8b\u4ef6\u7684\u6982\u7387\u6bd4\u8f83\u597d\u8ba1\u7b97\uff0c\u5bf9\u4e8eA\u53d1\u751f\u65f6B\u7684\u6982\u7387\uff0c\u5c31\u662f\u6307\u7b2c\\(i\\)\u4e2acandi\u51fa\u73b0\u65f6\uff0c\u4ed6\u662f\u5728\u7b2c\\(k\\)\u5230\u7b2c\\(i-1\\)\u4e2acandi\u4e2d\u6700\u597d\u7684\uff0c\u4e5f\u5373\u662f\u8bf4\u5728\u524d\\(i-1\\)\u4e2acandi\u4e2d\uff0c\u6700\u597d\u7684\u90a3\u4e2a\u5728\\(1\\)\u5230\\(k\\)\u4e4b\u95f4\uff0c\u90a3\u4e48\u6709</p> \\[ = \\sum_{i=k+1}^{n} \\frac{1}{i} \\cdot \\frac{k}{i-1} \\] \\[ = \\frac{k}{n} \\sum_{i=k}^{n-1} \\frac{1}{i} \\geq \\frac{k}{n} \\ln{\\frac{n}{k}} \\] <p>\u6c42\u5bfc\u53ef\u4ee5\u5f97\u5230\u5f53\\(k = \\frac{n}{e}\\)\u65f6\uff0c\u6982\u7387\u6700\u5927\uff0c\u4e3a\\(\\frac{1}{e}\\)</p>"},{"location":"notes/cs/algorithm/random.html#3sat-problem","title":"3SAT Problem","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5e03\u5c14\u516c\u5f0f\u662f\u5426\u5b58\u5728\u4e00\u79cd\u8d4b\u503c\uff0c\u4f7f\u5f97\u8be5\u516c\u5f0f\u4e3a\u771f\uff0c\u4f8b\u5982\uff1a</p> \\[ (x_1 \\lor x_2 \\lor x_4) \\land (\\neg x_1 \\lor \\neg x_2 \\lor x_4) \\land (x_1 \\lor \\neg x_2 \\lor \\neg x_3) \\] <p>\u5176\u4e2d\\(n\\)\u662f\u53d8\u91cf\u4e2a\u6570\uff0c\\(k\\)\u662f\u5b50\u53e5clause\u4e2a\u6570</p> <p>Monte Carlo</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u53d8\u91cf\\(x_i\\)\uff0c\u6211\u4eec\u4ee4\u5176\u4e3a\u771f\u7684\u6982\u7387\u6216\u8005\u4e3a\u5047\u7684\u6982\u7387\u90fd\u4e3a0.5\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2aclause\u4e3a\u771f\u7684\u6982\u7387\u4e3a\\(\\frac{7}{8}\\)</p> <p>\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5728\u671f\u671b\u4e0b\uff0c\u968f\u673a\u8d4b\u503c\u4f7f\u5f973SAT\u95ee\u9898\u4e3a\u771f\u7684\u6982\u7387\u4e3a\\(\\frac{7}{8}k\\)</p> <p>\u5b9a\u4e49\uff1a\\(Y\\)\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u53e5\u4e2a\u6570\uff0c\u5219\\(E[Y] = \\frac{7}{8}k\\)</p> <p>\u6211\u4eec\u77e5\u9053\\(Y\\)\u7684\u671f\u671b\u503c\u662f\u8fd9\u4e2a\u6570\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\\(P(Y \\geq \\frac{7}{8}k) \\geq 0\\)\uff08\u53ef\u4ee5\u53cd\u8bc1\u5f97\u5230\uff09</p> <p>\u8fd9\u4e2a\u7b97\u6cd5\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u53ef\u4ee5\u4fdd\u8bc1\u5728\\(O(n)\\)\u5185\u89e3\u51b3\u95ee\u9898\uff0c\u4f46\u662f\u5bf9\u4e8e\u89e3\u7684\u8d28\u91cf\uff0c\u6211\u4eec\u53ea\u80fd\u4fdd\u8bc1\u5728\u671f\u671b\u4e0b\u6709\\(\\frac{7}{8}k\\)\u4e2a\u662f\u6b63\u786e\u7684</p> <p>\u8fd9\u79cd\u7b97\u6cd5\u79f0\u4e3aMonte Carlo\u7b97\u6cd5</p> <p>Las Vegas</p> <p>\u6211\u4eec\u73b0\u5728\u60f3\u77e5\u9053\u4e00\u4e2a\u6982\u7387\uff0c\u5c31\u662f\u6bcf\u8dd1\u4e00\u6b21\u7b97\u6cd5\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u53e5\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e\\(\\frac{7}{8}k\\)\u7684\u6982\u7387\u662f\u591a\u5c11</p> <p>\u5927\u4f53\u7684\u601d\u8def\u662f:</p> <p>\u53d6\u6574\u6570\\(k'\\)\uff0c\u662f\u5f0f\u5b50\\(\\frac{7}{8}k\\)\u7684\u53d6\u6574\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5c06\u671f\u671b\u62c6\u5206\uff1a</p> \\[ \\begin{aligned} \\frac{7}{8}k = E[Y] &amp;= \\sum_{i=0}^{k}{i} \\cdot P(Y=i) \\\\ &amp;= \\sum_{i=0}^{k'} {i} \\cdot P(Y=i) + \\sum_{i=k'+1}^{k}{i} \\cdot P(Y=i) \\\\ &amp;\\leq k' \\cdot \\sum_{i=0}^{k'} P(Y=i) + k \\cdot \\sum_{i=k'+1}^{k} P(Y=i) \\\\ &amp;= k' \\cdot P(Y \\leq \\frac{7}{8} k) + k \\cdot P(Y \\geq \\frac{7}{8}k) \\\\ &amp;\\leq k' + k \\cdot P(Y \\geq \\frac{7}{8}k) \\end{aligned} \\] <p>\u6240\u4ee5</p> \\[ k \\cdot P(Y \\geq \\frac{7}{8}k) \\geq {\\frac{7}{8}k - k'} \\] <p>\u53d6\\(k' = \\frac{7}{8}k\\)\uff0c\u5219\u6709</p> \\[ P(Y \\geq \\frac{7}{8}k) \\geq \\frac{1}{8k} \\] <p>\u6240\u4ee5\u4e5f\u5c31\u662f\u8bf4\u5728\u671f\u671b\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u8dd1\\(8k\\)\u6b21\u7b97\u6cd5\uff0c\u624d\u80fd\u4fdd\u8bc1\u6ee1\u8db3\u6761\u4ef6\u5b50\u53e5\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e\\(\\frac{7}{8}k\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u89e3\u7684\u8d28\u91cf\u662f\u53ef\u4ee5\u4fdd\u8bc1\u7684\uff0c\u4f46\u662frunning time\u53ea\u80fd\u5728\u671f\u671b\u4e0b\u6c42\u7b97</p> <p>\u8fd9\u79cd\u7b97\u6cd5\u79f0\u4e3aLas Vegas\u7b97\u6cd5</p>"},{"location":"notes/cs/algorithm/random.html#quicksort","title":"QuickSort","text":"<p>A Pivot is good if: \u80fd\u5747\u4f7f\u5f97\u5206\u51fa\u7684\u4e24\u4e2a\u5b50\u96c6\u5927\u5c0f\u5927\u4e8e\u539f\u6570\u7ec4\u7684\\(\\frac{1}{4}\\)</p> <ul> <li> <p>Idea 1\uff1arandomly pick pivot\uff0c\u5982\u679c\u662f\u597d\u7684\u5c31\u7528\uff0c\u4e0d\u662f\u5c31\u91cd\u9009</p> <p>\u6709\\(P(\\text{good}) = \\frac{1}{2}\\)\uff0c\u671f\u671b\u4e0b\u6bcf\u4e00\u5c42\u9012\u5f52\u9700\u8981\\(O(n)\\)\u65f6\u95f4\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n \\log{n})\\)</p> </li> <li> <p>Idea 2\uff1arandomly pick pivot\uff0cuse it anyway</p> <p>\u540c\u6837\u6709\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n \\log{n})\\)\uff0c</p> </li> </ul>"},{"location":"notes/cs/algorithm/random.html#implementation","title":"Implementation","text":"<p>\u7a0b\u5e8f\u4e2d\u7684random permutation\u65b9\u6cd5\uff1a</p> <ul> <li>\u8bbe\u7f6e\u968f\u673a\u952e\u503c</li> </ul> <p>\u5728\\(a_1, a_2, \\cdots, a_n\\)\u4e2d\uff0c\u8bbe\u7f6e\\(a_i\\)\u7684\u952e\u503c\u4e3a\\(k_i\\)\uff0c\\(k_i\\)\u4e3a\\(1\\)\u5230\\(n^3\\)\u7684\u968f\u673a\u6570</p> <p>\u952e\u503c\u76f8\u540c\u7684\u6982\u7387\u4e0d\u4f1a\u8d85\u8fc7$\\frac{1}{n}</p> <ul> <li>Random Shuffle</li> </ul> <pre><code>for i in range(n):\n    j = random.randint(1, i)\n    swap(a[i], a[j])\n</code></pre>"},{"location":"notes/cs/algorithm/ads/ADS.html","title":"ADS","text":""},{"location":"notes/cs/algorithm/ads/ADS.html#avl-tree","title":"AVL Tree","text":""},{"location":"notes/cs/algorithm/ads/ADS.html#intro","title":"Intro","text":"<p>\u5728\u6570\u636e\u96c6\u4e2d\u5feb\u901f\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u3001\u6392\u5e8f\u7b49\u64cd\u4f5c\u65f6\u5177\u6709\u8f83\u597d\u7684\u6548\u679c</p> <p>Target\uff1aSpeed up</p> <p>\u57fa\u672c\u601d\u60f3\uff1a</p> <p>height balance\uff1a\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\uff08\u5e73\u8861\u56e0\u5b50BF\uff09\u4e0d\u8d85\u8fc71</p> \\[ BF=| h_l - h_r | \\leq 1\\] <p>PS:\u6811\u7684\u9ad8\u5ea6\u8ba1\u7b97\uff1a\u7531\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84 -&gt; \u8fdb\u884c\u9ad8\u5ea6\u5e73\u8861</p>"},{"location":"notes/cs/algorithm/ads/ADS.html#operation","title":"Operation","text":"<p>Rotation \u5728\u4e0d\u6539\u53d8\u6811\u7684\u76f8\u5bf9\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u65cb\u8f6c\u64cd\u4f5c\u6765\u8c03\u6574\u6811\u7684\u7ed3\u6784\uff0c\u4f7f\u5f97\u6811\u7684\u9ad8\u5ea6\u5e73\u8861</p> <p></p> <p>\u60f3\u8c61\u5c06\u9700\u8981\u88ab\u63d0\u9ad8\u7684\u8282\u70b9\u63d0\u9ad8\uff0c\u5c06\u9700\u8981\u88ab\u964d\u4f4e\u7684\u8282\u70b9\u964d\u4f4e\uff0c\u7136\u540e\u5c06\u8fd9\u4e24\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u8fde\u63a5\u5230\u65b0\u7684\u8282\u70b9\u4e0a</p> <p>Time Complexity: \\(O(1)\\)</p> <p>\u56e0\u4e3a\u53ea\u6709\u56db\u4e2a\u8282\u70b9\u66f4\u65b0</p> <p>B\u3001A\u3001y\u3001A\u7684\u8001\u5b50</p> <ol> <li>RR Rotation or LL Rotation \u53f3\u5b50\u6811\u7684\u53f3\u8282\u70b9\u63d2\u5165\u5bfc\u81f4\u53f3\u5b50\u6811\u7684\u7236\u8282\u70b9BF=2\uff0c\u5c06BF=2\u7684\u53f3\u5b50\u8282\u70b9\u63d0\u9ad8\uff0cB\u8fde\u63a5\u7684\u5de6\u5b50\u6811\u8fde\u63a5\u5230A\u7684\u53f3\u5b50\u6811\u4e0a</li> </ol> <p></p> <p>\u82e5\u9047\u5230\u591a\u4e2a\u8282\u70b9BF\u975e\u6cd5\u7684\u60c5\u51b5\uff0c\u53ea\u9700\u8981\u5bf9\u6700\u5e95\u90e8\u7684\u4e24\u4e2a\u8282\u70b9\u8fdb\u884c\u65cb\u8f6c\u64cd\u4f5c\u5373\u53ef</p> <ol> <li>LR Rotation or RL Rotation \u5de6\u5b50\u6811\u7684\u53f3\u5b50\u8282\u70b9\u589e\u52a0\u5bfc\u81f4\u5de6\u5b50\u6811\u7684\u7236\u8282\u70b9BF=2\uff0c\u5c06\u5de6\u5b50\u6811\u7684\u53f3\u8282\u70b9\u63d0\u9ad8\u4e24\u6b21</li> </ol> <p></p> <p>\u6309\u7167\u7247\u4e0a\u7684\u89e3\u91ca\u6839\u636e\u6811\u7684\u5408\u6cd5\u6027\u53ef\u4ee5\u63a8\u51fa\u4e2d\u95f4\u6b65\u9aa4 \u4e5f\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a \u5728\u5bf9Mar\u8fdb\u884c\u65cb\u8f6c\u65f6\uff0cMar\u7684\u5de6\u4f4d\u662f\u88ab\u5360\u7528\u7684\uff0c\u800cMar\u7684\u7236\u4eb2\u662f\u6bd4Mar\u5c0f\u7684\uff0c\u53ea\u6709\u628aJan\u79fb\u5f00\u624d\u80fd\u7ed9Aug\u817e\u51fa\u4f4d\u7f6e</p> <ul> <li>\u6700\u5c0f\u8282\u70b9\u6570\uff1a</li> </ul> <p>\\(n_h\\)\uff1a\u9ad8\u5ea6\u4e3ah\u7684\u6700\u5c0f\u8282\u70b9\u6570 \u4e3a\u4e86\u4fdd\u6301\u6811\u6709h\u7684\u9ad8\u5ea6\uff0c\u81f3\u5c11\u4e00\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u4e3ah-1\uff0c\u53e6\u4e00\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u4e0e\u4ed6\u76f8\u5dee\u4e3a1\uff0c= n-2 \u56e0\u6b64\uff1a</p> \\[ n_h = n_{h-1} + n_{h-2} + 1 \\] <p>\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ n_h=F_{h+3}-1   ,h \\geq -1  \\] \\[ \\text{F is Fibonacci Number with } F_0=0, F_1=1 \\]"},{"location":"notes/cs/algorithm/ads/ADS.html#splay-tree","title":"Splay Tree","text":""},{"location":"notes/cs/algorithm/ads/ADS.html#intro_1","title":"Intro","text":"<p>Target: \u7531\u7a7a\u6811\u8fdb\u884cM\u4e2a\u8fde\u7eed\u64cd\u4f5c\u6700\u591a\u9700\u8981\\(O(M \\log N)\\)\u7684\u65f6\u95f4</p> <p>\u5373\uff1aAmortized Time Complexity \u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6 = \\(O(log N)\\)</p>"},{"location":"notes/cs/algorithm/ads/ADS.html#operation_1","title":"Operation","text":"<p>\u5c06\u6700\u8fd1\u8bbf\u95ee\u7684\u8282\u70b9\u63d0\u5347\u5230\u6839\u8282\u70b9\uff0c\u8fd9\u4e00\u64cd\u4f5c\u901a\u8fc7\u65cb\u8f6c\u6765\u5b9e\u73b0</p> <p>Splay Tree vs AVL Tree</p> <p>\u8981\u6ce8\u610f\u4e0d\u8981\u5c06splay tree\u548cAVL\u6811\u7684\u64cd\u4f5c\u8fdb\u884c\u53c2\u7167\uff0csplay tree\u7684\u64cd\u4f5c\u5bf9\u8c61\u662f\u4e00\u76f4\u56fa\u5b9a\u7684\uff0c\u800cAVL\u6811\u7684\u64cd\u4f5c\u5bf9\u8c61\u662f\u6839\u636e\u5e73\u8861\u56e0\u5b50\u51b3\u5b9a\u7684</p> <ul> <li>Zig Single Rotation</li> </ul> <p>\u6ca1\u6709G\uff0c\u53ea\u8f6c\u4e00\u6b21X</p> <ul> <li>Zig-zag</li> </ul> <p>Double Rotation \u8f6c\u4e24\u6b21X</p> <p>\u50cfAVL\u6811\u7684LR\u548cRL</p> <ul> <li>Zig-zig</li> </ul> <p>Single Rotation  \u5148\u8f6cX\u518d\u8f6cP</p> <p>Operation</p> InsertDelete <ul> <li>\u5c06\u65b0\u8282\u70b9\u63d2\u5165\u5230\u6811\u4e2d</li> <li>\u5c06\u65b0\u8282\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9</li> </ul> <ul> <li>\u5c06\u5f85\u5220\u9664\u8282\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9</li> <li>\u5c06\u6839\u8282\u70b9\u5220\u9664\u5f97\u5230\u4e24\u4e2a\u5b50\u6811T1\u548cT2</li> <li>FindMax(T1)\u6216\u8005FindMin(T2)\u4f5c\u4e3a\u65b0\u7684\u6839\u8282\u70b9</li> </ul>"},{"location":"notes/cs/algorithm/ads/ADS.html#red-black-tree","title":"Red-Black Tree","text":""},{"location":"notes/cs/algorithm/ads/ADS.html#intro_2","title":"Intro","text":"<p>AVL\u6811\u662f\u901a\u8fc7\u5b9e\u73b0\u9ad8\u5ea6\u5e73\u8861\u6765\u8fdb\u884c\u4f18\u5316 \u800c\u7ea2\u9ed1\u6811\u662f\u901a\u8fc7\u5b9e\u73b0\u989c\u8272\u5e73\u8861\u6765\u8fdb\u884c\u4f18\u5316</p> <p>NIL\u8282\u70b9</p> <p>\u5728\u6811\u7684\u4ee3\u7801\u4e2d\uff0c\u9047\u5230\u4e86\u53f6\u5b50\u7ed3\u70b9\u65f6\u9700\u8981<code>if</code>\u5224\u5b9a\u7a7a\uff0c\u5e38\u7528\u4e00\u4e2a\u54e8\u5175\u8282\u70b9\u6765\u907f\u514d\u5927\u91cf\u7684<code>if</code>\u8bed\u53e5\uff0c\u4f46\u662f\u4e3a\u4e86\u907f\u514d\u7a7a\u95f4\u7684\u6d6a\u8d39\uff0c\u5728\u7ea2\u9ed1\u6811\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2aNIL\u8282\u70b9\u6765\u4ee3\u66ff\u54e8\u5175\u8282\u70b9,\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u548c\u6839\u8282\u70b9\u90fd\u6307\u5411\uff08\u540c\u4e00\u4e2a\uff09NIL\u8282\u70b9</p> <p>\u7ea2\u9ed1\u6811\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u6bcf\u4e2a\u8282\u70b9\u8981\u4e48\u662f\u7ea2\u8272\uff0c\u8981\u4e48\u662f\u9ed1\u8272</li> <li>\u6839\u8282\u70b9\u662f\u9ed1\u8272</li> <li>\u6bcf\u4e2a\u53f6\u8282\u70b9\uff08\u5373NIL\u8282\u70b9\uff09\u662f\u9ed1\u8272</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u90a3\u4e48\u5b83\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u4ece\u8be5\u8282\u70b9\u5230\u5176\u6240\u6709\u540e\u4ee3\u53f6\u8282\u70b9\u7684\u8def\u5f84\u4e0a\uff0c\u5747\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9</li> </ul> <p>black height\uff1a\u4ece\u67d0\u8282\u70b9\uff08\u4e0d\u5305\u542b\u81ea\u8eab\uff09\u5230\u53f6\u8282\u70b9\u7684\u9ed1\u8272\u8282\u70b9\u7684\u4e2a\u6570</p> <p>Lemma</p> <p>\u4e00\u4e2a\u6709N\u4e2a\u5185\u90e8\u8282\u70b9\u7684\u7ea2\u9ed1\u6811\u7684\u6811\u9ad8\u81f3\u591a\u4e3a\\(2\\log_2(N+1)\\)</p> Black Height <p>\u8bc1\u660e\uff1a\u8bbe\u7a7a\u6811\u7684\u6811\u9ad8\u4e3a0</p> <p>\u5f52\u7eb3\u5047\u8bbe\uff1a</p> \\[ for\\ any\\ node\\ x, sizeof(x) \\geq 2^{bh(x)}-1 \\] <p>\u5f52\u7eb3\u5960\u57fa\u663e\u7136\u5728\u7a7a\u6811\u4e0a\u6210\u7acb</p> <p>\u5f52\u7eb3\u6f14\u7ece\uff1a</p> <p>\u5bf9\u4e00\u4e2a\u975e\u7a7a\u6811\u65f6\uff1a\\(h(x) \\leq k\\) \u6210\u7acb\uff0c\u73b0\u5728\u8bc1\u660e\\(h(x) \\leq k+1\\)\u4e5f\u6210\u7acb</p> <p>\u5bf9\u4e00\u4e2ax\u6ee1\u8db3\\(h(x) \\leq k+1\\)\uff0c\u5176\u5b50\u6811\u7684\u9ed1\u9ad8\u8981\u4e48\u7b49\u4e8ex\u7684\u9ed1\u9ad8\uff0c\u8981\u4e48\u7b49\u4e8ex\u7684\u9ed1\u9ad8-1\uff08\u5b50\u6811\u7684\u6839\u8282\u70b9\u662f\u7ea2\u8272\uff09</p> <p>\u56e0\u4e3a\uff1a</p> \\[ h(child) \\leq k \\] <p>\u5219\u6709\uff1a $$ sizeof(child) \\geq 2^{bh(child)}-1 \\geq 2^{bh(x)-1}-1 $$ \u5373\u5b50\u6811\u7684\u8282\u70b9\u6570\u6709\u4e00\u4e2a\u4e0b\u754c</p> <p>\u7531\u4e8e\uff1a $$ bh(Tree) \\geq \\frac{h(Tree)}{2} $$ \u5219\uff1a $$ Sizeof(Tree)=N \\geq 2^{bh(Tree)}-1 \\geq 2^{h/2}-1 $$ \u5f97\u8bc1</p>"},{"location":"notes/cs/algorithm/ads/ADS.html#operation_2","title":"Operation","text":"<p>\u524d\u63d0</p> <p> \u5728\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u5728\u63d2\u5165\u524d\u6811\u662f\u6ee1\u8db3\u7ea2\u9ed1\u6811\u6027\u8d28\u7684\uff0c\u56e0\u6b64\u8fdb\u884c\u5bf9\u6bd4\u7684\u662f\u63d2\u5165\u7ea2\u8272\u8282\u70b9\u524d\u540e\u7684\u6027\u8d28\u60c5\u51b5\uff0c\u53ea\u9700\u8981\u8003\u8651\u64cd\u4f5c\u524d\u540e\u662f\u5426\u76f8\u5bf9\u5e73\u8861 \u8865\u836f\u8ba1\u7b97\u4f8b\u5b50\u4e2d\u7684\u7edd\u5bf9\u9ed1\u9ad8 </p> <ul> <li>Insertion \u4e24\u4e2a\u6027\u8d28\u9700\u8981\u4fdd\u6301\uff1a</li> </ul> <ol> <li>Key\u503c\u4fdd\u8bc1\u4e8c\u53c9\u6811</li> <li>\u7ea2\u9ed1\u6811\u6027\u8d28</li> </ol> <p>\u9ed8\u8ba4\u63d2\u5165\u7684\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u63d2\u5165\u540e\u4e0d\u4f1a\u7834\u574f\u7b2c\u4e94\u6761\u6027\u8d28\uff0c\u4f46\u662f\u7ee7\u7eed\u63d2\u5165\u540e\u53ef\u80fd\u4f1a\u9047\u5230\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u8fd9\u65f6\u9700\u8981\u8fdb\u884c\u8865\u6551</p> <p>\u9700\u6ce8\u610f\u6027\u8d282\u53ef\u80fd\u56e0\u4e3a\u63d2\u5165\u7684\u662f\u7a7a\u6811\u88ab\u7834\u574f\uff0c\u8fd9\u65f6\u9700\u8981\u5c06\u6839\u8282\u70b9\u6d82\u9ed1</p> <p>\u63a5\u4e0b\u6765\u7684\u5206\u7c7b\u8ba8\u8bba\u5176\u5b9e\u5c31\u662f\u6839\u636e\u53d4\u53d4\u7684\u989c\u8272\u8fdb\u884c\u65cb\u8f6c\uff0c</p> <p>Case 1</p> <p>\u5177\u6709\u5bf9\u79f0\u60c5\u51b5\uff1aLL\uff08\u56fe\u4e2d\uff09\u3001LR\u3001RL\u3001RR</p> <p>\u53d4\u53d4\u8282\u70b9\u662f\u7ea2\u8272</p> <p>\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u7236\u4eb2\u4e0e\u53d4\u53d4\u90fd\u662f\u7ea2\u8272\uff0c\u8fd9\u65f6\u5c06\u7236\u4eb2\u6d82\u9ed1\uff0c\u53d1\u73b0\u5de6\u6811\u7684\u9ed1\u9ad8\u6bd4\u53f3\u6811\u7684\u9ed1\u9ad8\u591a1\uff0c\u518d\u5c06\u53d4\u53d4\u6d82\u9ed1\uff0c\u53d1\u73b0\u6574\u68f5\u6811\u5bf9\u4e8e\u6811\u5916\u90e8\u5206\u6574\u4f53\u9ed1\u9ad8+1\uff0c\u8fd9\u65f6\u5c06\u7956\u7236\u6d82\u7ea2\uff0c\u6ee1\u8db3\u4e86\u7ea2\u9ed1\u6811\u7684\u6027\u8d28\uff0c\u4f46\u662f\u4f1a\u9047\u5230\u7956\u7236\u7684\u7236\u4eb2\u662f\u7ea2\u8272\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u9700\u8981\u9012\u5f52\u5904\u7406</p> <p>\u8fd9\u4e5f\u662f\u63d2\u5165\u552f\u4e00\u9700\u8981\u8fed\u4ee3\u7684\u64cd\u4f5c</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728\u8fdb\u884ccase1\u7684\u64cd\u4f5c\u540e\u53ef\u80fd\u8fdb\u5165\u5230\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5</p> <p>Case 2</p> <p>\u5177\u6709\u5bf9\u79f0\u60c5\u51b5RL</p> <p>\u53d4\u53d4\u7684\u989c\u8272\u662f\u9ed1\u8272\uff0c\u4e14\u63d2\u5165\u8282\u70b9\u9760\u8fd1\u53d4\u53d4\u8282\u70b9\uff0c\u6b64\u65f6\u65e0\u6cd5\u901a\u8fc7\u4f20\u9012\u7956\u7236\u7684\u9ed1\u8272\u7ef4\u6301\u9ed1\u9ad8\uff0c\u9700\u8981\u8fdb\u884c\u65cb\u8f6c\u64cd\u4f5c\uff0c\u5c06\u63d2\u5165\u8282\u70b9\u4e0e\u7236\u4eb2\u8fdb\u884c\u65cb\u8f6c\uff0c\u8fdb\u5165Case 3</p> <p>Case 3</p> <p>\u5177\u6709\u5bf9\u79f0\u60c5\u51b5RR</p> <p>\u5148\u5c06\u7238\u7238\u67d3\u9ed1\uff0c\u7237\u7237\u67d3\u7ea2\uff0c\u6b64\u65f6\u5de6\u5b50\u6811\u7684\u9ed1\u9ad8\u6bd4\u53f3\u5b50\u6811\u7684\u9ed1\u9ad8\u591a1\uff0c\u56e0\u6b64\u8981\u8fdb\u884c\u53f3\u65cb\u8f6c\u5e73\u8861\u9ed1\u9ad8</p> <p>\u6700\u540e\u5bf9insertion\u8fdb\u884c\u603b\u7ed3\uff1a\uff08\u6765\u6e90\u4e8enoughq\u540c\u5b66\u7684\u7b14\u8bb0\uff09</p> Insert Example(nb) <p> </p> <p>\u4e00\u4e2a\u725b\u903c\u7684\u4f8b\u5b50\uff0c\u597d\u50cf\u662f\u5305\u542b\u4e86\u6240\u6709\u7684\u60c5\u51b5\uff0c\u4e3b\u8981\u662f\u8fd8\u5199\u4e86\u5bf9\u79f0\u7684\u60c5\u51b5\uff08\u8ba9\u6211\u8fd9\u79cd\u5f31\u8d28\u590d\u4e60\u65f6\u5f88\u723d\u7684\u4f8b\u5b50\uff09</p> <p>\u6765\u81ea\uff1aoneko\u524d\u8f88</p> <p></p> <ul> <li>Delete</li> </ul> <p>\u6211\u8ba4\u4e3a\u81ea\u5df1\u5199\u7684\u7ea2\u9ed1\u6811\u5220\u9664\u662f\u4e00\u5768\u5c4e\uff0c\u4f46\u662f\u8003\u8bd5\u5468\u6765\u4e0d\u53ca\u66f4\u65b0\u522b\u7684\u597d\u65b9\u6cd5\u4e86\uff0c\u671f\u672b\u5468\u7ed3\u675f\u6211\u4f1a\u66f4\u65b0\u4e00\u4e0b\u7684\uff08\uff09\u5982\u679c\u5fd8\u4e86\uff08\uff09\u4e0d\u662f \u5e94\u8be5\u4e0d\u4f1a\u5fd8\u3002\u3002\u3002\u592a\u5c4e\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002</p> <p>\u603b\u4f53\u7684\u601d\u8def\u662f\u5c06\u5220\u9664\u8282\u70b9\u589e\u9ed1\uff0c\u7136\u540e\u901a\u8fc7\u8f6c\u79fb\u8fd9\u4e2a\u9ed1\u8272\u5230\u7236\u4eb2\u8282\u70b9\uff0c\u5728\u8fdb\u884c\u9ed1\u9ad8\u7684\u5e73\u8861\uff0c\u5f53\u7136\u6700\u7b80\u5355\u7684\u60c5\u51b5\u5c31\u662f\u5220\u9664\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u8fd9\u65f6\u76f4\u63a5\u5220\u9664\u5373\u53ef\uff0c\u5176\u6b21\u5220\u9664\u8282\u70b9\u5220\u9664\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\uff08\u53ea\u80fd\u662f\u7ea2\u5b69\u5b50\uff09\u4ee3\u66ff\u4ed6\u7239\u540e\u53d8\u9ed1\u5373\u53ef</p> <p>\u7136\u540e\u6211\u4eec\u8ba8\u8bba\u5220\u9664\u8282\u70b9\u662f\u9ed1\u53f6\u5b50\u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u53cc\u9ed1\u7684\u6982\u5ff5\uff0c\u5373\u5220\u9664\u53f6\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u90a3\u4e48\u5728\u5220\u9664\u5b83\u4e4b\u540e\u5c06\u5b83\u7684\u9ed1\u8272\u589e\u52a0\u52302\uff0c\u518d\u901a\u8fc7\u65cb\u8f6c\u548c\u67d3\u8272\u64cd\u4f5c\u5e73\u8861\u9ed1\u9ad8\uff0c\u6700\u540e\u5c06\u5176\u53d8\u4e3a\u5355\u9ed1NIL</p> <p>Case 1</p> <p>\u5220\u9664\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u7236\u4eb2\u4e5f\u662f\u9ed1\u8272\u4f46\u662f\u5144\u5f1f\u662f\u7ea2\u8272\uff0c\u6b64\u65f6\u5c06\u5144\u5f1f\u67d3\u9ed1\uff0c\u7236\u4eb2\u67d3\u7ea2\uff0c\u4f46\u662f\u8fd9\u6837\u4f1a\u4f7f\u9ed1\u9ad8\u53f3\u79fb\uff0c\u56e0\u6b64\u9700\u8981\u8fdb\u884c\u5de6\u65cb\u8f6c\uff0c\u65cb\u8f6c\u4e4b\u540e\u8fdb\u5165\u5230Case 2</p> <p>Case 2</p> <p>\u6b64\u65f6\u5144\u5f1f\u8282\u70b9\u7684\u989c\u8272\u662f\u9ed1\u8272\u4e14\u4f84\u5b50\u662f\u53cc\u9ed1\uff0c\u8fd9\u65f6\u5019\u7529\u9505\u7ed9\u7236\u4eb2\uff0c\u5c06\u7236\u4eb2\u67d3\u9ed1\uff0c\u6b64\u65f6\u53f3\u8def\u9ed1\u8272\u591a\u4e86\u4e00\u4e2a\uff0c\u7136\u540e\u5728\u5206\u7c7b\u8ba8\u8bba\uff0c\u7236\u8282\u70b9\u672c\u6765\u662f\u7ea2\u8272\u5c31\u7ed3\u675f\u4e86\uff0c\u67d3\u9ed1\u5373\u53ef\uff1b\u7236\u8282\u70b9\u672c\u6765\u662f\u9ed1\u8272\uff0c\u5c31\u7ee7\u7eed\u9012\u5f52</p> <p>\u6b64\u65f6\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u6240\u5220\u9664\u7684\u8282\u70b9\u4e00\u76f4\u9012\u5f52\u5230\u6839\u8282\u70b9\u65f6\uff0c\u4e00\u8def\u4e0a\u90fd\u6ca1\u6709\u7ea2\u8272\u8282\u70b9\uff0c\u5c31\u4f1a\u8fdb\u5165\u5230Case 4\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u8fdb\u884c\u65cb\u8f6c\u64cd\u4f5c</p> <p>\u6211\u753b\u51fa\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u7684\u8fc7\u7a0b\uff1a</p> <p>\u8fd9\u65f6\u5019\u95ee\u9898\u51fa\u73b0\u4e86\uff0c\u5982\u679c\u4f84\u5b50\u6709\u7ea2\u8272\uff0c\u90a3\u4e48\u5728Case 2\u4e2d\u6211\u4eec\u5c06\u5144\u5f1f\u67d3\u7ea2\u7684\u64cd\u4f5c\u5c31\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u5bfc\u81f4\u4e24\u4e2a\u8fde\u7eed\u7ea2\u8272\uff0c\u8fd9\u5c31\u8fdb\u5165\u4e86Case 3</p> <p>Case 3</p> <p>\u8fdc\u4f84\u5b50\u662f\u9ed1\u8272\uff0c\u8fd1\u4f84\u5b50\u662f\u7ea2\u8272\uff0c\u6b64\u65f6\u5c06\u7ea2\u8272\u4f84\u5b50\u4e0e\u5176\u9ed1\u8272\u7236\u4eb2\u4e92\u6362\uff0c\u4f1a\u5bfc\u81f4\u5de6\u4f84\u5b50\u8fd9\u6761\u8def\u7684\u9ed1\u9ad8\u591a1\uff0c\u56e0\u6b64\u9700\u8981\u8fdb\u884c\u53f3\u65cb\u8f6c\uff0c\u7136\u540e\u8fd9\u65f6\u8fdc\u4f84\u5b50\u5c31\u662f\u7ea2\u8272\u4e86\uff0c\u8fdb\u5165Case 4</p> <p>Case 4</p> <p>\u8fd9\u4e2a\u60c5\u51b5\u662f\uff1aX\u662f\u5f85\u5220\u9664\u8282\u70b9\uff0c\u4ed6\u7684\u8eab\u4e0a\u6709\u4e24\u4e2a\u9ed1\u8272\u6807\u8bb0\uff0c\u4ed6\u7684\u5144\u5f1f\u662f\u9ed1\u7684\uff0c\u8fdc\u4f84\u5b50\u4e00\u5b9a\u662f\u7ea2\u7684\uff0c\u7236\u4eb2\u548c\u8fd1\u4f84\u5b50\u53ef\u7ea2\u53ef\u9ed1\uff0c\u8fd9\u65f6\u5019\u7684\u64cd\u4f5c\u6b65\u9aa4\uff1a</p> <ol> <li>\u5c06\u7236\u4eb2\u548c\u5144\u5f1f\u7684\u989c\u8272\u4e92\u6362\uff0c\u4e3a\u4e86\u907f\u514d\u7236\u4eb2\u662f\u7ea2\u8272\u5bfc\u81f4\u53f3\u4fa7\u51fa\u73b0\u8fde\u7eed\u7684\u7ea2\u8272\uff0c\u5c06\u4f84\u5b50\u67d3\u9ed1</li> <li>\u8fd9\u65f6\u5019\u7684\u9ed1\u9ad8\u53f3\u8fb9\u6709\u53ef\u80fd\u4e0d\u53d8\uff0c\u4e5f\u53ef\u80fd\u589e\u59271\u5411\u53f3\u8fb9\u503e\u659c\uff0c\u8fdb\u884c\u4e00\u6b21\u5de6\u65cb\u8f6c</li> <li>\u8fd9\u65f6\u5019\u5f85\u5220\u9664\u8282\u70b9\u5c31\u4f4d\u4e8e\u53f6\u8282\u70b9\u4e0a\u4e86\u5e76\u4e14\u9ed1\u9ad8\u4e5f\u5e73\u8861\u4e86\uff0c\u5c06\u5176\u5220\u9664\u5373\u53ef</li> </ol> <p>\u5982\u679c\u4ece\u9006\u5411\u7684\u89d2\u5ea6\u601d\u8003\uff0c\u5177\u5907\u76f4\u63a5\u5220\u9664\u4e00\u4e2a\u9ed1\u8272\u8282\u70b9\u7684\u6761\u4ef6\uff0c\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u662f\u53f6\u8282\u70b9\u5e76\u4e14\u4ed6\u6240\u5728\u7684\u8def\u5f84\u4e0a\u9ed1\u9ad8\u591a\u4e86\u4e00\uff0c\u8fd9\u5c31\u662f\u4e00\u76f4\u5f80\u5de6\u8fb9\u585e\u9ed1\u8272\u7684\u539f\u56e0\uff0c\u5c31\u662f\u8981\u8ba9\u4ed6\u6210\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u7684\u8282\u70b9</p> <p>\u603b\u7ed3\uff1a</p> <ol> <li>\u5148\u770b\u5144\u5f1f\u662f\u4e0d\u662f\u9ed1</li> <li>\u518d\u770b\u4f84\u5b50\u6709\u6ca1\u6709\u7ea2</li> <li>\u4f84\u5b50\u6709\u7ea2\u770b\u8fdc\u4f84\u5b50</li> <li>\u8f6c\u5316\u5230\u8fdc\u4f84\u5b50\u4e3a\u7ea2</li> <li>\u8fdc\u4f84\u4e3a\u7ea2\u4e00\u987f\u64cd\u4f5c</li> </ol> <p>Number of Rotations:</p> AVL Red-Black Insertion \\(\\leq 2\\) \\(\\leq 2\\) Deletion \\(O(log n)\\) \\(\\leq 3\\)"},{"location":"notes/cs/algorithm/ads/ADS.html#b-tree","title":"B+ Tree","text":""},{"location":"notes/cs/algorithm/ads/ADS.html#intro_3","title":"Intro","text":"<p>B\u6811\u662f\u4e00\u79cd\u5e73\u8861\u7684\u6811\u72b6\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u7528\u4e8e\u5728\u78c1\u76d8\u4e0a\u5b58\u50a8\u6570\u636e\uff0c\u51cf\u5c11\u78c1\u76d8\u7684I/O\u6b21\u6570</p> <p>B-Tree with order B:</p> <ul> <li>\u7ed3\u6784\u6027\u8d28</li> </ul> <ol> <li>\u6839\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u67092\u5230B\u4e2a\u5b69\u5b50</li> <li>\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u6709\\(\\lceil \\frac{B}{2} \\rceil\\)\u5230\\(B\\)\u4e2a\u5b69\u5b50</li> <li>\u6240\u6709\u53f6\u5b50\u8282\u70b9\u5728\u540c\u4e00\u5c42</li> </ol> <ul> <li>\u6570\u503c\u6027\u8d28</li> </ul> <ol> <li>\u6570\u503c\u5168\u90e8\u5b58\u653e\u5728\u53f6\u5b50\u7ed3\u70b9</li> <li>\u975e\u53f6\u5b50\u7ed3\u70b9\u4e2d\u5b58\u50a8routing element\uff0c\u7528\u4e8e\u786e\u5b9a\u5b50\u6811\u4e2d\u6570\u503c\u7684\u5206\u5e03\uff0c\\(\\lceil \\frac{B}{2} \\rceil\\)\u5230\\(B\\)\u4e2a\u5b69\u5b50,\u79f0\u4e3a\u4ed6\u7684fanout</li> <li>\u975e\u53f6\u5b50\u8282\u70b9\u4e2d\u7684\u5143\u7d20\u4e2a\u6570+1=\u5b69\u5b50\u4e2a\u6570</li> <li>\u53f6\u5b50\u8282\u70b9\u5b58\u7684\u5143\u7d20\u4e2a\u6570\u5728\\(\\lceil \\frac{B}{2} \\rceil\\)\u5230\\(B\\)\u4e4b\u95f4\uff0c\u6839\u8282\u70b9\u4f5c\u4e3a\u53f6\u5b50\u65f6\u53ef\u4ee5\u5b58\u50a81\u5230B\u4e2a\u5143\u7d20</li> <li>\u4e00\u4e2a\u5b58\u50a8\u4e86\\(K\\)\u4e2a\u5143\u7d20\\(e_1,e_2,e_3,e_4,e_K\\)\u7684internal node \u6709\\(v_1,v_2,v_3,v_4,v_K\\)\u8fd9\u4e9b\u53f6\u5b50\u7ed3\u70b9\uff1a</li> </ol> \\[ e_i=minimun\\ element\\ in\\ leaves\\ under\\ v_{i+1} \\] \\[ for\\ keys\\ in\\ leaves\\ i\\ in\\ v_i: Tv_1 \\leq ... \\leq Tv_K \\] <p>\u8865\u5145\u7684\u6027\u8d28\uff1aN\u8868\u793a\u5143\u7d20\u4e2a\u6570</p> <ol> <li>leaves \\(\\leq \\frac{N}{ \\lceil \\frac{B}{2} \\rceil}\\)</li> <li>nodes \\(\\leq \\frac{2N}{ \\lceil \\frac{B}{2} \\rceil}\\)</li> <li>elements \\(\\leq 2N\\) \u8fd9\u91cc\u7528nodes\u6570\u4e58B\u5f97\u5230\u7684\u4f3c\u4e4e\u662f4N\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u5b58\u50a8\u7684\u6570\u503c\u5168\u90e8\u662f\u5143\u7d20\u7684\u526f\u672c\uff0c\u603b\u6570\u4e0d\u4f1a\u8d85\u8fc72N</li> <li></li> </ol> \\[ { Height }=\\log _{\\lceil \\frac{B}{2} \\rceil} \\frac{N}{\\lceil \\frac{B}{2} \\rceil} \\leqslant \\log _{\\lceil \\frac{B}{2} \\rceil} N=\\frac{\\log _2 N}{\\log _2 B-1} \\leqslant O(\\log_B N) \\] <p>\u8fd9\u610f\u5473\u7740B\u6811\u7684\u9ad8\u5ea6\u662f\u975e\u5e38\u4f4e\u7684\uff08\u76f8\u8f83\u4e8e\u4e8c\u53c9\u6811\u7684\\(O(\\log_2 N)\\)\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u51cf\u5c11\u78c1\u76d8\u7684I/O\u6b21\u6570</p> <p></p>"},{"location":"notes/cs/algorithm/ads/ADS.html#operation_3","title":"Operation","text":"<ul> <li>FindKey</li> </ul> <p>\u5bf9routing element\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u7136\u540e\u5bf9\u53f6\u5b50\u8282\u70b9\u8fdb\u884c\u4e8c\u5206\u67e5\u627e</p> <p>\u8fd9\u6837\u5f97\u5230\u7684CPU\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(logN)\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u589e\u52a0B\u6811\u7684\u9636\u6570\u4e0d\u4f1a\u6539\u53d8\u67e5\u627e\u65f6\u95f4</p> <p>\u78c1\u76d8\u7684I/O\u6b21\u6570\u4e3a\\(O(\\log_B N)\\)</p> <ul> <li>InsertKey</li> </ul> <p>\u5bf9\u4e8e\u6ca1\u6709\u6ee1\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u63d2\u5165\u5373\u53ef\uff0c\u5982\u679c\u6ee1\u4e86\uff0c\u5219\u9700\u8981\u8fdb\u884c\u5206\u88c2\u64cd\u4f5c\uff0c\u5c06\u8282\u70b9\u5206\u88c2\u4e3a\u4e24\u4e2a\u8282\u70b9\uff0c\u5e76\u5c06\u4e2d\u95f4\u7684\u5143\u7d20\u66f4\u65b0\u5230\u7236\u8282\u70b9\uff0c\u5982\u679c\u7236\u8282\u70b9\u4e5f\u6ee1\u4e86\uff0c\u5219\u9700\u8981\u8fdb\u884c\u9012\u5f52\u64cd\u4f5c\uff0c\u76f4\u5230\u6839\u8282\u70b9</p> <p>\u6709\u4e00\u4e2a\u5c0f\u7684\u4f18\u5316\u63aa\u65bd\u662f\u5728\u81ea\u5df1\u6ee1\u5458\u5144\u5f1f\u672a\u6ee1\u7684\u65f6\u5019\uff0c\u5c06\u5143\u7d20\u79fb\u52a8\u5230\u5144\u5f1f\u8282\u70b9\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5206\u88c2\u7684\u6b21\u6570\uff0c\u5b9e\u73b0\u65f6\u9700\u8981\u5b9a\u4f4d\u5230\u5144\u5f1f\u8282\u70b9\uff0c\u56e0\u6b64\u6dfb\u52a0\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5144\u5f1f\u8282\u70b9\uff0c\u4f46\u662f\u8fd9\u4e2a\u64cd\u4f5c\u53ea\u4f1a\u505c\u7559\u5728\u5171\u4eab\u4e00\u4e2a\u7236\u8282\u70b9\u7684\u8282\u70b9\u4e4b\u95f4\uff0c\u800c\u907f\u514d\u904d\u5386\u6240\u6709\u8282\u70b9</p> <p>CPU\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(B\\log_B N)\\)\uff0c\u78c1\u76d8\u7684I/O\u6b21\u6570\u4e3a\\(O(\\log_B N)\\)</p> <ul> <li>DeleteKey</li> </ul> <p>\u5220\u9664\u64cd\u4f5c\u4e0e\u63d2\u5165\u7c7b\u4f3c\uff0c\u5f53\u6240\u5728\u7684\u53f6\u5b50\u8282\u70b9\u5728\u5220\u9664\u5f53\u524d\u5143\u7d20\u540e\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e\\(\\lceil \\frac{B}{2} \\rceil\\)\uff0c\u5219\u9700\u8981\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\uff0c\u5de6\u53f3\u8282\u70b9\u6709\\(\\geq \\lceil \\frac{B}{2} \\rceil+1\\)\uff0c\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u501f\u4e00\u4e2a\u5143\u7d20\u8fc7\u6765\uff0c\u5426\u5219\u9700\u8981\u5c06\u5f53\u524d\u8282\u70b9\u4e0e\u5de6\u5144\u5f1f\u6216\u53f3\u5144\u5f1f\u5408\u5e76</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u63d2\u5165\u76f8\u540c</p>"},{"location":"notes/cs/algorithm/ads/ADS.html#leftist-tree","title":"Leftist Tree","text":""},{"location":"notes/cs/algorithm/ads/ADS.html#intro_4","title":"Intro","text":"<p>\u6ee1\u8db3\u6700\u5c0f\u5806\u7684\u4f20\u7edf\u6027\u8d28\uff0c\u5373\u7236\u8282\u70b9\u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5b50\u8282\u70b9\u7684\u503c</p> <p>\u540c\u65f6\u6ee1\u8db3\u5de6\u5f0f\u5806\u7684\u6027\u8d28\uff1a</p> <p>\u5b9a\u4e49</p> <p>\u4efb\u610f\u4e00\u4e2a\u8282\u70b9x\u5230\u4e00\u4e2a \u6ca1\u6709\u4e24\u4e2a\u5b69\u5b50\u7684\u8282\u70b9 \u7684\u8ddd\u79bb\u79f0\u4e3a\u8282\u70b9\u7684null path length\uff0c\u8bb0\u4f5c\\(npl(x)\\)</p> <p>\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u7684\u8282\u70b9\uff0c\\(npl(x)=1+\\min(npl(lc),npl(rc))\\)\uff0c\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9\uff0c\\(npl(x)=0\\)\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\\(npl(null)=-1\\)</p> <ul> <li>\u5728\u5de6\u5f0f\u5806\u4e2d\uff0c\\(npl(lc(x)) \\geq npl(rc(x))\\)\uff0c\u5373\u5de6\u5b69\u5b50\u7684null path length\u603b\u662f\u5927\u4e8e\u7b49\u4e8e\u53f3\u5b69\u5b50\u7684null path length\uff0c\u56e0\u6b64\uff0c\u5de6\u5f0f\u5806\u4e5f\u88ab\u79f0\u4e3a\u5de6\u504f\u6811</li> </ul> <p>\u4e00\u4e2a\u6ca1\u6709\u4e24\u4e2a\u5b69\u5b50\u7684\u8282\u70b9</p> <p>\u8fd9\u91cc\u6ce8\u610f\u8fd9\u4e2a\u5b9a\u4e49\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\uff0c\u90a3\u4e48\u65e0\u8bba\u4ed6\u7684\u8fd9\u4e2a\u5b69\u5b50\u6709\u591a\u957f\uff0c\u4ed6\u7684null path length\u90fd\u662f0\uff0c\u56e0\u4e3a\u6211\u4eec\u5b9a\u4e49\u4e86\u7a7a\u8282\u70b9\u7684null path length\u4e3a-1\uff0c\u800c\u8ba1\u7b97\u65f6\uff1a</p> \\[ npl(x)=1+\\min(npl(lc),npl(rc))=1+(-1)=0 \\] <p>\u5bf9\u4e8e\u4e00\u4e2a\u6709n\u8282\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u82e5\u6ee1\u8db3\u5de6\u5f0f\u5806\u7684\u6027\u8d28\uff0c\u5219\u6709\\(npl(root) \\leq \\log_2(n+1)\\)\uff0c\u5373\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3ar\u7684right path\uff0c\u81f3\u5c11\u6709\\(2^r-1\\)\u4e2a\u8282\u70b9</p>"},{"location":"notes/cs/algorithm/ads/ADS.html#operation_4","title":"Operation","text":"<ul> <li>Merge(H1, H2)</li> </ul> Merge Example <ul> <li>DeleteMin(pointer to u)</li> </ul>"},{"location":"notes/cs/algorithm/ads/ADS.html#skewed-heap","title":"Skewed Heap","text":""},{"location":"notes/cs/algorithm/ads/ADS.html#intro_5","title":"Intro","text":"<p>\u5f88\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7a7a\u95f4\u7ef4\u62a4null path length\uff0c\u53ea\u9700\u8981\u5728\u6bcf\u6b21\u5408\u5e76(\u9012\u5f52\u8fd4\u56de)\u7684\u65f6\u5019\u5bf9\u6839\u8282\u70b9\u7684\u4e24\u4e2a\u5b69\u5b50\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\u5373\u53ef</p> <p>\u53ef\u4ee5\u770b\u4f5c\u662fself-adjusting leftist heap</p>"},{"location":"notes/cs/algorithm/ads/ADS.html#operation_5","title":"Operation","text":"<ul> <li>Merge(H1, H2)</li> </ul> <p>\u5728\u64cd\u4f5c\u65f6\u4e0d\u8fdb\u884cnpl\u7684\u6bd4\u8f83\uff0c\u76f4\u63a5\u5de6\u53f3\u4e92\u6362\uff0c\u5176\u4f59\u64cd\u4f5c\u4e0e\u5de6\u5f0f\u5806\u76f8\u540c</p> <p>\u4e0d\u652f\u6301\u5220\u9664\u548cdecrease key\u64cd\u4f5c</p> Skewed Heap Merge Example <p></p>"},{"location":"notes/cs/algorithm/ads/ADS.html#inverted-file-index","title":"Inverted File Index","text":"<p>\u5b9e\u73b0\u641c\u7d22\u5f15\u64ce\u7684\u65b9\u6cd5\uff1a</p> <p>\u6ca1\u600e\u4e48\u542c\u3002\u3002\u3002</p>"},{"location":"notes/cs/algorithm/ads/ADS.html#binomial-queue","title":"Binomial Queue","text":"<p>Heap-Ordered Tree: \u6ee1\u8db3\u5806\u6027\u8d28\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5305\u62ecMin-Heap Max-Heap</p> <p>Priority Queue:\u4e0d\u6309\u7167\u961f\u5217\u5148\u8fdb\u5148\u51fa\u7684\u987a\u5e8f\uff0c\u800c\u662f\u6309\u7167\u67d0\u79cd\u4f18\u5148\u7ea7\u8fdb\u51fa</p> <p>\u4e8c\u9879\u961f\u5217\u4e0d\u662f\u5355\u72ec\u7684\u4e00\u68f5\u6811\uff0c\u800c\u662f\u4e00\u4e2a\u68ee\u6797</p> <p>\u68ee\u6797\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6811\u88ab\u79f0\u4e3a\u4e8c\u9879\u6811 binomial tree \u5e76\u5b9a\u4e49\u6811\u7684\u9ad8\u5ea6\uff0c\u9ad8\u5ea6\u4e3a0\u7684\u6811\u662f\u7531\u4e00\u4e2a\u8282\u70b9\u6784\u6210</p> <p>\u9ad8\u5ea6\u4e3ak\u7684\u6811\u662f\u7531\u4e24\u4e2a\u9ad8\u5ea6\u4e3ak-1\u7684\u6811\u5408\u5e76\u800c\u6210\uff0c\u5728\u8fd9\u91cc\u5408\u5e76\u65f6\uff0c\u6839\u8282\u70b9\u6700\u5c0f\u7684\u6811\u4f5c\u4e3a\u65b0\u7684\u6839\u8282\u70b9\uff0c\u540c\u65f6\u5c06\u53e6\u4e00\u4e2a\u6811\u4f5c\u4e3a\u65b0\u7684\u6839\u8282\u70b9\u7684\u5b69\u5b50\uff0c\u4e5f\u5c31\u662f\u8bf4\u53e6\u5916\u4e00\u68f5\u6811\u662f\u76f4\u63a5\u8fde\u63a5\u5230\u6839\u8282\u70b9\u4e0a\u7684</p> <p></p> <p>\\(B_k\\)\u8868\u793a\u9ad8\u5ea6\u4e3ak\u7684\u4e8c\u9879\u6811\uff0c\\(B_k\\)\u6709\\(2^k\\)\u4e2a\u8282\u70b9\uff0c\u6839\u8282\u70b9\u7684\u5ea6\u6570\u4e3ak\uff0c\u6839\u7684\u5b69\u5b50\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u4e3a\\(B_{k-1},B_{k-2},...B_0\\)\uff0c\u5728d\u6df1\u5ea6\u5c42\u6709\\(\\binom{k}{d}\\)\u4e2a\u8282\u70b9</p> <p>\u6027\u8d28\uff1a BQ \u4e2d\u6bcf\u4e2a\u9ad8\u5ea6\u7684\u6811\u81f3\u591a\u6709\u4e00\u68f5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u4e2aBQ\u90fd\u53ef\u4ee5\u88ab\u552f\u4e00\u7684\u8868\u793a\u4e3a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5206\u89e3</p>"},{"location":"notes/cs/algorithm/ads/ADS.html#operation_6","title":"Operation","text":"<ul> <li>FindMin</li> </ul> <p>\u6bcf\u4e2a\u4e8c\u9879\u6811\u7684\u6839\u8282\u70b9\u90fd\u662f\u6700\u5c0f\u503c\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u904d\u5386\u6bcf\u4e2a\u4e8c\u9879\u6811\u7684\u6839\u8282\u70b9\u5373\u53ef\u627e\u5230\u6700\u5c0f\u503c\uff0c\u800c\u4e00\u4e2an\u4e2a\u8282\u70b9\u7684BQ\u4e2d\uff0c\u6700\u591a\u6709\\(\\lceil \\log_2 n \\rceil + 1\\)\u68f5\u6811\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u9700\u8981\u9891\u7e41\u7684\u8fdb\u884cFindMin\u64cd\u4f5c\uff0c\u5219\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u503c\u7684\u6307\u9488\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230\\(O(1)\\)</p> <ul> <li>Merge</li> </ul> <p>\u601d\u8def\u5c31\u662f\u4e8c\u8fdb\u5236\u52a0\u6cd5\uff0c\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\uff0c\u5355\u72ec\u5b58\u5728\u7684\u4e8c\u9879\u6811\u4fdd\u7559\uff0c\u540c\u65f6\u5b58\u5728\u7684\u4e8c\u9879\u6811\u5408\u5e76\u6210\u4e3a\u5c42\u6570+1\u7684\u65b0\u7684\u4e8c\u9879\u6811</p> <p>\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(\\log 1)\\)\uff0c\u603b\u5171\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)</p> <ul> <li>DeleteMin</li> </ul> <p>\u627e\u5230\u6700\u5c0f\u7684\u5143\u7d20\u6240\u5728\u7684\u4e8c\u9879\u6811\\(O(\\log n)\\)\uff0c\u5c06\u8fd9\u4e2a\u6811\u5355\u72ec\u62ff\u51fa\u6765\\(O(\\log n)\\)\uff0c\u53bb\u9664\u6839\u8282\u70b9\\(O(\\log n)\\)\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684BQ\uff0c\u8fd9\u4e2a\u65b0\u7684BQ\u4e0e\u4e4b\u524d\u5269\u4e0b\u7684\u6811\u8fdb\u884c\u5408\u5e76\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u4e8c\u9879\u961f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u4e8c\u9879\u6811\u7684\u5b9e\u73b0\u662f\u901a\u8fc7\u5de6\u5b69\u5b50\u53f3\u5144\u5f1f\u7684\u8868\u793a\u65b9\u6cd5\u5b9e\u73b0\u7684</p> <p>\u8fde\u7eed\u7684\u63d2\u5165\u64cd\u4f5c\uff1a\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n)\\)</p> Proof <p></p> <p></p> <p>2-c\u7684\u63a8\u5bfc\uff1a</p> <p>\u56e0\u4e3a\u6bcfc\u6b21\u64cd\u4f5c\uff0c\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a1\u6b21\u7684step\u548cc-1\u6b21\u7684\u5408\u5e76\uff0c\u800c\u5408\u5e76\u589e\u52a0\u7684\u6811\u7684\u4e2a\u6570\u662f-1\uff0c\u6240\u4ee5\u5f97\u52302-c</p>"},{"location":"notes/cs/algorithm/ads/amortize.html","title":"Amortized Analysis","text":"<p>\u5747\u644a\u6cd5\u5206\u6790\u662f\u5bf9\u4e00\u7cfb\u5217\u64cd\u4f5c\u7684\u5e73\u5747\u6027\u80fd\u8fdb\u884c\u5206\u6790\uff0c\u800c\u4e0d\u662f\u5bf9\u5355\u4e2a\u64cd\u4f5c\u7684\u6027\u80fd\u8fdb\u884c\u5206\u6790</p> <p>bound\u4ecb\u4e8eworst\u548caverage\u4e4b\u95f4\u4e14\u5747\u644a\u754c\u4e0e\u6982\u7387\u65e0\u5173</p> <p>\u901a\u5e38\u6709\u4e09\u79cd\u65b9\u6cd5\uff1aAggregate Accounting Potential</p>"},{"location":"notes/cs/algorithm/ads/amortize.html#aggregate-method","title":"Aggregate Method","text":"<p>\u5bf9\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u8fdb\u884c\u6700\u574f\u65f6\u95f4\u60c5\u51b5\u5206\u6790\u5f97\u5230\\(T(n)\\)\uff0c\u6b64\u65f6\uff1a $$ T(n) \\leq \\sum_{i=1}^{n} t_i=O(n) $$ \u8fd9\u65f6\\(T(n)\\)\u903c\u8fd1\u4e8e\\(O(n)\\)\uff0c\u5373\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\) \u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u7684\u96be\u70b9\u5728\u4e8e\u9700\u8981\u786e\u5b9a\u8fd9\u4e2a\\(\\sum_{i=1}^{n} t_i\\)\uff0c\u4e5f\u5c31\u662f\u603b\u7684\u65f6\u95f4\u5f00\u9500</p> <p>\u5728\u8bb2\u89e3\u5176\u4f59\u7684\u4e24\u4e2a\u65b9\u6cd5\u4e4b\u524d\uff0cyy\u54e5\u8bf4\u4e86\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u6545\u4e8b\uff1a yy\u5728\u5b66\u6821\u95e8\u53e3\u5f00\u4e86\u4e00\u4e2a\u5c0f\u5356\u90e8\u4e70\u6c7d\u6c34\uff0c\u6bcf\u6b21\u5356\u51fa\u4e00\u74f6\u6210\u672c\u4e3a1\u7684\u6c7d\u6c34\uff0c\u5b66\u751f\u81f3\u5c11\u8981\u4ea4\u4e00\u5757\u94b1\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u591a\u4ea4\u94b1\u5b58\u5230\u4e0b\u6b21\u4f7f\u7528\uff0c\u6c7d\u6c34\u7684\u6210\u672c\u5c31\u662f<code>actual cost</code>\uff0c\u800c\u5b66\u751f\u4ea4\u7684\u94b1\u5c31\u662f<code>amortized cost</code>\uff0c\u591a\u51fa\u6765\u7684\u94b1\u6211\u4eec\u79f0\u4f5c<code>credit</code></p>"},{"location":"notes/cs/algorithm/ads/amortize.html#accounting-method","title":"Accounting Method","text":"<p>\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u81ea\u5df1\u8bbe\u7f6e\u5747\u644a\u4ef7\u503c\uff0c\u4f46\u9700\u8981\u4fdd\u8bc1\u5747\u644a\u4ef7\u503c\u4e0d\u4f1a\u5c0f\u4e8e\u5b9e\u9645\u4ef7\u503c\uff0c\u5373\uff1a</p> \\[ \\sum \\text{amortized cost} \\geq \\sum \\text{actual cost} \\] <p>(\u4e5f\u5c31\u662f\u4e0d\u4f1a\u8d4a\u8d26)</p> <p>\u8fd9\u65f6\u5019\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u5b9e\u9645\u4ef7\u503c\u7684\u4e0a\u754c</p> <p>\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fc7\u7a0b\u5c31\u662f\uff1a</p> <ul> <li>\u9996\u5148\u5206\u6790\u5b9e\u9645\u4ef7\u503c</li> <li>\u7136\u540e\u8bbe\u7f6e\u5747\u644a\u4ef7\u503c</li> <li>\u5206\u6790credit\u7684\u503c\uff0c\u786e\u4fdd\u5176\u5927\u4e8e\u7b49\u4e8e0</li> </ul> <p>MultiPop</p> <p> </p>"},{"location":"notes/cs/algorithm/ads/amortize.html#potential-method","title":"Potential Method","text":"<p>\u76f4\u89c2\u7684\u3001\u4e00\u6b21\u6027\u5b9a\u4e49\u6240\u6709\u64cd\u4f5c\u7684\u5747\u644a\u4ee3\u4ef7\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u5927\u91cf\u64cd\u4f5c\u9700\u8981\u5b9a\u4e49\u5747\u644a\u4ef7\u503c\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u52a0\u9002\u7528</p> \\[ \\hat{c}_i-c_i=\\text { Credit }_i=\\Phi\\left(D_i\\right)-\\Phi\\left(D_{i-1}\\right) \\] <p>\u89e3\u91ca\uff1a</p> <p>\\(Credit_i\\)\uff1a\u7b2c\\(i\\)\u6b21\u64cd\u4f5c\u7684credit\uff0c\u8fd9\u65f6\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u72b6\u6001\u5f97\u5206\u51fd\u6570\\(\\Phi(D)\\)\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u503c\u662f\u4e00\u4e2a\u72b6\u6001\u7684\u4ee3\u4ef7\\(D_i\\)\u662f\u7b2c\\(i\\)\u6b21\u64cd\u4f5c\u540e\u7684\u72b6\u6001</p> <p>\u4f46\u662f\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\\(Credit_i\\)\u7684\u6570\u503c\u4e0d\u4ec5\u7531\u5f53\u524d\u7684\u72b6\u6001\u51b3\u5b9a\uff0c\u8fd8\u53d7\u5230\u4e4b\u524d\u72b6\u6001\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u6211\u4eec\u7528\\(\\Phi(D_i)-\\Phi(D_{i-1})\\)\u6765\u8868\u793a</p> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ \\sum_{i=1}^{n} \\hat c_i=\\sum_{i=1}^{n} c_i+\\Phi(D_n)-\\Phi(D_0) \\] <p>\u6070\u597d\u5728\u8fd9\u4e2a\u6c42\u548c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u7559\u4e0b\u4e86\\(\\Phi(D_0)\\)\u548c\\(\\Phi(D_n)\\)\uff0c\u8fd9\u4e24\u4e2a\u503c\u662f\u5e38\u6570\uff0c\u4ece\u800c\u6211\u4eec\u5f97\u5230\u4e86\\(\\sum_{i=1}^{n} \\hat c_i\\)\u7684\u503c</p> <p>\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\uff1a</p> <p>\u8bbe\u8ba1\u52bf\u80fd\u51fd\u6570</p> <ul> <li>\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u72b6\u6001\u5f97\u5206\uff08\u52bf\u80fd\uff09\u51fd\u6570\\(\\Phi(D)\\)<ul> <li>\u52bf\u80fd\u51fd\u6570\u7684\u5b9a\u4e49\u8981\u6c42\uff1a\\(\\Phi(D_0)=0\\)</li> </ul> </li> <li>\u53cd\u5e94\u51fd\u6570\u7684\u6f5c\u5728\u590d\u6742\u5ea6</li> <li>\u68c0\u67e5Credit\u5408\u6cd5\u6027</li> <li>\u8ba1\u7b97\\(\\sum_{i=1}^{n} \\hat c_i\\)</li> </ul> <ul> <li>\u6700\u597d\u7684\u52bf\u80fd\u51fd\u6570\u5e94\u8be5\u786e\u4fddn\u6b21\u64cd\u4f5c\u7684credit\u503c\u5c3d\u53ef\u80fd\u5c0f</li> </ul> <p>\u5bf9Splay\u6811\u8fdb\u884c\u5747\u644a\u5206\u6790</p> <p> \u82e5\u9009\u6df1\u5ea6\u4f5c\u4e3a\u52bf\u80fd\u51fd\u6570\uff0c\u65e0\u6cd5\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u53d8\u5316\uff0c\u56e0\u6b64\u4e0d\u80fd\u9009\u62e9 </p> <p> \u82e5\u9009\u62e9\u6240\u9009\u8f6c\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2a\u6570\uff0c\u53ef\u4ee5\u884c\u5f97\u901a\uff0c\u4f46\u662fX\u3001G\u7684\u53d8\u5316\u592a\u5927\uff0c\u6240\u5f97\u5230\u7684\u754c\u592a\u677e </p> <p> \u6700\u7ec8\u9009\u62e9\u7684\u6280\u5de7\u662f\uff1a </p> <p> \u5bf9\u8282\u70b9\u6570\u53d6\u5bf9\u6570 \u5f97\u5230\u6811\u7684\u79e9 </p> <p> \u5373\uff1a\\(\\Phi(D)=Rank=\\sum\\log S(n)\\) </p> <p>  \u5bf9\u52bf\u80fd\u51fd\u6570\u5206\u6790\u65f6\uff0c\u5982\u679c\u8fdb\u884c\u5b8c\u5168\u5206\u6790\uff0c\u9700\u8981\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684credit\u8fdb\u884c\u8ba1\u7b97\uff0c\u4f46\u662f\u8fd9\u6837\u8ba1\u7b97\u592a\u590d\u6742\uff0c\u56e0\u6b64\u6211\u4eec\u8fdb\u884c\u653e\u7f29\uff0c\u53ea\u5bf9\u6240\u5bfb\u627e\u7684\u76ee\u6807\u8282\u70b9\u7684\u52bf\u80fd\u8fdb\u884c\u5206\u6790\uff0c\u8fd9\u6837\u53ef\u4ee5\u7b80\u5316\u95ee\u9898 </p> <p> \u9700\u8981\u7528\u5230\u4e0b\u9762\u7684\u5f15\u7406\uff1a </p> <p>Lemma</p> \\[ if:a+b \\leq c  \\] \\[ then:\\log a + \\log b \\leq 2\\log c + 2 \\] <p> </p> <p>\u6211\u624b\u5199\u4e86\u4e00\u4e0b\u8fd9\u4e09\u4e2a\u653e\u7f29\u7684\u8fc7\u7a0b\uff1a</p> <p></p>"},{"location":"notes/cs/algorithm/fds/fds.html","title":"Fundamentals of Data Structure","text":"<p>\u9519\u9898\u96c6\uff1a</p> <ol> <li>For a sequentially stored linear list of length N, the time complexities for deleting the first element and inserting the last element are O(1) and O(N), respectively.</li> </ol> <p>A\uff1aFalse</p> <p>R\uff1asequencial --&gt; \u987a\u5e8f\u6620\u5c04 \u4e00\u5b9a\u662f\u6570\u7ec4 \u4e0d\u662f\u94fe\u8868</p> <p>\u987a\u5e8f\u6620\u5c04\u5c31\u662f\u5730\u5740\u6309\u987a\u5e8f\u8fde\u63a5\uff0c\u77e5\u9053\u7b2c\u4e00\u4e2a\u5c31\u77e5\u9053\u5176\u4ed6\u6240\u6709</p> <p>\u94fe\u8868\u5219\u4e0d\u77e5\u9053\uff0c\u4f46\u597d\u5904\u662f\u968f\u65f6\u8981\u5230\u7a7a\u95f4\uff0c\u4f46\u662f\u5360\u7528\u5185\u5b58\u8fc7\u591a\u65f6\u4e0d\u80fd\u7ed9\u51fa\u8fde\u7eed\u5927\u7247\u7a7a\u95f4</p> <ol> <li>If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient?</li> </ol> <p>A. doubly linked list</p> <p>B. singly linked circular list</p> <p>C. doubly linked circular list with a dummy head node\uff08\u597d\u5904\u662f\u53ef\u4ee5\u524d\u8fdb\u540e\u9000\uff09</p> <p>D. sequential list</p> <p>A\uff1aD</p> <p>R\uff1aRandom access--&gt;\u4e00\u5b9a\u662f\u6570\u7ec4 </p> <p>\u94fe\u8868\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u5730\u5740\u90fd\u50a8\u5b58\u5728\u524d\u4e00\u4e2a\u8282\u70b9\u4e2d\uff0c\u65e0\u6cd5\u8fbe\u6210\u968f\u673a\u8bbf\u95ee\uff0c\u53ea\u80fd\u6709\u4e00\u6b65\u77e5\u9053\u4e0b\u4e00\u6b65\u7684\u5730\u5740</p> <ol> <li>To merge two singly linked ascending lists, both with N nodes, into one singly linked ascending list, the minimum possible number of comparisons is:</li> </ol> <p>A\uff1aN </p> <p>R\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u6bd4\u8f83a1\u6b21\u540e\u63d2\u5165\uff0c\u7b2c\u4e8c\u4e2a\u6bd4a2\u6b21\u2026\u2026</p> <p>\u76f4\u5230a1+a2+\u2026\u2026 = N\u540e\uff0c\u5176\u4ed6\u7684\u5143\u7d20\u4e0d\u7528\u6bd4\u8f83\u76f4\u63a5\u653e\u5728\u6700\u540e\u9762\u5373\u53ef \u6781\u7aef\u60c5\u51b5\u662f\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u6bd4\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4\u5c0f\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u5143\u7d20\u6bd4\u8f83N\u6b21\u540e\uff0c\u5176\u4ed6\u5143\u7d20\u5168\u90e8\u63d2\u5728\u540e\u9762\uff0c\u4e5f\u540c\u6837\u662fN\u6b21</p> <ol> <li>It is always possible to represent a tree by a one-dimensional integer array.</li> </ol> <p>A: T</p> <ol> <li>If a general tree T is converted into a binary tree BT, then which of the following BT traversals gives the same sequence as that of the post-order traversal of T?</li> </ol> <p>A: In order traversal. \u627e\u4e00\u4e2a\u6811\u7684\u4f8b\u5b50\u8bd5\u4e00\u4e0b</p> <ol> <li>In a binary search tree, the keys on the same level from left to right must be in sorted (non-decreasing) order.</li> </ol> <p>A: T</p> <ol> <li>\u5224\u65adBST decision tree \u7684\u5408\u6cd5\u6027\uff1a\u5bf9\u5076\u6570\u6765\u8bf4\u4e00\u5b9a\u5de6\u53f3\u5e73\u8861 \u5947\u6570\u662f\u81ea\u5df1\u9009\u5b9a\u8d70\u5de6\u8fb9\uff08\u6216\u8005\u53f3\u8fb9\uff09\uff0c\u9009\u5b9a\u597d\u4e86\u4e00\u5b9a\u5bf9\u6bcf\u4e2a\u5b50\u6811\u6765\u8bf4\u90fd\u662f\u5de6\u8fb9\u5927\u4e8e\u53f3\u8fb9\uff08\u6216\u8005\u76f8\u53cd\uff09\u4e0d\u4f1a\u524d\u540e\u77db\u76fe</li> </ol>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-00","title":"Lec 00","text":"<p>3 types of structures </p> <p>sorting</p> <p>hash</p> <p>preparing for ads(queue stack)</p> <p>further studying</p> <p>\u6d4b\u8bd5\u6570\u636e\u7684\u8981\u6c42\uff1a</p> <ol> <li>\u5206\u652f\u6d4b\u8bd5\uff1a\u5bf9\u6bcf\u4e2aif-else\u90fd\u8981\u8fdb\u5165</li> <li>\u8fb9\u754c\u6d4b\u8bd5\uff1a\u6570\u636e\u8303\u56f4\u7684\u6700\u503c</li> </ol> <p>\u200b   \u9700\u8981\u5728\u6700\u5927\u6570\u636e\u65f6\u627e\u5230\u6700\u5feb\u6570\u636e\u548c\u6700\u6162\u6570\u636e</p>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-01-algorithm-analysis","title":"Lec 01 Algorithm Analysis","text":"<p>Time &amp; space complexity : machine and compiler independent</p> <p>mostly about time </p> <p>Assumption:</p> <ul> <li>instructions are excuted sequential </li> <li>simple instruct</li> <li>integer size is fixed and infinite memory</li> </ul> <p>usually analyzing the average and worst cases time </p> <p>O: worst case(take the smallest f(N) to illustrate )</p> <p>Tx &lt;= Cfx</p> <p>\u03a9: best case(take the largest f(N) to illustrate )</p> <p>Tx &gt;= Cfx</p> <p>\u00f8: completely same</p> <p>Tx = Ofx = \u03a9fx</p> <p>o: infinitely related to O</p> <p>operation:</p> <p>T1 + T2 = maxone </p> <p>T1*T2 = multiple</p>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-02","title":"Lec 02","text":"<p>Q:\u6c42\u5df2\u77e5\u6570\u5217\u7684\u6700\u5927\u5b50\u5217</p> <ol> <li>\u66b4\u529b\u7a77\u4e3e O(N^3)</li> <li>\u4f18\u5316this sum\u6c42\u6cd5 \u51cf\u5c11\u4e00\u7ec4\u5faa\u73af</li> <li>Divide and conquer O(nlogn)</li> <li>On-line Algorithm\u4e0d\u8d70\u56de\u5934\u8def</li> </ol> <pre><code>this = max = 0\nfor(...): \n\u200b   if:this &gt; max: max = this \n    else if: this &lt; 0: this = 0\n</code></pre> <p>Q:binery search</p> <p>use loop O(logn)</p> <ul> <li>usually used in  static and ordered data </li> </ul>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-04-adt","title":"Lec 04 ADT","text":"<p>Data type = object + operation </p> <p>Abstract: </p> <p>representation is separated from implementation </p> <p>each operation is isolated </p>"},{"location":"notes/cs/algorithm/fds/fds.html#polynomial-adt","title":"Polynomial ADT","text":"<p>coefficient and exponent </p> <pre><code>typedef struct // array way\n{\n  int Coeffientarray[maxdegree + 1];\n  int HighPower;\n}*Polynomial;\n</code></pre> <p>(X) when poly is sparse but the operation is dense</p> <pre><code>typedef struct poly_node *poly_ptr;\nstruct poly_node\n{\n  int Coe;\n  int Exp;\n  poly_ptr next;\n};\ntypedef *poly_ptr a;\n</code></pre>"},{"location":"notes/cs/algorithm/fds/fds.html#multilists","title":"Multilists","text":""},{"location":"notes/cs/algorithm/fds/fds.html#lec-05-linear-list","title":"Lec 05 Linear List","text":""},{"location":"notes/cs/algorithm/fds/fds.html#stack-adt","title":"Stack ADT","text":"<p>\u5e2e\u52a9\u7cfb\u7edf\u4e34\u65f6\u5b58\u653e\u6216\u8005\u8c03\u6574\u987a\u5e8f\u6240\u7528\u7684\u5de5\u5177</p> <p>Last in First out(LIFO)\u540e\u8fdb\u5148\u51fa</p> <p>\u53ea\u80fd\u5bf9\u6808\u9876\u8fdb\u884c\u64cd\u4f5c</p> <p>Objects\uff1aA finite ordered list </p> <p>Operations:</p> <p>Judge Empty: </p> <p>Stack: </p> <p>Dispose: </p> <p>MakeEmpty: </p> <p>Push: give a new element in</p> <p>Top: look at the top element</p> <p>Pop: take out the top element and delete it </p>"},{"location":"notes/cs/algorithm/fds/fds.html#implementation","title":"Implementation","text":"<ul> <li>Linked List(with a header): from top to down</li> </ul> <p>\u7528\u94fe\u8868\u5b9e\u73b0\u65f6 \u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f4d\u4e8estack\u7684top</p> <p>head\u53ef\u4ee5\u7406\u89e3\u4e3astack\u5916\u7684\u4e00\u5757\u5185\u5b58\uff0cs\u662fhead\u7684\u540d\u5b57\uff0c\u5c31\u662f\u8fd9\u4e2ahead\u5757 \u8d77\u5230\u5b9a\u4f4d\u4f5c\u7528\uff08\u5730\u5740\uff09</p> <p>s-&gt;next = first element in stack </p> <pre><code>//push:\n  Tem-&gt;next = s-&gt;next\n  s-&gt;next = Tem\n//top\n  return s-&gt;next-&gt;element\n//pop:\n  first = s-&gt;next//\u786e\u5b9a\u7b2c\u4e00\u5757\u7684\u4f4d\u7f6e\n  s-&gt;next = s-&gt;next-&gt;next\n  free(first)\n</code></pre> <p>But malloc and free are expensive </p> <p>Solution: use a recycle bin</p> <ul> <li>Array:  much better  when knowing size</li> </ul> <pre><code>struct Stack\n{\n  int Capacity;//size\n  int Topofstack;//the top pointer's location\n\n  //\u6b64\u5904\u7684pointer \u4e0d\u4ec5\u4ec5\u6307c\u7684pointer\uff0c\u662f\u4e00\u4e2a\u50a8\u5b58\u5730\u5740\u7684\u7b26\u53f7\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0b\u6807\u7b49\u7b49\n  //\u53ea\u8981\u5b58\u653e\u7684\u662f \u4f4d\u7f6e \u90fd\u53ef\u4ee5\u662f\u6307\u9488\n  ElementType *Array;//category of element\n};\n</code></pre> <p>\u6dfb\u52a0\u5143\u7d20\u65f6top++\uff0c\u5220\u9664\u5143\u7d20\u65f6top--\uff0c\u6307\u9488\u5411\u4e0b\u79fb\u52a8\uff0c\u4f46\u662f\u53ea\u662f\u6570\u503c\u51cf\u5c0f\uff0c\u5e76\u4e0d\u4f1afree\u4e0a\u65b9\u7684\u5143\u7d20\uff0c\u53ea\u662f\u5f53\u4f5c\u4ed6\u4eec\u4e0d\u5b58\u5728</p> <p>eg: Balancing Symbols check if () and [] and {} are balanced</p> <p>\u4ece\u5de6\u5230\u53f3\u4e00\u76f4\u770b\u5de6\u62ec\u53f7\uff0c\u9047\u89c1\u7684\u7b2c\u4e00\u4e2a\u53f3\u62ec\u53f7\u4e00\u5b9a\u662f\u548c\u5de6\u62ec\u53f7\u5339\u914d\u7684\uff0c\u6b64\u65f6\u5220\u9664\u8fd9\u4e00\u5bf9\u62ec\u53f7\uff0c\u63a5\u7740\u7ee7\u7eed\u91cd\u590d\u7684\u64cd\u4f5c\uff0c\u8bfb\u5b8c\u6574\u4e2a\u8f93\u5165\uff0c\u5982\u679c\u6808\u5185\u4e3a\u7a7a\uff0c\u5219balance</p> <pre><code>Algorithm\n{\n  Stack S;\n  InitializeStack(S);\n  while (more input)\n  {\n    read a character c;\n    if (c is an opening symbol)\n      push(c, S);\n    else if (c is a closing symbol)\n      if (StackIsEmpty(S))\n        return (unbalanced);\n      else\n      {\n        t = top(S);\n        pop(S);\n        if (t does not match the corresponding opening symbol of c)\n          return (unbalanced);\n      }\n  }\n  if (StackIsEmpty(S))\n    return (balanced);\n  else\n    return (unbalanced);\n}\n</code></pre> <p>eg\uff1aPostfix Expression a+b-cd = ab+cd- a(b+c)/d = abc+d/</p> <p>Method:</p> <ul> <li>when meeting oprand, push into stack</li> <li>when meeting operator, pop two oprand and calculate, then push the result into stack</li> </ul> <p>solution to () never pop a ( until you meet a )</p> <p>eg: Function calls: system stack</p> <p>stack pointer: to the top of the stack</p> <p>function pointer: to the bottom of the current function frame</p> <p>infix to postfix</p> <p>\u8f93\u5165\u4e00\u6bb5\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff0c\u8f6c\u6362\u5230\u540e\u7f00\u8868\u8fbe\u5f0f</p> <p>\u9047\u89c1operands\u76f4\u63a5\u8f93\u51fa\uff0c\u9047\u89c1operators\u5148\u653e\u8fdb\u6808\u5185\uff0c\u7ee7\u7eed\u8f93\u51fa\u6570\u5b57\uff0c\u9047\u89c1\u4e0b\u4e00\u4e2a\u8868\u8fbe\u5f0f\u65f6\uff0c\u6bd4\u8f83\u4e24\u4e2a\u8868\u8fbe\u5f0f\u7684\u4f18\u5148\u7ea7\uff1a</p> <ol> <li> <p>\u6808\u5185\u7684\u5927\u4e8e\u7b49\u4e8e\u6808\u5916\u7684\uff0cpop\u6808\u5185\u7684\uff0c\u4e0e\u6808\u5185\u4e0b\u4e00\u4e2a\u8fdb\u884c\u6bd4\u8f83</p> </li> <li> <p>\u6808\u5916\u7684\u5927\u4e8e\u6808\u5185\u7684\uff0c\u7ee7\u7eedpush</p> </li> <li> <p>\u9047\u89c1\u62ec\u53f7\uff1a</p> </li> </ol> <p>\u6808\u5916\u7684\u62ec\u53f7\u4f18\u5148\u7ea7\u6700\u9ad8\uff0c\u76f4\u63a5\u8fdb\u5165\uff0c\u9047\u89c1\u6709\u62ec\u53f7\u65f6\u5f39\u51fa\u62ec\u53f7\u5f80\u4e0a\u7684\u6240\u6709operators\uff0c\u6539\u53d8\u62ec\u53f7\u4f18\u5148\u7ea7\u65b9\u6cd5\uff1a</p> <ol> <li>\u7528\u6761\u4ef6\u5224\u65ad</li> <li>\u8bbe\u7f6e\u4e24\u5957\u62ec\u53f7\uff0c\u6808\u5185\u4e00\u5957\uff0c\u6808\u5916\u4e00\u5957</li> </ol>"},{"location":"notes/cs/algorithm/fds/fds.html#queue-adt","title":"Queue ADT","text":"<p>\u4fdd\u6301\u987a\u5e8f\u4f7f\u7528</p> <p>First in First out(FIFO)</p> <p>Objects: A finite ordered list</p> <p>Operations: ...</p> <p>Enqueue: add a new element to the end of the queue</p> <p>Front: take out the first element</p> <p>Dequeue: take out the first element</p>"},{"location":"notes/cs/algorithm/fds/fds.html#implementation_1","title":"Implementation","text":"<ul> <li>Array</li> </ul> <pre><code>struct QueueRecord\n{\n  int Capacity;// max size\n  int Front;// the first element\n  int Rear;// the last element\n  int Size;// current size\n  ElementType *Array;\n};\n</code></pre> <ul> <li>Circular Array</li> </ul> <p>Note: To defferentiate the empty and full, we need to waste one space, which means the max size is n-1</p> <p>Another method is to use a flag to indicate the empty and full</p>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-06-tree","title":"Lec 06 Tree","text":"<p>A collection of nodes.</p> <p>Consists:</p> <ol> <li>a distinguished node r, called root </li> <li>and zero or more nonempty (sub)tree</li> </ol> <ul> <li>subtrees must not connect together</li> <li>there are N -1 edge with N nodes </li> </ul> <p>degree:</p> <p>the numbers of subtrees of a node </p> <p>degree of a tree is max of all degrees </p> <p>children:</p> <p>directly connected ones(not all descents)</p> <p>siblings:</p> <p>children of the same parent</p> <p>leaf:</p> <p>degree 0 node</p> <p>path:</p> <p>a unique sequence of nodes</p> <p>length:</p> <p>the edges number</p> <p>depth:</p> <p>length of the unique path from the root</p>"},{"location":"notes/cs/algorithm/fds/fds.html#implementation_2","title":"Implementation","text":"<ol> <li>first child next sibling</li> </ol> <ol> <li>binary tree</li> </ol> <p>eg </p> <ul> <li>expression tree:</li> </ul> <p>\u5148\u8fdb\u884c\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f\uff1a</p> <p>\u5229\u7528\u5806\u6808\u9012\u5f52\u5b9e\u73b0\uff1a</p> <p>\u5bf9\u540e\u7f00\u8868\u8fbe\u5f0f\u9047\u89c1operand push\uff0c\u9047\u89c1operator pop\u51fa\u6808\u5185\u7684\u4e24\u4e2a\u5143\u7d20\u5f62\u6210\u4e00\u4e2a\u6811\uff0c\u518d\u5c06\u8fd9\u4e2a\u6811\u7684root push\u8fdb\u5806\u6808\u4f5c\u4e3a\u540e\u7eed\u5f62\u6210\u6811\u7684\u5143\u7d20</p> <p>--&gt;\u6808\u5185\u7684\u5143\u7d20\u5c31\u662ftree</p> <ul> <li>tree traversal:</li> </ul> <p>\u91c7\u7528\u9012\u5f52\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5preorder \u4e5f\u53ef\u4ee5postorder</p> <p>preorder\uff1a\u5148\u64cd\u4f5c\u518d\u9012\u5f52</p> <p>postorder\uff1a\u5148\u9012\u5f52\u518d\u64cd\u4f5c</p> <p>\u9664\u6b64\u4e4b\u5916\uff1a\u5c42\u5e8f\u904d\u5386 level order\uff1a</p> <p>\u7528queue\u5b9e\u73b0</p> <p>\u5c06\u6bcf\u4e00\u5c42\u7684node\u5168\u90e8\u8f93\u51fa\u540e\u8fdb\u5165\u4e0b\u4e00\u5c42</p> <ol> <li>\u5f53\u524d\u5c42\u5143\u7d20\u5168\u90e8enqueue</li> <li>queue\u4e0d\u4e3a\u7a7a\u65f6\uff1a</li> <li>dequeue\u4e00\u4e2a\u5143\u7d20</li> <li>enqueue\u8fd9\u4e2a\u5143\u7d20\u7684node</li> </ol> <pre><code>void levelorder(tree){\nenqueue(tree)\n    while(queue is not empty){\n        visit(T = dequeue())\n        for(each child C of T)\n            enqueue(C)\n    }\n}\n</code></pre> <p>inorder(only in binary tree)</p> <p>\u5148\u5de6\u540e\u53f3\u9012\u5f52</p> <p>for binary inorder:</p> <pre><code>void inorder(tree){\n  if Node == NULL\n    return;\n  inorder(tree-&gt;left);\n    printf tree-&gt;data;\n  inorder(tree-&gt;right);\n}\n</code></pre> <ul> <li>file structure</li> </ul> <ol> <li>\u6309\u7167\u5c42\u7ea7tab</li> </ol> <p>\u91c7\u7528preorder\uff0cvoid fun(tree, depth)</p> <p>\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u5f53\u524d\u6811\uff0c\u4e00\u4e2a\u662f\u6df1\u5ea6\uff0c\u6bcf\u5c42\u9012\u5f52\u65f6\uff0c\u6df1\u5ea6\u52a0\u4e00\uff0c\u6839\u636e\u6df1\u5ea6tab</p>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-07-bst","title":"Lec 07 BST","text":""},{"location":"notes/cs/algorithm/fds/fds.html#properties-of-bt","title":"Properties of BT","text":"<p>\u5c42\u6570\u4e3an\u7684BT \u6700\u591a\u67092^n-1\u4e2anode </p> <p>degree \u4e3a 0 \uff08\u53f6\u5b50\u7ed3\u70b9\uff09\u4e2a\u6570 = degree \u4e3a 2\u8282\u70b9\u4e2a\u6570 + 1</p> <p>proof\uff1a</p> <p>n = n0 + n1 + n2</p> <p>side = 2*n2 + n1</p> <p>side = n - 1</p> <p>\u53ef\u4ee5\u6d88\u53bbn1</p>"},{"location":"notes/cs/algorithm/fds/fds.html#bst-binary-search-tree","title":"BST binary search tree","text":"<p>def\uff1a</p> <ol> <li>\u5de6\u5b50\u6811\u6570\u503c\u4e00\u5b9a\u5c0f\u4e8e\u6839\u7ed3\u70b9\uff0c\u53f3\u5b50\u6811\u4e00\u5b9a\u5927\u4e8e\u6839\u7ed3\u70b9\uff08\u5f53\u524d\u6811\u7684\uff09</li> <li>\u5de6\u53f3\u5b50\u6811\u90fd\u662fBST\uff01\uff01\uff01\uff01</li> </ol> <p>\u9002\u7528\u4e8e\uff1a\u52a8\u6001\u67e5\u627e</p> <p>\u901a\u8fc7\u4e2d\u5e8f\u904d\u5386\u7531\u5c0f\u5230\u5927\u8f93\u51fa</p>"},{"location":"notes/cs/algorithm/fds/fds.html#implementation_3","title":"Implementation","text":"<ol> <li>find</li> </ol> <p>\u9012\u5f52\u5b9e\u73b0\uff1a</p> <p>basecase\uff1aT = NULL</p> <p>\u5de6\u8fb9 else \u53f3\u8fb9 else \u672c\u8eab\u5c31\u662f\u6839\u7ed3\u70b9\u6570\u503c</p> <p>\u4e0e\u6811\u7684\u6df1\u5ea6\u6210\u6b63\u6bd4</p> <ol> <li>find min max</li> </ol> <p>\u9012\u5f52\u5411\u5de6\u53f3\u8fb9\u8d70</p> <ol> <li> <p>Insert</p> </li> <li> <p>check if k in</p> </li> <li> <p>\u770b\u5de6\u53f3\u8fd8\u6709\u5417 \u6ca1\u6709\u5c31\u63d2</p> <pre><code>tree insert(element x, BST t){\n  if(t == NULL){\n    T = ()malloc(sizeof(struct Treenode));\n    T-&gt;element = x;\n    T-left = T-&gt;Right = NULL;\n  }\n  else{\n    if(T-&gt;element &gt; x){\n      t-&gt;Left = insert(x, t-&gt;Left);\n    }\n    else{\n      t-&gt;right = insert(x,t-&gt;right);\n    }\n  }\n  return t\n}\n</code></pre> </li> <li> <p>delete</p> </li> <li> <p>delete a leaf: make its parent point to NULL</p> </li> <li>n1: replace it by its single child, and free it</li> <li>n2:</li> </ol> <p>\u5c3d\u91cf\u4fdd\u8bc1\u539f\u6765\u6811\u7684\u7ed3\u6784\uff1a\u7528\u66ff\u6362\u7684\u65b9\u6cd5</p> <p>\u9009\u5de6\u8fb9\u6700\u5927\u7684\u5143\u7d20\u6216\u8005\u53f3\u8fb9\u6700\u5c0f\u7684\u5143\u7d20\u653e\u5230\u5220\u9664\u4f4d\u7f6e\uff0c\u518d\u5c06\u7528\u6765\u66ff\u6362\u7684\u5143\u7d20</p> <pre><code>tree delete(element x, BST t){\n  position tmpcell\n  if(t == NULL)\n    return not found;\n  else if(x &lt; t-&gt;element)\n    t-&gt;right = delete(x, t-&gt;right);\n  else if(x &gt; t-&gt;element)\n    t-&gt;left = delete(x, t-&gt;left)//search for the position\n   else{\n     if(t-&gt;left &amp;&amp; t-&gt;left){//if n2\n       tmpcell = findmin(t-&gt;right);//use find a min on right way\n       t-&gt;element = tmpcell-&gt;element;\n       t-&gt;right = delete(t-&gt;element, t-&gt;right);\n     }\n     else{// if n0 or n1\n       tmpcell = t;\n       if(t-&gt;left == NULL)\n         t = t-&gt;right;\n       else if(t-&gt;right == NULL)\n         t = t-&gt;left;\n       free(tmpcell);\n     } \n   }\n  return t;//return t to its parent \n}\n</code></pre> <p>lazy deletion: don't free a node but add a flag to it</p>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-08-priority-queueheaps","title":"Lec 08 Priority Queue(Heaps)","text":"<p>delete the element with the highest / lowest priority </p>"},{"location":"notes/cs/algorithm/fds/fds.html#binary-heap","title":"Binary Heap","text":"<ol> <li>Structure Property</li> </ol> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a</p> <p>\u4fdd\u8bc1\u6811\u9ad8h=logn</p> <p>\u662f\u90e8\u5206\u7684\u5b8c\u7f8e\u4e8c\u53c9\u6811--&gt;\u5b8c\u5168\u4e09\u89d2\u5f62\u4e14\u8282\u70b9\u7684\u6807\u53f7\u662f\u5b8c\u5168\u6309\u7167\u987a\u5e8f\u7684</p> <p>\u9002\u5408\u7528\u6570\u7ec4\u5b58\u653e\uff08\u5b8c\u5168\u5229\u7528\u7a7a\u95f4\uff09</p> <p>\u7528\u6570\u7ec4\u8fdb\u884c\u5b58\u50a8\uff1a</p> <p></p> <p>\u4e0d\u4f1a\u6709\u7a7a\u95f4\u6d6a\u8d39\uff08\u65e0\u504f\u659c\u6811\uff09</p> <p>\u4eceindex = 1 \u5f00\u59cb\u5b58\u50a8</p> <p>index = 0 \u7684\u4f4d\u7f6e\u4f5c\u4e3a\u54e8\u5175\uff0c\u8bbe\u7f6e\u6210\u79bb\u5f00\u6570\u503c\u8303\u56f4\u7684\u503c</p> <ul> <li>\u8fd0\u52a8\u65b9\u5f0f\uff1a\u4ee5\u6570\u7ec4\u89d2\u68071\u5f00\u59cb</li> </ul> <p>--&gt;\u4e0b\u6807x2 \u5411\u5de6\u8d70</p> <p>--&gt;\u4e0b\u6807x2 + 1\u5411\u53f3\u8d70</p> <p>\u4ece\u4e0b\u5f80\u4e0a\u8d70\uff1a\u27972 \u53d6\u6574</p> <p></p> <ol> <li>Order Property</li> </ol> <p>To def min heap and max heap: </p> <p>\u200b    \u76f4\u5c5e\u7684\u5927\u5c0f\u5173\u7cfb\u5206\u522b\u4e3a\u9012\u589e/\u9012\u51cf\uff0c\u6bd4\u8f83\u5144\u5f1f\u4e0d\u4e00\u5b9a\uff0c\u6cbf\u8def\u5f84\u5355\u8c03\uff0c\u56e0\u6b64\u641c\u7d22\u4efb\u610f\u503c\u4e00\u5b9a\u8981\u5168\u90e8\u626b\u63cf\uff0c\u6240\u4ee5HEAP\u4e0d\u9002\u7528\u4e8e\u641c\u7d22\uff08BST\u66f4\u597d\uff09</p> <p>\u200b    \u4f46\u662froot\u4e00\u5b9a\u662f\u6700\u503c\uff0c\u6240\u4ee5\u9002\u5408\u5bf9\u6700\u503c\u64cd\u4f5c</p> <p>### Operation</p> <ol> <li>Insertion: \u4e0a\u6ee4 </li> </ol> <p>\u5047\u8bbe\u653e\u5728\u6700\u672b\u5c3e\u2014&gt;\u5224\u65ad(\u4e0eparent\u5927\u5c0f)\u662f\u5426\u6210\u7acb</p> <pre><code>void Insertion(data x, Queue H){\n int i;\n  if(isFull) Error;\n  for(i = ++H-&gt;size; H-&gt;element[i/2] &gt; x; i = i/2){// \u603b\u4f1a\u6709\u54e8\u5175\u4f7f\u4e4b\u505c\u6b62                    //\u4e0eparent\u6bd4\u8f83\u5927\u5c0f\n    H-&gt;element[i] = H-&gt;element[i/2];//\u4e0a\u6ee4\u627e\u4f4d\u7f6e \u975e\u4ea4\u6362\n        ^\n        |\n//\u5728\u8fd9\u91cc\u7b2c\u4e00\u6b21\u64cd\u4f5c\u76f8\u5f53\u4e8e\u52a0\u5165\u4e00\u4e2a\u65b0\u5355\u5143 \u56e0\u4e3ai = size\u662f\u8fb9\u754c\uff0c++size\u662f\u65b0\u7684\u7a7a\u95f4\n  }\n  H-&gt;element[i] = x;\n}\n</code></pre> <p>O(logn)</p> <ol> <li>Delete min\uff1a\u4e0b\u6ee4</li> </ol> <p>\u5305\u62ec\u62ff\u51fa\u6700\u5c0f\u503c\u548c\u91cd\u6784Heap</p> <p>\u91cd\u6784\uff1a\u53d6\u51fa\u6700\u540e\u4e00\u4f4d\u7684\u6570\u636e\uff0c\u4e0b\u6ee4\uff08\u7531root\u4f4d\uff09\u627e\u5230\u53ef\u4ee5\u653e\u4ed6\u7684\u5730\u65b9</p> <pre><code>int Deletemin(Heap H){\n  int i, child;\n  1.\u5224\u7a7a\uff1b\n  minelement = H-&gt;element[1];\n  lastelement = H-&gt;element[H-&gt;size--];//\u6682\u65f6\u53d6\u51fa\u6700\u540e\u4e00\u4f4d\u5143\u7d20\n  for(i = 1; i*2 &lt;= H-&gt;size; i = child){//\u4e0b\u6ee4\u8fc7\u7a0b\n    child = i*2;\n    if(child != H-&gt;size &amp;&amp; [child+1] &lt; [child])\n      child ++;//\u6682\u5b58\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u8981\u6ee1\u8db3property\uff1a\u9700\u8981\u5c0f\u4e8e\u4e24\u4e2a\u5b69\u5b50\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\n    if(lastelement &gt; [child])\n       [i] = [child];//\u4e0b\u6ee4\n    else break;//\u627e\u5230\u4f4d\u7f6e\uff0cbreak\n  }\n  [i] = lastelement;\n  return minelement;\n}\n</code></pre> <ol> <li>Decrease/Increase Key: </li> </ol> <p>\u8c03\u6574\u4f18\u5148\u7ea7\uff0c\u5c06\u4efb\u52a1\u4e0a\u6d6e\u6216\u4e0b\u6c89\uff0cKey\u662f\u67d0\u4e2a\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\uff0c\u6539\u53d8Key\u7684\u5927\u5c0f</p> <p>\u9700\u8981\u91cd\u65b0\u8c03\u6574\u5806\u4f7f\u5176\u4fdd\u6301\u7279\u6027</p> <pre><code>void DecreaseKey(int i, int value, Heap *h){\n    int j;\n    if(i &gt; h-&gt;size){\n        printf(\"Index is not in the heap\\n\");\n        return;\n    }\n    if(h-&gt;element[i] &lt; value){\n        printf(\"New value is greater than current value\\n\");\n        return;\n    }\n    for(j = i; h-&gt;element[j/2] &gt; value; j/=2){\n        h-&gt;element[j] = h-&gt;element[j/2];\n    }\n    h-&gt;element[j] = value;\n}\n</code></pre> <ol> <li>Delete\uff1a</li> </ol> <p>\u5148Decrease \u518d Deletemin</p> <ol> <li>build Heap</li> </ol> <pre><code>void BuildHeap(Array H[]){\n  int i = h-&gt;size/2;\n    for(; i &gt; 0; i--){\n        int j = i;\n        int tmp = h-&gt;element[j];\n        int k = j*2;\n        while(k &lt;= h-&gt;size){\n            if(k &lt; h-&gt;size &amp;&amp; h-&gt;element[k] &gt; h-&gt;element[k+1]){\n                k++;\n            }\n            if(tmp &gt; h-&gt;element[k]){\n                h-&gt;element[j] = h-&gt;element[k];\n                j = k;\n                k = j*2;\n            }else{\n                break;\n            }\n        }\n        h-&gt;element[j] = tmp;\n}\n</code></pre>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-09-disjoint-set","title":"Lec 09 Disjoint set","text":"<p>\u7b49\u4ef7\u5173\u7cfb equivalent relation </p> <p>symmetric reflexive transitive</p> <p>\u7b49\u4ef7\u7c7b\uff1a \u5177\u6709\u76f8\u540c\u7b49\u4ef7\u5173\u7cfb\u7684\u4e00\u7c7b\u5bf9\u8c61</p> <ul> <li>eg\uff1a\u5bf9\u7b49\u4ef7\u7c7b\u8fdb\u884c\u5206\u7c7b</li> </ul> <p></p> <pre><code>void find(){//\u5e76\u67e5\u96c6\u7b97\u6cd5\n//1.read in relaitions\nInitial n disjoint set;\n  while(read in a~b){\n    if(!(Find(a) == Find(b))){//\u5982\u679c\u4e24\u8005\u4e0d\u5c5e\u4e8e\u540c\u4e00\u5bb6\u65cf\uff0c\n      Union two set//\u5408\u5e76\u8fd9\u4e24\u4e2a\u5bb6\u65cf\n    }\n  }\n//2.dicide if a~b\n    while(read in a and b)\n    if(Find(a) == Find(b)) output(true);\n    else output(false)\n}\n</code></pre>"},{"location":"notes/cs/algorithm/fds/fds.html#implementation_4","title":"Implementation","text":"<p>\u7528\u6570\u7ec4\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u6307\u9488</p> <p>Union</p> <p>S[element] = element's parent </p> <p>S[root] = 0 and </p> <p></p> <p>Find</p> <pre><code>for(;S[x] &gt; 0; x = S[x])\n  return x;\n</code></pre> <p>\u4f46\u662f\u4f1a\u6709\u53ef\u80fd\u6210\u4e3a\u7ebf\u6027\u94fe\u8868\uff0c\u6811\u9ad8\u975e\u5e38\u9ad8</p> <p>Smart Union</p> <ol> <li>union by size</li> </ol> <p>\u5b58\u653esize\uff1aS[root] = -size</p> <p>\u6b64\u65f6\u7684size\u4e0d\u4f1a\u8d85\u8fc7log2(N)+1</p> <p>Path compression</p> <pre><code>type find(s, x){\n    if(S[x] &lt;= 0) return x;\n  else return S[x] = find(S[x], S);//\u9012\u5f52\u7684\u5c06\u7ecf\u8fc7\u8282\u70b9\u8fde\u5230father \u4ece\u800c\u8fbe\u5230path compress\n}\n</code></pre> <p>\u975e\u5c3e\u9012\u5f52\uff0c\u4f1a\u5728\u6bcf\u6b21\u9012\u5f52\u7684\u65f6\u4faf\u5c06\u7ecf\u8fc7\u7684\u8282\u70b9\u8fde\u5230father\u4e0a</p>"},{"location":"notes/cs/algorithm/fds/fds.html#lec10-graph-algorithm","title":"Lec10 Graph Algorithm","text":"<p>\u4e00\u4e2a\u6328\u7740\u4e00\u4e2a-&gt;\u7ebf\u6027\u8868</p> <p>\u4e00\u4e2a\u7ba1\u597d\u591a\u4e2a-&gt;\u6811</p> <p>\u6811\u662f\u56fe\u7684\u7279\u6b8a\u60c5\u51b5</p> <p>\u56fe\u662f\u591a\u5bf9\u591a</p>"},{"location":"notes/cs/algorithm/fds/fds.html#def","title":"Def","text":"<p>G(V, E) \u9876\u70b9 \u8fb9</p> <p>\u53ef\u4ee5\u53ea\u6709\u9876\u70b9\u6ca1\u6709\u8fb9\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u9876\u70b9</p> <ul> <li>\u65e0\u5411\u56fe undirected</li> </ul> <p>(v1, v2)</p> <ul> <li>\u6709\u5411\u56fe directed</li> </ul> <p>&lt; v1, v2 &gt;</p> <p>complete graph : a graph has max edges </p> <p>\u8fb9\u6570\uff1a\u6709\u5411n*(n-1)</p> <p>\u200b       \u65e0\u5411n*(n-1)/2</p> <p>adjacent:\u76f8\u90bb\u7684</p> <p>\u5bf9\u6709\u5411\u56fe\uff1aA-&gt;B: A is adjacent to B, B is adjacent from A</p> <p>subgraph: \u9876\u70b9\u7684\u5b50\u96c6&amp;&amp;\u8fb9\u7684\u5b50\u96c6</p> <p>path:(v1, v2,......)</p> <p>length of path: \u8fb9\u7684\u6570\u91cf</p> <p>simple path\uff1a\u6bcf\u4e2av\u4e0d\u76f8\u7b49</p> <p>circle: simple path with vi = vj \u5934\u5c3e\u76f8\u7b49\u7684simple path</p> <p>connected graph: every pair of v is connected </p> <p>Component: \u4e00\u4e2a\u56fe\u91cc\u7684\u6700\u5927\u8fde\u901a\u5b50\u56fe(\u4e0d\u80fd\u518d\u52a0\u5165\u4e00\u4e2av/e\uff0c \u5426\u5219\u5c31\u4e0d\u76f8\u8fde)</p> <p>tree: \u65e0\u73af\u7684\u6839\u7ed3\u70b9\u4e3a\u4e00\u7684\u56fe</p> <p>DAG: \u6709\u5411\u65e0\u73af\u56fe</p> <p>Strongly connected directed graph: \u4efb\u610f\u4e00\u5bf9\u9876\u70b9\uff0c\u5f80\u8fd4\u90fd\u6709\u8def</p> <p>Weakly connected: \u4e0d\u6ee1\u8db3\u5f3a\u8fde\u901a\uff0c\u4f46\u662f\u5c06\u5176\u8f6c\u53d8\u4e3a\u65e0\u5411\u56fe\u540e\u8fde\u901a\u7684\u56fe</p> <p>Degree: \u5165\u5ea6+\u51fa\u5ea6Degree: number of edges incident to v. 2E=\u2211degree</p>"},{"location":"notes/cs/algorithm/fds/fds.html#representation","title":"Representation","text":"<ul> <li>\u4e8c\u7ef4\u6570\u7ec4</li> </ul> <p>adj_set[ i ] [ j ] = 1 if i j connected else = 0</p> <ul> <li>\u94fe\u8868</li> </ul> <p>\u53ea\u5b58\u51fa\u5ea6</p> <p>n\u4e2a\u9876\u70b9\uff0c\u8981\u5f00\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5bf9\u5e94\u4f4d\u7f6e\u662f\u6bcf\u4e2a\u9876\u70b9</p> <p>\u6570\u7ec4\u5143\u7d20\u662f\u94fe\u8868\u7684\u5934\u6307\u9488\uff0c\u5373\u76f8\u5f53\u4e8e\u5f00n\u4e2a\u94fe\u8868\u7684\u5934\u6307\u9488\uff0c\u5b58\u50a8\u65f6\uff1a</p> <p>A-&gt;B\uff1a\u627eA\u94fe\u8868\uff0c\u5c06B\u7684\u5934\u8282\u70b9\u63d2\u5165\u5230A\u7684\u94fe\u8868\u4e2d</p> <p></p> <ul> <li>Multilist</li> </ul> <p>\u5b58\u8fb9\uff0c\u7ed3\u6784\u4f53\u91cc\u5305\u542bmark\uff0c\u7528\u4e8e\u6807\u8bb0\u8fd9\u6761\u8def\u662f\u975e\u88ab\u8bbf\u95ee\u8fc7\uff0c\u4e24\u4e2a\u70b9\u6307\u5411\u6240\u8fde\u63a5\u7684\u8282\u70b9</p> <ol> <li>\u62d3\u6251\u6392\u5e8f</li> </ol> <p></p> <p>AOV Network activity on verticle</p> <p>\u4e00\u5b9a\u662f\u975e\u81ea\u53cd\u7684-&gt; DAG</p> <p>\u62d3\u6251\u5e8f\uff1a</p> <p>\u7406\u89e3\uff1a\u6309\u7167\u6240\u6709\u7684\u5148\u4fee\u8bfe\u90fd\u4e0d\u51b2\u7a81\u7684\u60c5\u51b5\u80fd\u6392\u51fa\u4e00\u4e2a\u8bfe\u8868</p> <pre><code>void Toposort(Graph G){\n  int counter;\n  Vertex v, w;\n  for(counter = 0; counter &lt; Numvertex; counter ++){\n    v = findNewVertexofDegreeZero();//\u627e\u5230\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u8fb9\n    if(v == NotAVertex){\n      Error(\"Graph is a cycle\"); break;\n    }\n    TopNum[v] = counter;//\u5982\u679c\u6709\u53ef\u4ee5\u5b66\u7684\u8bfe\uff0c\u5c06\u5b83\u5b66\u6389\n    for(each w adjacent from v)\n      indegree[w]--;//\u5e76\u4e14\u5c06\u4ee5\u5b83\u4e3a\u9884\u4fee\u8bfe\u7684\u8bfe\u4e2d\u5220\u6389\uff08\u51cf\u5c0f\u4ed6\u7684\u4e0b\u4e00\u95e8\u8bfe\u7684\u5165\u5ea6\uff09\n  }\n}//O(v^2)\n</code></pre> <p>\u6539\u8fdb\uff1a\u91c7\u7528\u4e00\u4e2a\u7ed3\u6784\u5b58\u50a8\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9</p> <p></p>"},{"location":"notes/cs/algorithm/fds/fds.html#lec11-shortest-path-algorithm","title":"Lec11 Shortest Path Algorithm","text":"<p>\u4e24\u70b9\u4e4b\u95f4\u7684\u6743\u91cd\u548c\u6700\u5c0f-&gt;weighted path length \u6700\u5c0f\u503c</p> <ol> <li>single-source \u5355\u6e90\u6700\u77ed\u8def</li> </ol> <p>\u56fa\u5b9a\u4e00\u4e2a\u9876\u70b9\u5230\u5176\u4ed6\u70b9\u7684\uff08\u52a0\u6743\uff09\u8ddd\u79bb\u6700\u5c0f</p> <ul> <li>\u65e0\u6743\uff1a\u7b49\u4ef7\u4e0e\u6bcf\u6761\u8def\u7684\u6743\u91cd\u662f1</li> </ul> <p>Breadth-first Search: \u56fa\u5b9a\u4e00\u4e2a\u70b9 \u627e\u4e0e\u4ed6\u8ddd\u79bb\u4e3a1\u7684\u70b9 </p> <p>\u8fc7\u7a0b\u4e2d\u6807\u8bb0\u907f\u514d\u8d70\u91cd\u590d\u8def\u7ecf </p> <p>\u5b58\u50a8\u8def\u5f84\uff1a\u7528\u7236\u6307\u9488\u8bb0\u5f55\u524d\u4e00\u4e2a\u4f4d\u7f6e \u5b58\u524d\u7f6e\u9876\u70b9\u7684\u7f16\u53f7</p> <pre><code>void Unweighted(Table T){//T is initialized with source vertex S\n  queue q;\n  vertex v, w;\n  q = CreateQueue(NumVer); MakeEmpty(q);\n  Enqueue(S, q);//\u521d\u59cb\u5316\u65f6\u5c06\u8d77\u70b9\u8fdb\u961f\u5217\n  while(!IsEmpty(q)){\n    v = Dequeue(q);//\u5c06\u5f53\u524d\u8282\u70b9\u63a8\u51fa\u961f\u5217\n    T[v].Known = true;//tag the vertex which has been visited\uff0c\u8fd9\u4e00\u6b65\u53ef\u4ee5\u4e0d\u8981\n    for(each w adjacent from v){\n      if(T[w].Dist == infinity){//\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u6ca1\u6709\u88ab\u8bbf\u95ee\n        T[w].Dist = T[v].Dist + 1;//\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb\n        T[w].Path = v;//\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u8def\u5f84\n        Enqueue(w, q);//\u5c06\u90bb\u8fd1\u7684\u8282\u70b9\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u5f53\u524d\u4f4d\u7f6e\n      }\n    }\n  }\n  DisposeQueue(q);\n}\n</code></pre> <p>O(V+E): \u6bcf\u6b21\u8fdb\u5165\u4e00\u4e2aV \u8d70\u904dV</p> <ul> <li>\u6709\u6743\uff1a</li> </ul> <p>Dajkstra</p> <pre><code>void Dijkstra(Table T){\n  for(;;){\n    v = smallest unknown distance vertex;\n    T[v].known = true;\n    for(each w adjacent to v){\n      if(T[w].known == false){\n        if(T[v].distance + Cvw &lt; T[w].distance){\n          T[w].distance = T[v].distance + Cvw;\n          T[w].path = v;\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-12-network-flow-minimum-spanning-tree","title":"Lec 12 Network Flow &amp; Minimum Spanning Tree","text":"<p>Network Flow</p> <p>Network \u6709\u6743</p> <p>Flow \u6709\u5411</p> <p>\u7531source \u5230sink \u6e90\u5230\u6c47</p> <p>\u5c06\u6bcf\u4e2a\u8fb9\u7684\u5927\u5c0f\u5f53\u4f5c\u7ba1\u9053\u7684\u6700\u5927\u6d41\u91cf</p> <p>The task is to find the maximum amount of flow that can pass from s to t</p> <ol> <li>undo</li> </ol> <p>\u627e\u5230\u4e00\u6761\u8def\u4e0a\u6700\u5927\u901a\u91cf\uff0c\u5c06\u8fd9\u6761\u8def\u4e0a\u7684\u6bcf\u6761\u8fb9\u51cf\u53bb\u8fd9\u4e2a\u503c\uff0c\u5e76\u5728\u6bcf\u6761\u8def\u4e0a\u53cd\u5411\u52a0\u4e00\u4e2a\u8fd9\u4e2a\u503c</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(fE) f\u662f\u6700\u5927\u6d41</p> <p>Minimum spanning tree </p> <p>\u4e00\u4e2a\u5b50\u56fe\u5305\u542b\u6240\u6709\u9876\u70b9\uff0c\u5305\u542b\u4e00\u90e8\u5206\u8fb9\uff0c\u6784\u6210\u4e86\u4e00\u4e2a\u6811</p> <p>use greedy:</p> <ol> <li>use only edges within graph </li> <li>use exactly V-1 edges </li> <li>no use edges that produce cycle</li> </ol> <p>Prim : grow a tree</p> <p>\u7c7b\u4f3cDijkatra \u56e0\u4e3a\u751f\u6210\u6811\u9700\u8981n\u4e2a\u70b9\uff0c\u6bcf\u4e00\u6b65\u90fd\u662f\u5b50\u751f\u6210\u6811</p> <p>\u5f00\u59cb\u9009\u62e9\u4e00\u4e2a\u70b9\uff0c\u627e\u90bb\u8fb9\u6700\u5c0f\u7684\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u70b9\uff0c\u6b64\u65f6\u5c31\u6709\u4e86\u4e00\u4e2a\u5b50\u751f\u6210\u6811\uff0c\u63a5\u4e0b\u6765\u6bcf\u4e00\u6b65\u90fd\u9700\u8981\u9009\u62e9\u8fd9\u4e2a\u5b50\u6811\u7684\u5411\u5916\u6269\u5c55\u8fb9\uff08\u8fb9\u7684\u4e00\u5934\u5728\u6811\u4e0a\uff0c\u4e00\u5934\u4e0d\u5728\uff09</p> <p>Kruskal : maintain  a forest</p> <p>\u4ee5\u8fb9\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u6bcf\u6b21\u627e\u6700\u5c0f\u7684\u8fb9\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e0d\u6784\u6210\u56de\u8def\uff0c\u8fd9\u6837\u9009\u5b8cn-1\u6761\u8fb9\u540e\uff0c\u5c31\u4f1a\u6709\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811</p> <pre><code>void Kruskal(Graph g){\n  T = {};//set as empty\n  while(|T| &lt; V-1 edges &amp;&amp; E is not empty){\n    choose a least cost edges(v, w) from E;\n    delete it from E;\n    if((v, w) wont cause a cycle)\n      add(v, w) to T;\n    else\n      discard it;\n  }\n}\n</code></pre> <p>\u9002\u7528\u4e8e</p> <p>\u53ef\u4ee5\u7528\u5806\u627e\u5230\u6700\u5c0f\u503c</p> <p>\u5224\u65ad\u662f\u5426\u6784\u6210\u56de\u8def\uff1a\u5e76\u67e5\u96c6\u7b97\u6cd5\uff0c\u6bcf\u6b21\u627e\u8fb9\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u52a0\u5165\u4e00\u4e2a\u7b49\u4ef7\u5173\u7cfb</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO()</p>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-13-bfs-dfs","title":"Lec 13 BFS DFS","text":"<p>\u56fe\u76f8\u5173\u95ee\u9898\u7684\u672c\u8d28\u662f\u904d\u5386</p> <p>\u5c06\u4e8c\u7ef4\u7ed3\u6784\u8f6c\u5316\u6210\u4e00\u7ef4\u7ed3\u6784\u53bb\u505a</p> <p>\u904d\u5386\u65f6\uff1a\u9700\u8981\u9009\u5b9a\u4e00\u4e2a\u57fa\u51c6\u4f4d\u7f6e\uff0c\u5728\u57fa\u51c6\u4f4d\u7f6e\u4e0a\u627e\u76f8\u8fde\u63a5\u7684\u5404\u4e2a\u70b9</p> <p>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u76f8\u90bb\u70b9\uff0c\u5269\u4e0b\u7684\u70b9\u9700\u8981\u4fdd\u5b58</p> <p>--&gt;\u6839\u636e\u4fdd\u5b58\u65b9\u6cd5\u5206\u7c7b\uff1a</p> <ol> <li>\u7528\u961f\u5217\uff1a\u5bbd\u5ea6\u641c\u7d22</li> <li>\u7528\u5806\u6808\uff1a\u6df1\u5ea6\u641c\u7d22 \u4f46\u662f\u7a0b\u5e8f\u5b9e\u73b0\u65f6\u901a\u5e38\u7528\u9012\u5f52\u800c\u4e0d\u7528\u5806\u6808</li> </ol> <p>DFS</p> <ol> <li>undirected</li> </ol> <pre><code>void DFS(Vertex a){\n  visited[a] = true;\n  for(each w adjacent to v){\n    if(!visited[w]){\n      DFS(w);\n      printf(\"\\n\");\n    }\n  }\n}\n</code></pre> <p>\u8ba1\u7b97\u8fde\u901a\u5206\u91cf\uff1a\u5bf9\u4e00\u4e2a\u56fe\u8fdb\u884c\u904d\u5386\u540e\u67e5\u770bvisited \u5982\u679c\u6ca1\u6709visited\uff0c\u8c03\u7528DFS \u5206\u91cf= DFS\u8c03\u7528\u6b21\u6570</p> <p>\u53cc\u8054\u901a\uff1a\u62ff\u6389\u56fe\u4e2d\u4e00\u4e2a\u70b9\uff0c\u5269\u4f59\u7684\u56fe\u4ecd\u7136\u662f\u8054\u901a\u7684</p> <p>\u62ff\u6389\u540e\u56fe\u4e0d\u8fde\u901a \u79f0\u8fd9\u4e2a\u70b9\uff1a\u5173\u8282\u70b9articulation</p> <p>\u53cc\u8054\u901a\u5219\u65e0\u5173\u8282\u70b9</p> <p>\u53cc\u8054\u901a\u5206\u91cf\uff1a\u6700\u5927\u5b50\u53cc\u8054\u901a\u56fe</p> <p>Q1:\u8ba1\u7b97\u53cc\u8054\u901a\u5206\u91cf</p> <ol> <li>\u6df1\u5ea6\u904d\u5386 \u904d\u5386\u65f6\u7ed9\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0Num\u4f5c\u4e3a\u904d\u5386\u7684\u987a\u5e8f</li> <li>\u8ba1\u7b97Low\u503c\uff1aLow\u7684\u7406\u89e3\uff1a\u6211\u80fd\u8054\u7edc\u5230\u7684\u6700\u9ad8\u5c42\uff08\u6700\u5c0f\u7684num\uff09</li> <li>\u67e5\u770b\u6ee1\u8db3\u5173\u8282\u7684\u6761\u4ef6</li> </ol> <p></p> <p>Q2:Euler Circuit</p> <p>\u4e00\u7b14\u753b</p> <p>\u7ed3\u8bba\uff1a</p> <ol> <li>\u5982\u679c\u6240\u6709\u8282\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u6b27\u62c9\u56de\u8defEuler Circuit\uff08\u8d77\u6b62\u70b9\u76f8\u540c\uff09</li> <li>\u5982\u679c\u6709\u4e24\u4e2a\u5947\u6570\u5ea6\u8282\u70b9\uff0c\u53ef\u4ee5\u5f62\u6210\u6b27\u62c9\u8def\u5f84Euler Tour\uff08\u4e00\u7b14\u753b\u4f46\u4e0d\u7528\u8d77\u6b62\u70b9\u76f8\u540c\uff09</li> </ol> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(E + V)</p>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-14-sorting","title":"Lec 14 Sorting","text":"<p>selection</p> <p>bubble</p> <p>insertion</p> <pre><code>void insertion(int a[], int n){\n  int tmp;\n  for(int p = 1; p &lt; n; p++){\n    tmp = a[p];\n    for(int j = p; j &gt; 0 &amp;&amp; a[j-1] &gt; tmp; j--)\n      a[j] = a[j-1];//\u79fb\u4f4d\n    a[j] = tmp;\n  }\n}//\u5e73\u5747O(n^2) \u6709\u5e8f\u65f6\u6700\u597dO(n) \u65e0\u5e8f\u65f6O(n^2)\n</code></pre> <p>Inversion \u9006\u5e8f\uff1a\u5927\u5c0f\u4e0e\u4f4d\u7f6e\u4e0d\u5339\u914d\u7684\u4e24\u9879</p> <p>\u6700\u574f\u7684\u60c5\u51b5\uff1aC(2 n)\u4e2a\u9006\u5e8f \u9700\u8981\u4ea4\u6362C(2 n)\u6b21</p> <p>\u5e73\u5747\uff1an^2/4</p> <p>Shellsort</p> <p>\u5206\u7ec4\u4f7f\u7528\u63d2\u5165</p> <p>\u6700\u574fn^(3/4) \u5e73\u5747 n^(6/7)</p> <p>Heap sort</p> <p>\u6811\u5f62\u9009\u62e9</p> <ol> <li> <p>\u9996\u5148\u5efa\u5806 \u91cd\u590d\u53bb\u9664\u5806\u9876\u5143\u7d20 O(nlongn)</p> </li> <li> <p>\u5efa\u6700\u5927\u5806\uff0c\u6bcf\u6b21\u5c06\u5806\u9876\u653e\u5230\u6570\u7ec4\u6700\u540e\u7aef\uff0c\u7136\u540e\u7ef4\u62a4\u8fd9\u4e2a\u5806</p> </li> </ol> <pre><code>\n</code></pre> <p>2NlogN-O(NloglogN)</p> <p>\u5feb\u6392\u548cmerge\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u601d\u60f3\uff1adivede and conquer and merge </p> <p>\u4f46\u662f\u4fa7\u91cd\u70b9\u4e0d\u540c\uff1a</p> <ol> <li>merge\u5728\u4e8c\u5206\u6570\u7ec4\u540e\u5f3a\u8c03\u5728\u5206\u6cbb\u4e4b\u540e\u7684\u5f52\u5e76\uff0c\u4f46\u662f\u5f52\u5e76\u7684\u65f6\u5019\u82e5\u5de6\u8fb9\u5df2\u7ecf\u5168\u90e8\u5c0f\u4e8e\u53f3\u8fb9\uff0c\u5219\u65e0\u9700merge \u8fd9\u5c31\u662f\u5feb\u6392\u7684\u76ee\u6807</li> <li>\u5feb\u6392\u5f3a\u8c03\u5728divide\u65f6\u627e\u5230\u57fa\u51c6\u5143\u7d20pivot \u4f7f\u5f97\u5206\u6cbb\u7684\u6570\u7ec4\u6574\u4e2a\u90fd\u5927\u4e8e\u6216\u5c0f\u4e8e</li> </ol> <p>Merge sort</p> <p>O(nlogn)</p> <p>Quick sort</p> <p>slower than insertion when N &lt;= 20</p> <p>\u9009\u62e9pivot\uff1a\u53ef\u4ee5\u524d\u4e2d\u540e\u4e09\u4e2a\u91cc\u9762\u53d6\u9002\u4e2d\u7684</p> <p>\u4e00\u5b9a\u662f\u9002\u4e2d\u7684\uff1a\u968f\u673a\u9009\u4e94\u4e2a \u4e2d\u95f4\u7684\u5143\u7d20</p> <p>hqm\u7684qsort\uff1a</p> <pre><code>\n</code></pre>"},{"location":"notes/cs/algorithm/fds/fds.html#lec-16-hashing","title":"Lec 16 Hashing","text":"<p>\u5747\u5300</p> <p>\u54c8\u5e0c\u51fd\u6570\u600e\u4e48\u8bbe\u8ba1</p> <p>\u51b2\u7a81\u600e\u4e48\u89e3\u51b3</p> <p>\u54c8\u5e0c\u65b9\u6cd5\u7684\u8bc4\u4ef7</p> <p>Hashing for searching</p> <p>\u901a\u8fc7\u8ba1\u7b97\u6765\u627e\u5bf9\u8c61</p> <ul> <li>\u5b57\u5178\u95ee\u9898</li> </ul> <p>ADT</p> <p>&lt; name, attribute &gt;</p> <p>hash table:</p> <p>n \u662f\u5b9e\u9645\u8fdb\u5165\u7684\u54c8\u5e0c\u5143\u7d20 T\u662f\u53ef\u63d0\u4f9b\u7684\u4e0d\u540c\u54c8\u5e0c\u503c</p> <p>identifier density: n/T </p> <p>loading density: n/sb   sb\u662f\u54c8\u5e0c\u8868\u7684\u9762\u79ef\uff08\u53ef\u4ee5\u5b58\u653e\u7684\u6570\u91cf\uff09</p>"},{"location":"notes/cs/algorithm/fds/fds.html#design-hash","title":"Design Hash","text":"<p>\u6570\u5b57\uff1a</p> <ol> <li>\u6c42\u4f59\u6cd5 u(x) = x%m</li> <li>\u5e73\u65b9\u53d6\u4e2d\uff1a</li> </ol> <p>\u5c06\u6570\u5e73\u65b9\uff0c\u53d6\u4e2d\u95f4\u7684\u4e24\u4f4d\u6570</p> <ol> <li>\u6298\u53e0\u6cd5\uff1a</li> <li>\u6570\u5b57\u5206\u6790\u6cd5</li> </ol> <p>\u5b57\u7b26\u4e32\uff1a\u5148\u53d8\u4e3a\u6570\u5b57</p> <p>\u901a\u8fc7\u4f4d\u8fd0\u7b97\u8fdb\u884c\u8f6c\u6362\uff1a</p> <pre><code>int index_hash(char *x, int tablesize){\n  unsigned int hashval = 0;\n  while(*x != '\\0')\n    hashval = (hashval &lt;&lt; 5) + *x++;//\u76f8\u5f53\u4e8e x 32\n  return hashval % tablesize;\n}\n</code></pre>"},{"location":"notes/cs/algorithm/fds/fds.html#collision","title":"Collision","text":"<ol> <li>\u94fe\u8868\u89e3\u51b3\uff1an\u4e2a\u5143\u7d20\uff0c\u54c8\u5e0c\u8868\u81f3\u5c11\u957f\u5ea6\u4e3a2n</li> </ol> <p>O(1) insertion</p> <ol> <li>open addressing:</li> </ol> <p>\uff08H(x) + f(i) \uff09% Tablesize</p> <p>i\u662f\u51b2\u7a81\u6b21\u6570\uff0cf\u8868\u793a\u504f\u79fb\u91cf\uff0c\u5178\u578b\u7684\u662ff(i) = i, \u79f0\u4e3a</p> <ul> <li>\u7ebf\u6027\u63a2\u6d4bprobing</li> </ul> <p>\u5e73\u5747\u6210\u529f\u67e5\u627e\u6b21\u6570\uff1a\u679a\u4e3e\u6cd5</p> <p>\u5e73\u5747\u4e0d\u6210\u529f\u67e5\u627e\u6b21\u6570\uff1a\u6839\u636e\u54c8\u5e0c\u503c\u7684\u7279\u70b9\u5206\u7c7b \u5bf9\u6bcf\u7c7b\u6c42\u5e73\u5747\u503c</p> <ul> <li>\u4e8c\u6b21\u63a2\u6d4b\uff1a</li> </ul> <p>f(i) = i^2\u907f\u514d\u521d\u59cb\u805a\u96c6\uff0c\u4f46\u662f\u6709\u65f6\u5019\u4f1a\u627e\u4e0d\u5230\u7a7a\u4f4d</p> <p>\u5728\u4e0b\u5217\u6761\u4ef6\u6ee1\u8db3\u65f6\uff0c\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4f4d\u7f6e\uff1a</p> <p>\u534a\u6ee1\uff0cTS = \u7d20\u6570</p> <ul> <li>double hashing:</li> </ul> <p>\u5c06f(i)\u8bbe\u8ba1\u4e3a\u65b0\u7684i*H2(x)</p> <p>\u5178\u578b\uff1aH2 = R-(x%R)</p> <ul> <li>rehash</li> </ul> <p>\u5c06\u8868\u6269\u5927\u4e00\u500d\u540e\u627e\u6700\u8fd1\u7684\u7d20\u6570</p> <p>rehash\u6761\u4ef6\uff1a</p> <ol> <li>\u5143\u7d20\u8d85\u8fc7\u4e00\u534a</li> <li>\u8d85\u8fc7load</li> <li>\u63d2\u5165\u5931\u8d25</li> </ol>"},{"location":"notes/lingo/cpp.html","title":"Object-Oriented Programming","text":"<p> \u7ea6 5674 \u4e2a\u5b57  260 \u884c\u4ee3\u7801  14 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 22 \u5206\u949f</p> <p>in c++ </p> <p>\u6458\u8981</p> <p>\u8fd9\u662f\u6211\u5728\u5b66\u4e60oop\u65f6\u7684memo\uff0c\u6211\u4e0d\u4f1a\u7cfb\u7edf\u7684\u6574\u7406\u6574\u4e2a\u8bfe\u7a0b\u7684\u7b14\u8bb0\uff0c\u4f46\u662f\u4f1a\u5199\u4e0b\u4e00\u4e9b\u5907\u5fd8\u548c\u4f8b\u5b50\u65b9\u4fbf\u590d\u4e60\u65f6\u4f7f\u7528</p> <p>\u5b8c\u6574\u7684\u7b14\u8bb0\u6211\u53c2\u8003\u7684\u662fNoughQ\u540c\u5b66\u7684\u7b14\u8bb0</p>"},{"location":"notes/lingo/cpp.html#lec1","title":"Lec1","text":"<pre><code>string str1 = \"foo, bar!\";\nofstream fout(\"out.txt\");\nifstream fin(\"out.txt\");\nstring str2, str3;\nfin &gt;&gt; str2 &gt;&gt; str3;\n</code></pre> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e24\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf\u6765\u63a5out.txt\u662f\u56e0\u4e3a\u5176\u4e2d\u7684\u5185\u5bb9\u5305\u542b\u4e00\u4e2awhite space\uff0c\u4e5f\u5c31\u662f\u7a7a\u683c\u6216\u8005tab\uff0c\u8fd9\u6837\u4f1a\u6253\u65ad\u8bfb\u53d6\u3002\u6700\u7ec8\u5f97\u5230\u7684\u5c31\u662f\uff1a<code>str2 = foo,</code> <code>str3 = bar!</code></p>"},{"location":"notes/lingo/cpp.html#lec2","title":"Lec2","text":"<p>\u8fd9\u8282\u8bfe\u5c55\u793a\u4e86c++\u7684\u62bd\u8c61\u80fd\u529b</p> <ul> <li>C\u8bed\u8a00\u5728\u51fd\u6570\u4f20\u9012\u53c2\u6570\u65f6\u5982\u679c\u5c06\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff0c\u5176\u5b9e\u6570\u7ec4\u662f\u9000\u5316\u4e86\u7684\uff0c\u4f20\u5165\u7684\u5b9e\u9645\u662f\u6307\u9488\uff0c\u6307\u5411\u6570\u7ec4\u9996\u5143\u7d20\uff1a</li> </ul> <pre><code>//\u539f\u5148\u7684\uff1a\nvoid print_array(int arr[], int size) {\n    for (int i = 0; i &lt; size; i++) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n}\n\n//\u5982\u679c\u8fd9\u6837\u5199\nvoid print_array(int arr[]) {\n    int size = sizeof(arr) / sizeof(arr[0]);\n    ...\n}\n\n//\u8fd9\u6837\u5199\u662f\u9519\u7684\uff0c\u56e0\u4e3asizeof(arr)\u8fd4\u56de\u7684\u662f\u6307\u9488\u7684\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u7684\u5927\u5c0f\u3002\n\n//\u56e0\u6b64\u4e0d\u80fd\u8fd9\u6837\u5199\n</code></pre> <ul> <li>swap\u51fd\u6570\u5bf9\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u6ca1\u6709\u4ea4\u6362\u6548\u679c</li> </ul> <p>c++\u7684\u5904\u7406\u65b9\u5f0f\u662f\u4f7f\u7528\u5f15\u7528\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u5728\u51fd\u6570\u53c2\u6570\u4e2d\u4f7f\u7528&amp;\u7b26\u53f7\uff1a</p> <pre><code>void swap(int&amp; a, int&amp; b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n</code></pre> <ul> <li>\u51fd\u6570\u91cd\u8f7d\uff1a</li> </ul> <p>\u5728\u7b2c\u4e00\u4e2a\u51fd\u6570\u4e2d\u6211\u4eec\u53ea\u8003\u8651\u4e86int\u7c7b\u578b\uff0c\u5982\u679c\u60f3\u8981\u652f\u6301\u591a\u79cd\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u91cd\u8f7d\uff1a</p> <pre><code>void print_array(int arr[], int size) {\n    for (int i = 0; i &lt; size; i++) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n}\n\nvoid print_array(double arr[], int size) {\n    for (int i = 0; i &lt; size; i++) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n}\n</code></pre> <p>\u5141\u8bb8\u540c\u540d\u51fd\u6570\u4f46\u662f\u53c2\u6570\u8868\u4e0d\u4e00\u6837\uff0c\u4f1a\u6839\u636e\u8c03\u7528\u60c5\u51b5\u6765\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u51fd\u6570\u3002</p> <p>\u8fd9\u662f\u6211\u4eec\u53d1\u73b0\u5982\u679c\u6bcf\u6b21\u90fd\u5199\u4e00\u4e2a\u4e0d\u540c\u53d8\u91cf\u7c7b\u578b\u7684\u51fd\u6570\u5f88\u9ebb\u70e6\uff0c\u56e0\u6b64c++\u5f15\u5165\u4e86\u6a21\u677f\uff1a</p> <p><pre><code>template &lt;typename T&gt;\nvoid print_array(T arr[], int size) {\n    for (int i = 0; i &lt; size; i++) {    \n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n}\n</code></pre> \u8fd9\u6837\u53ef\u4ee5\u5c06\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012</p> <ul> <li>\u5b9a\u4e49\u7ed3\u6784\u4f53\u4e5f\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\u5417\uff1f</li> </ul> <p>\u4f1a\u53d1\u73b0\u95ee\u9898\u51fa\u5728\u6bd4\u8f83\u4e0a\uff0c\u56e0\u4e3a\u7ed3\u6784\u4f53\u4e2d\u5305\u542b\u591a\u4e2a\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u9700\u8981\u600e\u4e48\u6bd4\u8f83\u3001\u8f93\u51fa\u7b49\u64cd\u4f5c\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u81ea\u5df1\u8fdb\u884c\u5b9a\u4e49\uff1a</p> <pre><code>struct Student {\n    int id;\n    string name;\n\n    bool operator&lt;(const Student&amp; s) {\n        return id &lt; s.id;\n    }\n};\n\nostream&amp; operator&lt;&lt;(ostream&amp; out, const Student&amp; s) {\n    return out &lt;&lt; \"(\" &lt;&lt; s.id &lt;&lt; \",\" &lt;&lt; s.name &lt;&lt; \")\";\n}\n</code></pre>"},{"location":"notes/lingo/cpp.html#lec3","title":"Lec3","text":"<p>STL</p>"},{"location":"notes/lingo/cpp.html#container","title":"Container","text":"<ul> <li> <p>Sequencial:</p> <ul> <li>array(static)</li> <li>vector(dynamic)\u52a8\u6001\u6570\u7ec4</li> <li>deque</li> <li>forward_list(single linked)</li> <li>list(doubly-linked)\u53cc\u5411\u94fe\u8868</li> </ul> </li> <li> <p>Associative</p> <ul> <li>set(keys)</li> <li>map(keys and values)</li> <li>multimap(\u5141\u8bb8\u91cd\u590dkey)</li> <li>multiset(\u5141\u8bb8\u91cd\u590dkey)</li> </ul> </li> <li> <p>Unordered associative</p> <ul> <li>unordered_set,map,multiset,multimap</li> </ul> </li> <li> <p>Adapters</p> <ul> <li>stack</li> <li>queue</li> <li>priority_queue</li> </ul> </li> </ul> <ul> <li>insert\u51fd\u6570\uff1a</li> </ul> <pre><code>vector&lt;int&gt; evens;\n...\nevens.insert(evens.begin()+4, 5, 10);\n</code></pre> <p>\u5c31\u662f\u5728begin+4\u7684\u4f4d\u7f6e\u63d2\u51655\u4e2a10</p> <ul> <li>iterator\u65b9\u5f0f\u904d\u5386</li> </ul> <pre><code>for (vector&lt;int&gt;::iterator it = evens.begin(); it &lt; evens.end(); ++it) \n    cout &lt;&lt; *it &lt;&lt; ' ';\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u4f7f\u7528auto\uff1a</p> <pre><code>for (auto it = evens.begin(); it... )\n...\n</code></pre> <p>\u56e0\u4e3a\u5728\u8fd9\u91cc\u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e\u540e\u9762\u7684\u8d4b\u503c\u5224\u65ad\u51fait\u7684\u7c7b\u578b\uff0c\u4f46\u5982\u679c\u76f4\u63a5\u968f\u4fbf\u5199\u4e00\u4e2a<code>auto it;</code>\u662f\u6ca1\u6709\u610f\u4e49\u7684</p> <p>\u4e5f\u53ef\u4ee5\u8fd9\u6837\u904d\u5386\uff1a</p> <pre><code>for (int x : evens)\n    cout &lt;&lt; x &lt;&lt; ' ';\n</code></pre> <p>\u8fd9\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff0c\u7f16\u8bd1\u5668\u5c06\u4f60\u5199\u7684\u4e1c\u897f\u8f6c\u6362\u6210\u4e86iterator</p> <p>\u5982\u679c\u9700\u8981\u5bf9\u5176\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\uff1a</p> <pre><code>for (int&amp; x : evens)\n    x *= 2;\n</code></pre> <p>\u5c06x\u58f0\u660e\u4e3a\u5f15\u7528\u5373\u53ef</p> <p>\u6ce8\u610f</p> <p>\u5728\u8fdb\u884c\u904d\u5386\u65f6\uff0c\u53ea\u6709vector\u53ef\u4ee5\u7528 &lt; \u7b26\u53f7\u6765\u8fdb\u884c\u7ec8\u6b62\u5224\u65ad\uff0c\u56e0\u4e3avector\u662f\u8fde\u7eed\u5185\u5b58\uff0c\u5176\u4ed6\u5bb9\u5668\u901a\u5e38\u7528<code>it != container.end()</code>\u6765\u5224\u65ad\uff08\u94fe\u8868\u6bd4\u8f83\u5927\u5c0f\u6ca1\u6709\u610f\u4e49\uff09</p> <ul> <li>Map</li> </ul> <pre><code>#include &lt;map&gt;\n#include &lt;string&gt;\n\nmap&lt;string, float&gt; price;\nprice[\"snapple\"] = 0.75;\nprice[\"coke\"] = 0.50;\nstring item;\ndouble total=0;\nwhile (cin &gt;&gt; item)\n    total += price[item];\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u5728\u8fdb\u884c\u8f93\u5165\u7684\u65f6\u5019\u5199\u8fdbtotal\u7684\u5b57\u7b26\u4e0d\u662f\u5df2\u77e5\u7684snapple\u3001coke\uff0c\u90a3\u4e48\u4ed6\u5176\u5b9e\u4f1a\u5e2e\u4f60\u63d2\u5165\u8fd9\u4e2a\u5b57\u7b26\uff0c\u5e76\u5c06\u4ed6\u7684value\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c0.0</p> <pre><code>int main() {\n    map&lt;string, int&gt; word_map;\n    for (const auto&amp; w: {\"we\", \"are\", \"not\", \"humans\", \"we\", \"are\", \"robots\"})\n        ++word_map[w];\n    for (const auto&amp; [word, count]: word_map)\n        cout &lt;&lt; count &lt;&lt; \" occurrences of word '\" &lt;&lt; word &lt;&lt; \"'\\n\";\n}\n</code></pre> <p>\u8fd9\u91cc\u8fd0\u7528\u4e86map\u7684[]\u8fd0\u7b97\u7b26\u548c\u8f93\u51fa\u65f6\u7684\u7ed3\u6784\u5316\u7ed1\u5b9a</p> <ul> <li>Algorithms</li> </ul> <p>\u7b97\u6cd5\u4f5c\u7528\u7684\u5bf9\u8c61\u90fd\u662f\u8fed\u4ee3\u5668\uff0c\u6211\u4eec\u4f20\u5165\u8fed\u4ee3\u5668\u540e\u7b97\u6cd5\u8fdb\u884c\u64cd\u4f5c\uff0c\u540c\u4e00\u79cd\u7b97\u6cd5\u53ef\u4ee5\u4f5c\u7528\u4e8e\u4e0d\u540c\u7684\u5bb9\u5668\uff0c\u56e0\u4e3a\u7b97\u6cd5\u662f\u4e0d\u4f9d\u8d56\u4e8e\u5bb9\u5668\u7684\uff0c\u8fd9\u6837\u5f62\u6210\u4e86\u7b97\u6cd5\u4e0e\u5bb9\u5668\u7684\u89e3\u8026\uff0c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u590d\u7528\u6027\u3002</p> <ul> <li>reverse</li> </ul> <pre><code>vector&lt;int&gt; v = {1, 2, 3, 4};\nreverse(v.begin(), v.end());\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230reverse\u76f4\u63a5\u4f5c\u7528\u5728vector\u672c\u8eab\uff0c\u662f\u76f4\u63a5\u5bf9vector\u8fdb\u884c\u4fee\u6539\u7684</p> <pre><code>vector&lt;int&gt; u;\ncopy(v.begin(), v.end(), u.begin());\n</code></pre> <p>\u8fd9\u6837\u7a0b\u5e8f\u4f1a\u62a5\u9519segmentation fault\uff0c\u56e0\u4e3au\u6ca1\u6709\u521d\u59cb\u5316\u5927\u5c0f\uff0c\u9ed8\u8ba4\u662f\u7a7a\u7684\uff0c\u56e0\u6b64\u4e5f\u4e0d\u4f1a\u6709begin\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981u\u4e2d\u6709\u6570\u636e</p> <p>\u5982\u679c\u60f3\u8981\u80fd\u591f\u505a\u5230\u63d2\u5165\u53ef\u4ee5\u6362\u4e00\u4e2a\u8fed\u4ee3\u5668\uff1a</p> <pre><code>vector&lt;int&gt; u(v.size());\ncopy(v.begin(), v.end(), back_inserter(u));\n</code></pre> <p>\u8fd8\u80fd\u591f\u7528algo\u6765\u5b9e\u73b0\u8f93\u51fa\u6d41\uff1a</p> <pre><code>copy(v.begin(), v.end(), ostream_iterator&lt;int&gt;(cout,\" ,\"));\n</code></pre> <p>\u4f46\u662f\u8fd9\u6837\u6211\u4eec\u8f93\u51fa\u7684\u6700\u540e\u4f1a\u591a\u4e00\u4e2a\u9017\u53f7\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u5934\u6587\u4ef6\u6765\u89e3\u51b3\uff1a</p> <p><pre><code>#include \"infix_iterator.h\"\n</code></pre> \u8fd9\u4e2a\u5934\u6587\u4ef6\u662f\u5728\u9664\u4e86\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ee5\u540e\u7684\u904d\u5386\u4e2d\u90fd\u4fdd\u7559\u64cd\u4f5c</p> <p>\u7136\u540e\u6211\u4eec\u5c31\u76f4\u63a5\u4f7f\u7528\uff1a</p> <pre><code>copy(v.begin(), v.end(), infix_ostream_iterator&lt;int&gt;(cout, \", \"));\n</code></pre> <ul> <li>erase</li> </ul> <pre><code>list&lt;int&gt; L;\nlist&lt;int&gt;::iterator li;\nli = L.begin();\nL.erase(li);\n++li;// WRONG\n</code></pre> <p>\u8fed\u4ee3\u5668\u5728erase\u540e\u4f1a\u5931\u6548\uff0c\u56e0\u6b64\u4e0d\u80fd++li\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c</p> <pre><code>li = L.erase(li);//RIGHT\n</code></pre>"},{"location":"notes/lingo/cpp.html#lec4","title":"Lec4","text":"<p>\u5185\u5b58\u6a21\u578b Memory Model</p> <ul> <li> <p>Global \u53d8\u91cf\u662f\u53ef\u4ee5\u8de8\u6587\u4ef6\u8bbf\u95ee\u7684\uff1a\u4f7f\u7528<code>extern</code>\u5173\u952e\u5b57</p> </li> <li> <p>Static \u7684\u5168\u5c40\u53d8\u91cf\u4e0d\u662f\u5916\u90e8\u53ef\u89c1\u7684\uff0c\u53ea\u80fd\u5728\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\uff08.cpp\uff09\u4e2d\u4f7f\u7528</p> </li> </ul> <p><code>string s;</code> \u548c <code>string *ps;</code>\u7684\u533a\u522b\uff1a</p> <ul> <li>\u524d\u8005\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u540e\u8005\u662f\u5168\u5c40\u6307\u9488</li> <li>\u524d\u8005\u5728data\u6bb5\uff0c\u540e\u8005\u5728bss\u6bb5</li> <li>\u524d\u8005\u5728main\u6267\u884c\u524d\u521d\u59cb\u5316\uff0c\u540e\u8005\u5728main\u4e2d\u521d\u59cb\u5316     \u56e0\u4e3astring\u672c\u8eab\u662f\u4e00\u4e2aclass\uff0c\u4f1a\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u800cps\u6ca1\u6709\u521d\u59cb\u5316\u6bcf\u6b21\u8dd1\u7ed3\u679c\u90fd\u4e0d\u4e00\u6837</li> <li>\u524d\u8005\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u81ea\u52a8\u91ca\u653e\uff0c\u540e\u8005\u9700\u8981\u624b\u52a8\u91ca\u653e</li> </ul> <pre><code>string s1, s2;\ns1 = s2 // \u5c06s2\u7684\u503c\u8d4b\u7ed9s1\n\nstring *ps1, *ps2;\nps1 = ps2 // \u5c06\u5730\u5740\u8d4b\u7ed9ps1\n</code></pre>"},{"location":"notes/lingo/cpp.html#referennce","title":"Referennce","text":"<pre><code>char c;\nchar *p = &amp;c;\nchar &amp;r = c;\n</code></pre> <p>\u5bf9\u4e0a\u9762\u7684\u4e09\u53e5\u8bdd\u8fdb\u884c\u89e3\u91ca\uff1a</p> <ul> <li>\u7b2c\u4e00\u53e5\u8fdb\u884c\u4e00\u4e2a\u58f0\u660e\uff0c\u8868\u793ac\u662f\u4e00\u4e2achar\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5360\u636e1 byte\uff0c\u4f4d\u7f6e\u5728\u67d0\u4e2a\u5730\u5740address</li> <li>\u7b2c\u4e8c\u53e5\u8bdd\u8868\u793ap\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u91cc\u9762\u67098\u4e2abytes\uff0c\u8868\u793a\u4e00\u4e2a\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u6307\u5411\u7684\u662fc\u7684\u5730\u5740address</li> <li>\u4f46\u4e09\u53e5\u8bdd\u8868\u793ar\u662f\u4e00\u4e2a\u5f15\u7528\uff0c\u53ef\u4ee5\u5b8c\u5168\u628ac\u548cr\u770b\u4f5c\u662f\u7b49\u4ef7\u7684\uff0c\u53ea\u662f\u4e00\u4e2a\u522b\u540d\uff0c\u4f4d\u7f6e\u8fd8\u662f\u5728address</li> </ul> <p>\u4f46\u662f\u533a\u522b\u5728\u4e8e\u6307\u9488\u53ef\u4ee5\u91cd\u65b0\u8d4b\u503c\uff0c\u800c\u5f15\u7528\u4e0d\u80fd</p> <p>\u540c\u65f6\u5f15\u7528\u662f\u5fc5\u987b\u8981\u521d\u59cb\u5316\u7684\u4e0d\u80fd\u4e3a\u7a7a\uff1a</p> <pre><code>int f(\n    char &amp;r; // wrong\n)\n</code></pre> <p>\u4f46\u662f\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u8fdb\u884c\u4f20\u9012\uff1a</p> <pre><code>int f(char &amp;r) {\n    ...\n}\n</code></pre> <p>\u8fd9\u6837\u662f\u53ef\u4ee5\u7684</p> <p>\u8fd8\u6709\u4e00\u79cd\u662fclass\uff1a</p> <pre><code>class A {\n    private:\n        T &amp;a;\n    public:\n        A(T &amp;t) : a(t) {}\n};\n</code></pre> <p>\u5f15\u7528\u7684\u610f\u4e49\u5728\u4e8e\uff1a</p> <ul> <li>\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u9012</li> <li>\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c</li> </ul> <p>\u5f15\u7528\u7684\u9650\u5236\uff1a</p> <ul> <li>\u5f15\u7528\u4e0d\u80fd\u5d4c\u5957</li> <li>\u6ca1\u6709\u5f15\u7528\u7c7b\u578b\u7684\u6307\u9488\uff0c\u4f46\u662f\u6709\u6307\u9488\u7684\u5f15\u7528\uff08\u53ef\u4ee5\u662f* &amp;\uff0c\u4e0d\u80fd\u662f &amp; *\uff09</li> <li>\u6570\u7ec4\u4e2d\u4e0d\u80fd\u653e\u5f15\u7528</li> </ul>"},{"location":"notes/lingo/cpp.html#dynamic-memory-allocation","title":"Dynamic Memory Allocation","text":"<p>\u7c7b\u4f3c\u4e8emalloc free DMA\u4f7f\u7528new delete</p> <p>\u4f46\u5bf9\u4e8e\u975e\u539f\u751f\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982class\uff0c\u4f7f\u7528new\u8fdb\u884c\u5b9a\u4e49\u7684\u65f6\u5019\u4e0d\u4ec5\u4f1amalloc\u4e00\u5757\u5185\u5b58\uff0c\u8fd8\u4f1a\u4f7f\u7528\u6784\u9020\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8fd9\u6837\u5c31\u786e\u4fdd\u4e86\u5b9a\u4e49\u65f6\u4e0d\u4ec5\u662f\u4e00\u5757\u5185\u5b58\uff0c\u800c\u662f\u521d\u59cb\u5316\u540e\u7684\u5185\u5b58\uff0c\u540c\u6837delete\u4e5f\u4f1a\u6267\u884c\u6790\u6784\u51fd\u6570\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u91ca\u653e\u5185\u5b58</p> <p>const \u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u5b8f\uff0c\u4f46\u662f\u5177\u5907\u4e86\u7c7b\u578b\u68c0\u67e5</p> <p>\u6ce8\u610fconst\u548c\u6307\u9488\u7684\u7ed3\u5408\uff1a</p> <p>\u4e0b\u9762\u524d\u4e24\u4e2a\u662f\u4e00\u6837\u7684</p> <ul> <li>\u5b57\u7b26\u6307\u9488\u662f\u4e0d\u53ef\u4ee5\u8fdb\u884c\u4fee\u6539\u7684</li> </ul> <pre><code>char *p = \"hello\";\np[0] = 'A'; //wrong error\n</code></pre> <ul> <li>\u8bfb\u53d6\u5730\u5740\u7684\u8fd0\u7b97\uff1a</li> </ul> <pre><code>char *p = \"hello\";\ncout &lt;&lt; (void*)p &lt;&lt; endl;\n</code></pre> <p>\u8bfb\u5230\u5730\u5740\u540e\u53d1\u73b0\uff0c\u539f\u56e0\u662f\u8fd9\u4e2achar *\u7684\u5730\u5740\u4fdd\u7559\u5728\u4ee3\u7801\u6bb5\uff0c\u4e0d\u80fd\u4fee\u6539\uff0c\u5982\u679c\u60f3\u8981\u4fee\u6539\uff0c\u9700\u8981\u4f7f\u7528const char *p = \"hello\";</p>"},{"location":"notes/lingo/cpp.html#lec5","title":"Lec5","text":"<p>Class</p> <p>\u5b9e\u73b0\u4e00\u4e2a\u7c7b\uff0cc\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662fcpp\u63d0\u4f9b\u7684\u662f\u5c06\u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u65b9\u6cd5\u653e\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u66f4\u7b26\u5408\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3</p> <ul> <li>\u4e3a\u4e86\u4fdd\u62a4\u6570\u636e\uff0c\u9700\u8981\u5728\u7c7b\u58f0\u660e\u4e2d\u4f7f\u7528private</li> <li>class\u9ed8\u8ba4\u662fprivate\uff0cstruct\u9ed8\u8ba4\u662fpublic</li> </ul> <p>\u6ce8\u610f\u5934\u6587\u4ef6\u5185\u4e0d\u80fd\u5b58\u653e\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u4e3a\u5934\u6587\u4ef6\u4f1a\u88ab\u5305\u542b\u5230\u591a\u4e2acpp\u6587\u4ef6\u4e2d\uff0c\u5982\u679c\u5934\u6587\u4ef6\u4e2d\u5305\u542b\u5168\u5c40\u53d8\u91cf\uff0c\u90a3\u4e48\u6bcf\u4e2acpp\u6587\u4ef6\u4e2d\u90fd\u4f1a\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u53d8\u91cf\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u51b2\u7a81</p> <p>\u7c7b\u4f3c\u7684\uff0c\u4e5f\u4e0d\u80fd\u5b58\u653e\u51fd\u6570\u539f\u578b\u548c\u7c7b/\u7ed3\u6784\u4f53\u58f0\u660e</p> <p>include\u65f6\uff0c\u7528\u5c16\u62ec\u53f7\u8868\u793a\u6807\u51c6\u5e93\u5934\u6587\u4ef6\uff0c\u7528\u53cc\u5f15\u53f7\u8868\u793a\u81ea\u5b9a\u4e49\u5934\u6587\u4ef6</p>"},{"location":"notes/lingo/cpp.html#lec6","title":"Lec6","text":"<p>Constructor and Destructor</p> <ul> <li>\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u6709\u591a\u4efd\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u53c2\u6570\u8868\u6765\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u6784\u9020\u51fd\u6570</li> </ul> <p>\u5728\u81ea\u5df1\u6ca1\u6709\u5199\u6784\u9020\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570\uff1a</p> <pre><code>class A {\n    ...\n};\n\n-&gt;\u7f16\u8bd1\u5668\u751f\u6210\u540e\uff1a\n\n```cpp\nclass A {\n    ...\n    A() {\n        ...\n    }\n};\n</code></pre> <p>\u4f46\u662f\u4e00\u65e6\u81ea\u5df1\u5199\u4e86\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u751f\u6210\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570</p> <ul> <li> <p>\u6790\u6784\u51fd\u6570\u53ea\u80fd\u6709\u4e00\u4efd\uff0c\u5728\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\u8c03\u7528</p> <ul> <li>\u901a\u5e38\u6790\u6784\u51fd\u6570\u4e0d\u9700\u8981\u6dfb\u52a0\u53c2\u6570\uff0c\u5982\u679c\u9047\u5230\u8d44\u6e90\u7684\u8c03\u7528\uff0c\u5219\u9700\u8981\u5728\u6790\u6784\u51fd\u6570\u4e2d\u663e\u5f0f\u91ca\u653e</li> </ul> </li> <li> <p>inline \u51fd\u6570</p> </li> </ul> <p>\u51fd\u6570\u5728\u8c03\u7528\u65f6\uff0c\u4f1a\u8fdb\u884c\u538b\u6808\uff0c\u5982\u679c\u51fd\u6570\u4f53\u8fc7\u5927\uff0c\u5219\u4f1a\u5bfc\u81f4\u6808\u6ea2\u51fa\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528inline\u51fd\u6570\uff0c\u5c06\u51fd\u6570\u4f53\u76f4\u63a5\u63d2\u5165\u5230\u8c03\u7528\u5904\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8fdb\u884c\u538b\u6808\u64cd\u4f5c\uff08\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff09</p> <p>\u5bf9\u51fd\u6570\u4e3b\u4f53\u8f83\u5c0f\uff0c\u8c03\u7528\u4ee3\u4ef7\u8f83\u5927\u65f6\uff0c\u4f7f\u7528inline</p> <p>\u5bf9\u51fd\u6570\u4e3b\u4f53\u8f83\u5927\uff0c\u8c03\u7528\u4ee3\u4ef7\u8f83\u5c0f\u65f6\uff0c\u4e0d\u4f7f\u7528inline</p> <p>\u4e0emarco\u4e0d\u540c\uff0cmarco\u662f\u7eaf\u7cb9\u7684\u6587\u672c\u66ff\u6362\uff0c\u800cinline\u51fd\u6570\u6d89\u53ca\u5230\u7f16\u8bd1</p>"},{"location":"notes/lingo/cpp.html#lec7","title":"Lec7","text":"<p>Composition and Inheritance</p> <p>\u7ec4\u5408\uff1a</p> <pre><code>SvingsAccount::SvingsAccount(const string&amp; name, const string&amp; address, int cents)\n    : m_saver(name, address), m_balance(cents)\n    {}\n</code></pre> <p>\u8fd9\u65f6\u6211\u4eec\u60f3\u505a\u4e00\u4e2aprint\u51fd\u6570\u6765\u6253\u5370\u4fe1\u606f\uff0c\u4e00\u4e2a\u521d\u5b66\u8005\u7684\u601d\u8def\u5c31\u662f\u627e\u5230m_saver\u548cm_balance\uff0c\u7136\u540e\u76f4\u63a5\u6253\u5370\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u8fdd\u80cc\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528m_saver\u7684print\u51fd\u6570\u548cm_balance\u7684print\u51fd\u6570</p> <p><pre><code>void SavingsAccount::print() const {\n    m_saver.print();\n}\n</code></pre> \u56e0\u4e3a\u5177\u4f53print\u600e\u4e48\u505a\uff0c\u662fm_saver\u7684\u804c\u8d23</p> <p>Inheritance\uff1a</p> <p>\u4e0e\u7ec4\u5408\u7684\u533a\u522b\u5c31\u662f\uff1a\u7ec4\u5408\u662fhas-a\u7684\u5173\u7cfb\uff0c\u7ee7\u627f\u662fis-a\u7684\u5173\u7cfb</p> <p>\u5728\u6d3e\u751f\u7c7b\u4e2d\uff0c\u53ef\u4ee5\u8c03\u7528\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u4e0d\u80fd\u52a8\u57fa\u7c7b\u7684private\u6210\u5458\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2aprivate data\uff0c\u60f3\u5199\u4e00\u4e2asetdata\u5bf9\u5176\u8fdb\u884c\u66f4\u6539\uff0c\u90a3\u4e48\u4f7f\u7528public\u4f1a\u5bfc\u81f4\u975e\u6d3e\u751f\u7c7b\uff08\u522b\u4eba\uff09\u4e5f\u53ef\u4ee5\u66f4\u6539\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u4f7f\u7528protected\uff0c\u8fd9\u6837\u6d3e\u751f\u7c7b\u53ef\u4ee5\u8bbf\u95ee\uff0c\u4f46\u662f\u975e\u6d3e\u751f\u7c7b\u4e0d\u80fd\u8bbf\u95ee</p> <ul> <li> <p>\u987a\u5e8f\u662f\uff1a\u57fa\u7c7b\u5728\u6d3e\u751f\u7c7b\u524d\u9762\uff0c\u5b57\u6bb5\u5728\u4e3b\u4f53\u524d</p> </li> <li> <p>name hiding: \u6d3e\u751f\u7c7b\u4e2d\u4e0d\u80fd\u4f7f\u7528\u57fa\u7c7b\u4e2d\u88ab\u9690\u85cf\u7684\u53d8\u91cf\u540d\uff0c\u4f8b\u5982\u6211\u5728\u57fa\u7c7b\u4e2d\u6709\u4e00\u4e2aprint\u51fd\u6570\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u540c\u6837\u52a0\u4e86print\u51fd\u6570\uff0c\u90a3\u4e48\u6d3e\u751f\u7c7b\u4e2d\u7684print\u51fd\u6570\u4f1a\u9690\u85cf\u57fa\u7c7b\u4e2d\u7684print\u51fd\u6570\uff0c\u9ed8\u8ba4\u4f7f\u7528\u6d3e\u751f\u7c7b\u4e2d\u7684print\u51fd\u6570\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u4f7f\u7528\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26::\u6765\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684print\u51fd\u6570</p> </li> </ul>"},{"location":"notes/lingo/cpp.html#lec8","title":"Lec8","text":"<ul> <li>\u5728\u7c7b\u7684\u5916\u90e8\u8bbf\u95eeprivate\uff1a</li> </ul> <p>\u901a\u8fc7friend\u5173\u952e\u5b57\u6765\u8bbf\u95ee</p> <ul> <li>\u7ee7\u627f\u5173\u952e\u5b57\uff1a</li> </ul> <p>Polymorphism \u591a\u6001</p> <ul> <li>virtual function \u865a\u51fd\u6570</li> </ul> <p>\u5728\u5b9a\u4e49\u57fa\u7c7b\u65f6\uff0c\u5982\u679c\u60f3\u8981\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u57fa\u7c7b\u4e2d\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u9700\u8981\u5728\u57fa\u7c7b\u4e2d\u4f7f\u7528virtual\u5173\u952e\u5b57\uff0c\u8fd9\u6837\u5728\u6d3e\u751f\u7c7b\u4e2d\u4f7f\u7528\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6765\u8c03\u7528\u76f8\u5e94\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u6839\u636e\u6307\u9488\u6216\u5f15\u7528\u7684\u7c7b\u578b\u6765\u8c03\u7528</p> <p>\u5728\u6d3e\u751f\u7c7b\u4e2d\u5199\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0override\u5173\u952e\u5b57\u6765\u663e\u5f0f\u58f0\u660e\uff0c\u8fd9\u6837\u5982\u679c\u57fa\u7c7b\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519</p> <p>\u901a\u8fc7\u4f7f\u7528\u865a\u51fd\u6570\u5b8c\u6210\u591a\u6001\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u6839\u636e\u5185\u90e8\u7684\u5bf9\u8c61\u7c7b\u578b\u51b3\u5b9a\u5176\u4e2d\u5bf9\u8c61\u8c03\u7528\u7684\u51fd\u6570\u7c7b\u578b</p> <p><pre><code>move_and_draw(&amp;a, &amp;b);\n</code></pre> \u8fd9\u65f6\u4f1a\u6839\u636ea\u548cb\u7684\u5b9e\u9645\u7c7b\u578b\u6765\u51b3\u5b9a\u8c03\u7528draw\u51fd\u6570\u7684\u54ea\u4e2a\u7248\u672c</p> <ul> <li> <p>\u6790\u6784\u51fd\u6570\u4e5f\u53ef\u4ee5\u6539\u5199\u6210\u865a\u51fd\u6570\uff0c\u53ea\u8981\u7c7b\u4e2d\u6709\u4efb\u4f55\u4e00\u4e2a\u865a\u51fd\u6570\uff0c\u5c31\u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2a\u865a\u6790\u6784\u51fd\u6570\u3002\u5373\u4f7f\u7c7b\u4e0d\u6253\u7b97\u88ab\u7ee7\u627f\uff0c\u8fd9\u6837\u505a\u4e5f\u65e0\u5927\u788d\uff0c\u5e76\u4e14\u8fd8\u66f4\u5b89\u5168\u3002</p> </li> <li> <p>\u5982\u679c\u6211\u4eec\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8d4b\u503c\u4e3a\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff08\u4f8b\u5982\u5c06\u6d3e\u751f\u7c7b\u8d4b\u503c\u7ed9\u57fa\u7c7b\uff09\uff0c\u90a3\u4e48\u6570\u503c\u90e8\u5206\u4f1a\u76f4\u63a5\u8d4b\u503c\uff08\u4f46\u662f\u4f1a\u6839\u636e\u57fa\u7c7b\u7684\u5927\u5c0f\u8fdb\u884c\u622a\u65ad\uff09\uff0c\u4f46\u662f\u865a\u51fd\u6570\u8868\u53ea\u4f1a\u8d4b\u503c\u57fa\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u8868\uff0c\u4e0d\u4f1a\u8d4b\u503c\u6d3e\u751f\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u8868</p> </li> </ul>"},{"location":"notes/lingo/cpp.html#lec9","title":"Lec9","text":"<p>Copy Constructor</p> <p>\u5bf9\u8c61\u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u8c61\u9500\u6bc1\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u4f46\u662f\u5728\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u62f7\u8d1d\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570</p> <pre><code>A a1;\nA a2 = a1;\n\nvoid f(A a) {\n    ...\n}\n\nf(a1);\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\u5728\u8fd9\u91cc\uff0ca2\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u8fdb\u884c\u521d\u59cb\u5316\uff0cf(a1)\u4e5f\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u521b\u5efa\u7684\u5bf9\u8c61\u4e2a\u6570\u8fdb\u884c\u7edf\u8ba1\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6709\u4e09\u4e2a\u5bf9\u8c61\u88ab\u521b\u5efa\uff0c\u6709\u4e09\u6b21\u6790\u6784\u51fd\u6570\u88ab\u4f7f\u7528</p> <ul> <li>\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u9ed8\u8ba4\u662f\u5b58\u5728\u7684\uff0c\u5982\u679c\u81ea\u5df1\u6ca1\u6709\u5199\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a</li> <li>\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\u540e\u662f\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570\u7684</li> <li>\u7f16\u8bd1\u5668\u81ea\u5df1\u751f\u6210\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5728\u62f7\u8d1d\u7684\u65f6\u5019\u5982\u679c\u5185\u5c42\u6709\u5d4c\u5957\u7684\u7ed3\u6784\u4f53\u6216\u8005\u7c7b\uff0c\u4f1a\u5d4c\u5957\u7684\u8fdb\u884c\u62f7\u8d1d\u6784\u9020</li> <li> <p>\u7f16\u8bd1\u5668\u81ea\u5df1\u751f\u6210\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u6d45\u62f7\u8d1d\uff0c\u5982\u679c\u7c7b\u4e2d\u5305\u542b\u6307\u9488\uff0c\u90a3\u4e48\u62f7\u8d1d\u7684\u662f\u6307\u9488\u7684\u5730\u5740\uff0c\u800c\u4e0d\u662f\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u4e24\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5185\u5bb9\uff0c\u5f53\u4e00\u4e2a\u6307\u9488\u88ab\u6790\u6784\u65f6\uff0c\u53e6\u4e00\u4e2a\u6307\u9488\u4e5f\u4f1a\u88ab\u6790\u6784\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u91cd\u590d\u6790\u6784\uff0c\u56e0\u6b64\u9700\u8981\u81ea\u5df1\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570</p> </li> <li> <p>\u8fd4\u56de\u503c\u4f18\u5316\uff1a</p> </li> </ul> <pre><code>A f() {\n    A a;\n    return a;\n}\n\nA b = f();\n</code></pre> <p>\u5728\u8fd4\u56de\u503c\u4f18\u5316\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u76f4\u63a5\u5c06a\u7684\u503c\u8fd4\u56de\u7ed9b\uff0c\u800c\u4e0d\u662f\u5148\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u518d\u62f7\u8d1d\u7ed9b\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528</p> <p>\u4f46\u662f\u5728\u5185\u5b58\u6269\u5bb9\u65f6\uff08\u4f8b\u5982vector\uff09\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u8fdb\u884c\u8fd4\u56de\u503c\u4f18\u5316\uff0c\u6bcf\u6b21\u6269\u5bb9\u90fd\u662f\u91cd\u65b0\u65b0\u5efa\u4e00\u4e2a\u66f4\u5927\u7684\u5185\u5b58\uff0c\u7136\u540e\u5c06\u539f\u6765\u7684\u5185\u5bb9\u62f7\u8d1d\u8fc7\u53bb\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528</p> <ul> <li>\u5982\u679c\u60f3\u8981\u907f\u514d\u5143\u7d20\u65b0\u5efa\u518d\u62f7\u8d1d\uff0c\u53ef\u4ee5\u4f7f\u7528emplace_back\uff0c\u800c\u4e0d\u662fpush_back\uff0cemplace_back\u53ef\u4ee5\u63a5\u6536\u5230\u5185\u90e8\u5143\u7d20\u6240\u9700\u8981\u7684\u53c2\u6570\u76f4\u63a5\u5728\u5185\u5b58\u4e2d\u6784\u9020\uff0c\u800c\u4e0d\u662f\u65b0\u5efa\u518d\u62f7\u8d1d</li> </ul>"},{"location":"notes/lingo/cpp.html#static","title":"Static","text":"<p>\u8868\u683c\u5206\u4e3a\u4e24\u5217\uff1a * where to use (\u5728\u54ea\u91cc\u4f7f\u7528)\uff1a\u5217\u51fa\u4e86<code>static</code>\u5173\u952e\u5b57\u53ef\u4ee5\u5e94\u7528\u7684\u4e0d\u540c\u7a0b\u5e8f\u5143\u7d20\u3002 * what does it mean (\u5b83\u610f\u5473\u7740\u4ec0\u4e48)\uff1a\u89e3\u91ca\u4e86<code>static</code>\u5173\u952e\u5b57\u5728\u76f8\u5e94\u4e0a\u4e0b\u6587\u4e2d\u5177\u4f53\u7684\u884c\u4e3a\u6216\u542b\u4e49\u3002</p> <p>\u4e0b\u9762\u662f\u5bf9\u8868\u683c\u5185\u5bb9\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a</p> <ol> <li> <p>free functions (\u81ea\u7531\u51fd\u6570)</p> <ul> <li>What it means: Internal linkage (\u5185\u90e8\u94fe\u63a5)</li> <li>Explanation: \u5f53<code>static</code>\u5173\u952e\u5b57\u7528\u4e8e\u81ea\u7531\u51fd\u6570\uff08\u5373\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7c7b\u7684\u51fd\u6570\uff09\u65f6\uff0c\u5b83\u8868\u793a\u8be5\u51fd\u6570\u5177\u6709\u5185\u90e8\u94fe\u63a5\u3002\u8fd9\u610f\u5473\u7740\u8be5\u51fd\u6570\u53ea\u80fd\u5728\u5176\u5b9a\u4e49\u6240\u5728\u7684\u7f16\u8bd1\u5355\u5143\uff08\u901a\u5e38\u662f<code>.cpp</code>\u6587\u4ef6\uff09\u5185\u90e8\u8bbf\u95ee\u3002\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u65e0\u6cd5\u94fe\u63a5\u5230\u5e76\u8c03\u7528\u8fd9\u4e2a<code>static</code>\u81ea\u7531\u51fd\u6570\u3002\u8fd9\u6709\u52a9\u4e8e\u907f\u514d\u547d\u540d\u51b2\u7a81\uff0c\u5e76\u5b9e\u73b0\u66f4\u597d\u7684\u6a21\u5757\u5316\u3002</li> </ul> </li> <li> <p>global variables (\u5168\u5c40\u53d8\u91cf)</p> <ul> <li>What it means: Internal linkage (\u5185\u90e8\u94fe\u63a5)</li> <li>Explanation: \u7c7b\u4f3c\u4e8e<code>static</code>\u81ea\u7531\u51fd\u6570\uff0c\u5f53<code>static</code>\u5173\u952e\u5b57\u7528\u4e8e\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u4e5f\u8868\u793a\u8be5\u53d8\u91cf\u5177\u6709\u5185\u90e8\u94fe\u63a5\u3002\u8fd9\u610f\u5473\u7740\u8be5\u5168\u5c40\u53d8\u91cf\u53ea\u80fd\u5728\u5176\u5b9a\u4e49\u6240\u5728\u7684\u7f16\u8bd1\u5355\u5143\u5185\u90e8\u8bbf\u95ee\uff0c\u800c\u4e0d\u80fd\u88ab\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u8bbf\u95ee\u3002\u8fd9\u540c\u6837\u6709\u52a9\u4e8e\u907f\u514d\u547d\u540d\u51b2\u7a81\uff0c\u5e76\u786e\u4fdd\u53d8\u91cf\u7684\u5c40\u90e8\u6027\u3002</li> </ul> </li> <li> <p>local variables (\u5c40\u90e8\u53d8\u91cf)</p> <ul> <li>What it means: Persistent storage (\u6301\u4e45\u5b58\u50a8)</li> <li>Explanation: \u5f53<code>static</code>\u5173\u952e\u5b57\u7528\u4e8e\u51fd\u6570\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u5b83\u7684\u542b\u4e49\u4e0e\u524d\u4e24\u8005\u5b8c\u5168\u4e0d\u540c\u3002\u8fd9\u88ab\u79f0\u4e3a\u201c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u201d\u3002<ul> <li>\u751f\u547d\u5468\u671f: \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4e0e\u6574\u4e2a\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u76f8\u540c\uff0c\u800c\u4e0d\u662f\u968f\u7740\u51fd\u6570\u7684\u7ed3\u675f\u800c\u9500\u6bc1\u3002\u5b83\u53ea\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u5230\u5176\u58f0\u660e\u8bed\u53e5\u65f6\u521d\u59cb\u5316\u4e00\u6b21\u3002</li> <li>\u4f5c\u7528\u57df: \u5c3d\u7ba1\u751f\u547d\u5468\u671f\u662f\u5168\u5c40\u7684\uff0c\u4f46\u5b83\u7684\u4f5c\u7528\u57df\u4ecd\u7136\u662f\u5c40\u90e8\u7684\uff0c\u5373\u5b83\u53ea\u80fd\u5728\u5176\u5b9a\u4e49\u7684\u51fd\u6570\u5185\u90e8\u8bbf\u95ee\u3002</li> <li>\u7528\u9014: \u5e38\u7528\u4e8e\u9700\u8981\u4fdd\u6301\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u72b6\u6001\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u6bcf\u6b21\u51fd\u6570\u88ab\u8c03\u7528\u65f6\u9012\u589e\uff0c\u4f46\u5176\u503c\u5728\u51fd\u6570\u8fd4\u56de\u540e\u4ecd\u7136\u4fdd\u7559\u3002</li> </ul> </li> </ul> </li> <li> <p>member variables (\u6210\u5458\u53d8\u91cf)</p> <ul> <li>What it means: Shared by all instances (\u6240\u6709\u5b9e\u4f8b\u5171\u4eab)</li> <li>Explanation: \u5f53<code>static</code>\u5173\u952e\u5b57\u7528\u4e8e\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u5b83\u8868\u793a\u8be5\u6210\u5458\u53d8\u91cf\u662f\u201c\u9759\u6001\u6210\u5458\u53d8\u91cf\u201d\u6216\u201c\u7c7b\u53d8\u91cf\u201d\u3002<ul> <li>\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u5b9e\u4f8b: \u9759\u6001\u6210\u5458\u53d8\u91cf\u4e0d\u5c5e\u4e8e\u7c7b\u7684\u4efb\u4f55\u7279\u5b9a\u5bf9\u8c61\uff08\u5b9e\u4f8b\uff09\uff0c\u800c\u662f\u5c5e\u4e8e\u7c7b\u672c\u8eab\u3002</li> <li>\u5171\u4eab: \u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u526f\u672c\u3002\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u5230\u6240\u6709\u5176\u4ed6\u5bf9\u8c61\u3002</li> <li>\u521d\u59cb\u5316: \u9759\u6001\u6210\u5458\u53d8\u91cf\u901a\u5e38\u9700\u8981\u5728\u7c7b\u5b9a\u4e49\u4e4b\u5916\u8fdb\u884c\u521d\u59cb\u5316\u3002</li> <li>\u7528\u9014: \u5e38\u7528\u4e8e\u5b58\u50a8\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u7684\u6570\u636e\uff0c\u4f8b\u5982\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8bb0\u5f55\u521b\u5efa\u4e86\u591a\u5c11\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002 \u5728\u5bf9static\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u7c7b\u540d\u6765\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u540d</li> </ul> </li> </ul> </li> </ol> <pre><code>class A {\n    static int data;\n};\n\nint A::data = 10;\n</code></pre> <p>\u540c\u65f6\u8fd9\u5757data\u7684\u6570\u636e\u5e76\u4e0d\u5b58\u653e\u5728\u5bf9\u8c61\u4e2d\uff0c\u800c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5168\u5c40\u53d8\u91cf</p> <ol> <li>member functions (\u6210\u5458\u51fd\u6570)<ul> <li>What it means: Access static members only (\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458)</li> <li>Explanation: \u5f53<code>static</code>\u5173\u952e\u5b57\u7528\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\u65f6\uff0c\u5b83\u8868\u793a\u8be5\u6210\u5458\u51fd\u6570\u662f\u201c\u9759\u6001\u6210\u5458\u51fd\u6570\u201d\u3002<ul> <li>\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u5b9e\u4f8b: \u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u4e0e\u7c7b\u7684\u4efb\u4f55\u7279\u5b9a\u5bf9\u8c61\u5173\u8054\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528\uff0c\u65e0\u9700\u521b\u5efa\u5bf9\u8c61\u3002</li> <li>\u65e0<code>this</code>\u6307\u9488: \u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709<code>this</code>\u6307\u9488\uff0c\u56e0\u6b64\u5b83\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u975e\u9759\u6001\uff08\u5b9e\u4f8b\uff09\u6210\u5458\u53d8\u91cf\u6216\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6210\u5458\u9700\u8981\u4e00\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u6765\u8bbf\u95ee\u3002</li> <li>\u8bbf\u95ee\u8303\u56f4: \u5b83\u4eec\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\u3002</li> <li>\u7528\u9014: \u5e38\u7528\u4e8e\u6267\u884c\u4e0e\u7c7b\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u4f46\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u7279\u5b9a\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u4f8b\u5982\u5de5\u5382\u65b9\u6cd5\u6216\u8f85\u52a9\u51fd\u6570\u3002</li> </ul> </li> </ul> </li> </ol> <p>\u603b\u800c\u8a00\u4e4b\uff0c<code>static</code>\u5173\u952e\u5b57\u5728C++\u4e2d\u662f\u4e00\u4e2a\u591a\u529f\u80fd\u7684\u5173\u952e\u5b57\uff0c\u5176\u786e\u5207\u7684\u542b\u4e49\u53d6\u51b3\u4e8e\u5b83\u6240\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\uff08\u81ea\u7531\u51fd\u6570\u3001\u5168\u5c40\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u6210\u5458\u53d8\u91cf\u6216\u6210\u5458\u51fd\u6570\uff09\u3002\u7406\u89e3\u8fd9\u4e9b\u4e0d\u540c\u4e0a\u4e0b\u6587\u4e2d\u7684\u542b\u4e49\u5bf9\u4e8e\u7f16\u5199\u5065\u58ee\u548c\u9ad8\u6548\u7684C++\u4ee3\u7801\u81f3\u5173\u91cd\u8981\u3002</p> <p>\u7531\u4e8e\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u4f1a\u6709\u4e00\u4e2a\u9690\u5f0f\u53c2\u6570\u4f20\u8fdb\u81ea\u5df1\uff0c\u800c\u9759\u6001\u6210\u5458\u51fd\u6570\u5728\u8c03\u7528\u65f6\u53ef\u4ee5\uff1a</p> <pre><code>class A {\n    static void f() {\n        ...\n    }\n};\n\nA::f();\n</code></pre> <p>\u8fd9\u663e\u7136\u662f\u4e0e\u5bf9\u8c61\u65e0\u5173\u7684\uff0c\u6240\u4ee5\u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709this\u6307\u9488</p> <p>\u5e76\u4e14\uff0c\u5728\u9759\u6001\u6210\u5458\u51fd\u6570\u5185\u90e8\u65e0\u6cd5\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u56e0\u4e3a\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u9700\u8981\u4e00\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u6765\u8bbf\u95ee\uff1a</p> <pre><code>class A {\n    int data;\n    static void f() {\n        cout &lt;&lt; data &lt;&lt; endl; //error\n    }\n};\n</code></pre>"},{"location":"notes/lingo/cpp.html#lec10","title":"Lec10","text":"<p>Operator Overloading</p> <p>\u53ef\u4ee5\u8fdb\u884c\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\uff1a</p> <ul> <li> <p>\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u9650\u5236\uff1a</p> <ul> <li>\u4e0d\u80fd\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\uff1a<ul> <li>::</li> <li>.</li> <li>?:</li> <li>sizeof</li> <li>typeid</li> <li>const_cast</li> <li>dynamic_cast</li> <li>reinterpret_cast</li> <li>static_cast</li> </ul> </li> </ul> </li> <li> <p>\u4e0d\u80fd\u5b9a\u4e49\u5168\u65b0\u7684\u8fd0\u7b97\u7b26</p> </li> <li>\u53c2\u6570\u4e2a\u6570\u4e00\u81f4</li> <li>\u4f18\u5148\u7ea7\u4e0d\u53d8</li> </ul> <p>Example</p> <pre><code>class Integer {\n    public:\n        Integer(int n = 0) : i(n) {}\n        Integer operator+(const Integer&amp; other) const {\n            return Integer(i + other.i);\n        }\n    private:\n        int i;\n};\n\nInteger a(1), b(2);\nInteger c = a + b; // c = a.operator+(b)\n</code></pre> <ul> <li> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u9690\u5f0fthis\u6307\u9488\uff0c\u4e0d\u80fd\u5199<code>c = 3 + a</code></p> <p>\u5f53\u7136\u4e5f\u53ef\u4ee5\u8f6c\u6362\u6210\u53cc\u76ee\u8fd0\u7b97\u7b26</p> </li> </ul> <p>\u4e3b\u8981\u7684\u7c7b\u578b\uff08\u6839\u636e\u8fd4\u56de\u503c\u548c\u53c2\u6570\u4e2a\u6570\uff09\uff1a</p> <ul> <li>\u5355\u76ee\u8fd0\u7b97\u7b26\uff1a</li> </ul> <p>\u524d\u7f00\u8fd0\u7b97\u7b26\uff1a<code>Integer operator++()</code></p> <p>\u540e\u7f00\u8fd0\u7b97\u7b26\uff1a<code>Integer operator++(int)</code></p> <p>\u5b9e\u73b0\uff1a</p> <pre><code>//prefix:\nInteger&amp; Integer::operator++() {\n    this-&gt;i += 1;\n    return *this;\n}\n\n//postfix:\nInteger Integer::operator++(int) {\n    Integer old(*this);\n    ++(*this); // \u91cd\u7528\u524d\u7f00\u8868\u8fbe\u5f0f\n    return old;\n}\n</code></pre>"},{"location":"notes/lingo/cpp.html#lec11","title":"Lec11","text":"<p>operator \u4e5f\u4f1a\u6709\u81ea\u52a8\u751f\u6210\uff0c\u5982\u679c\u5185\u5c42\u7684class\u5b9a\u4e49\u4e86\u4e00\u4e2aoperator\uff0c\u5916\u5c42\u7684class\u4f7f\u7528\u5185\u5c42\u7c7b\u8fdb\u884coperator\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2aoperator\u91cd\u5199</p> <ul> <li>= \u53ef\u4ee5\u8fde\u7528</li> </ul> <pre><code>A = B = C;\n// \u7b49\u4ef7\u4e8e A = (B = C)\n</code></pre> <ul> <li>self assignment</li> </ul> <p>\u5728\u8fdb\u884c\u8d4b\u503c\u7684\u65f6\u5019\uff0c\u5982\u679c\u5bf9\u8c61\u7684\u5730\u5740\u76f8\u540c\uff0c\u90a3\u4e48\u4f1a\u8fdb\u884cself assignment\uff0c\u56e0\u4e3a\u4e3a\u4e86\u907f\u514d\u5185\u5b58\u6cc4\u9732\u6211\u4eec\u4f1a\u628a\u539f\u5730\u5740\u5148\u8fdb\u884c\u5220\u9664\uff0c\u7136\u540e\u518d\u8fdb\u884c\u8d4b\u503c\uff0c\u5982\u679c\u53d1\u751f\u4e86self assignment\uff0c\u539f\u5730\u5740\u5c31\u4f1a\u76f4\u63a5\u4e0d\u5b58\u5728\uff0c\u8fd9\u65f6\u5019\u5185\u90e8\u903b\u8f91\u6bd4\u8f83\u539f\u503c\u548c\u65b0\u503c\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u9519\uff0c\u6240\u4ee5\u8981\u5148\u68c0\u67e5\u4e00\u4e0b\u662f\u5426\u662fself assignment</p> <ul> <li>functor</li> </ul> <p>\u5bf9\uff08\uff09\u8fdb\u884c\u91cd\u8f7d\uff0c\u770b\u8d77\u6765\u662f\u5728\u8c03\u7528\u51fd\u6570\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u662f\u5728\u8c03\u7528operator()\uff0c\u8c03\u7528\u5bf9\u8c61</p> <ul> <li>lambda function</li> </ul> <p>\u53ef\u4ee5\u76f4\u63a5\u5c06\u51fd\u6570\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u4f8b\u5982\uff1a</p> <pre><code>#include &lt;functional&gt;\n\nvoid f(function&lt;int(int, int)&gt; func) {\n    ...\n}\nint c = 10;\nf([c](int a, int b) {\n    return a + b + c;\n});\n</code></pre> <p>\u8fd9\u4e2a\u7b49\u4ef7\u4e8e\uff1a</p> <pre><code>class Lambda {\n    private:\n    int c;\n    public:\n    Lambda(int c) : c(c) {}\n    int operator()(int a, int b) {\n        return a + b + c;\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u7684\u4e2d\u62ec\u53f7\u662flambda\u8868\u8fbe\u5f0f\u7684\u6355\u83b7\u5217\u8868\uff0c\u6355\u83b7\u5217\u8868\u4e2d\u7684\u53d8\u91cf\u4f1a\u5728lambda\u8868\u8fbe\u5f0f\u4e2d\u88ab\u6355\u83b7\uff0c\u5c31\u50cf\u4e0a\u8ff0\u51fd\u6570\u8c03\u7528\u4e00\u6837\uff0c\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0clambda\u51fd\u6570\u4f5c\u4e3a\u4e00\u4e2amain\u51fd\u6570\u4e2d\u7684\u5bf9\u8c61\uff0c\u6355\u83b7\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4f1a\u4f5c\u4e3a\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5728lambda\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528</p>"},{"location":"notes/lingo/cpp.html#lec12","title":"Lec12","text":"<p>User defined type to be transfomed: Conversion</p> <ul> <li>Single argument constructor</li> </ul> <p>\u5982\u679c\u5728\u7c7b\u5b9a\u4e49\u4e2d\u52a0\u5165\u4e86explicit\u5173\u952e\u5b57\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u5c31\u53ea\u80fd\u88ab\u663e\u5f0f\u8c03\u7528\uff0c\u4e0d\u80fd\u88ab\u9690\u5f0f\u8c03\u7528</p> <ul> <li>Conversion operator</li> </ul> <ul> <li>\u8fd9\u91cc\u7684double\u662f\u5173\u952e\u5b57\uff08\u8981\u4e48\u662f\u5185\u7f6e\u7c7b\u578b\uff0c\u8981\u4e48\u662f\u7528\u6237\u5b9a\u4e49\u7c7b\u578b\uff09\uff0c\u8868\u793a\u8f6c\u6362\u7684\u76ee\u6807\u7c7b\u578b</li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u9009\u7528\u8f6c\u6362\u7684\u65b9\u5f0f\uff1a</p> <p>\u4f46\u662f\u8fd9\u91cc\u6ce8\u610f\u5982\u679c\u6709\u76f8\u540c\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u4f1a\u51fa\u73b0ambiguous\u7684\u60c5\u51b5</p> <ul> <li>stream operator</li> </ul> <ul> <li>\u8fd9\u91cc\u5bf9ostream\u8fdb\u884c\u91cd\u8f7d\uff0c\u6240\u6709\u7684\u5176\u4ed6stream\u90fd\u4f1a\u81ea\u52a8\u91cd\u8f7d\uff0c\u56e0\u4e3aostream\u662f\u6240\u6709stream\u7684\u57fa\u7c7b</li> </ul>"},{"location":"notes/lingo/cpp.html#lec13","title":"Lec13","text":"<p>Template</p> <ul> <li>function overloading</li> </ul> <p>\u540c\u540d\u51fd\u6570\u6839\u636e\u53c2\u6570\u8868\u8fdb\u884c\u4f7f\u7528\uff0c\u7f16\u8bd1\u5668\u6839\u636e\u53c2\u6570\u8868\u8fdb\u884c\u5339\u914d\u65f6\uff0c\u4e5f\u4f1a\u5bf9\u67d0\u4e9b\u7c7b\u578b\u505a\u9690\u5f0f\u8f6c\u6362\uff1a</p> <p>\u6bd4\u5982char\u548cint\uff0cfloat\u548cdouble\uff0c\u4f46\u662f\u5982\u679c\u53ef\u4ee5\u8f6c\u6210\u591a\u4e2a\u7c7b\u578b\u7684\u53d8\u91cf\u5982long\uff0c\u5c31\u4f1a\u4ea7\u751f\u6b67\u4e49\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519</p> <ul> <li>default argument</li> </ul> <p>cpp\u7684\u53c2\u6570\u8868\u7684\u9ed8\u8ba4\u503c\u6709\u7ed9\u5b9a\u7684\u987a\u5e8f\uff0c\u4ece\u53f3\u5230\u5de6\uff0c\u4e0d\u80fd\u8df3\u7740\u7ed9\u3002\u9ed8\u8ba4\u503c\u5728\u51fd\u6570\u58f0\u660e\u4e2d\u7ed9\u5b9a\uff0c\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u4e0d\u80fd\u91cd\u590d\u7ed9\u5b9a</p> <p>\u6a21\u7248\u5728\u505a\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4e0d\u80fd\u505a\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u662f\u53ef\u4ee5\u663e\u5f0f\u8f6c\u6362</p> <pre><code>template &lt;class T&gt;\nvoid print(T a, T b) {\n    cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b &lt;&lt; endl;\n}\n\nprint&lt;int&gt;(1, 2.1);\n</code></pre> <p>\u8fd9\u6837\u4f1a\u6709\u4e00\u4e2awarning\uff0c\u56e0\u4e3a2.1\u88ab\u9690\u5f0f\u8f6c\u6362\u6210\u4e86int\uff082\uff09\uff0c\u867d\u7136\u4f1a\u4e22\u6389\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f46\u662f\u4e0d\u4f1a\u62a5\u9519</p> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5<code>print&lt;double&gt;(1.1, 1)</code>\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u4e22\u4e1c\u897f\u4e86</p> <p>\u5982\u679c\u6709\u666e\u901a\u51fd\u6570\u7248\u672c\uff0c\u4e5f\u6709\u6a21\u7248\u7248\u672c\uff0c\u90a3\u4e48\u4f1a\u4f18\u5148\u4f7f\u7528\u666e\u901a\u51fd\u6570\u7248\u672c\uff0c\u5982\u679c\u6ca1\u6709\u4e25\u683c\u5339\u914d\u7684\u666e\u901a\u7248\uff0c\u624d\u4f1a\u8c03\u7528\u6a21\u7248\u3002\u5b9e\u5728\u4e0d\u884c\uff0c\u4f1a\u8fdb\u884c\u9690\u5f0f\u8f6c\u6362</p> <ul> <li>class template</li> </ul> <p>\u6a21\u7248\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u540c\u65f6\u4e5f\u4e0d\u4e00\u5b9a\u662f\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u662f\u56fa\u5b9a\u7c7b\u578b\uff1a</p> <pre><code>template&lt;class T, int N&gt;\nclass Array {\n    private:\n        T m_arr[N];\n    public:\n        int size() const {return N;}\n        T&amp; operator[](int i) {return m_arr[i];}\n}\n\nint main() {\n    Array&lt;int, 10&gt; a;\n    a[0] = 1;\n    Array&lt;int, 4&gt; b;\n    Array&lt;int, 4&gt; c;\n\n    a = b; // \u8fd9\u91cc\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3aArray&lt;int, 10&gt;\u548cArray&lt;int, 4&gt;\u662f\u4e0d\u540c\u7684\u7c7b\u578b\n    b = c; // \u8fd9\u91cc\u4e0d\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u662f\u76f8\u540c\u7c7b\u578b\n}\n</code></pre> <ul> <li>member template</li> </ul> <p>\u518d\u5199\u4e00\u4e2atypename U\uff0c\u7528\u6765\u4f7f\u7528\u522b\u7684\u53c2\u6570</p>"},{"location":"notes/lingo/cpp.html#lec14","title":"Lec14","text":"<p>iterator</p> <p>\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u667a\u80fd\u6307\u9488</p> <p>\u63d0\u4f9b\u4e00\u79cd\u987a\u5e8f\u7684\u6570\u636e\u8bbf\u95ee\u65b9\u5f0f\uff0c\u4e0d\u4f1a\u66b4\u9732\u5e95\u5c42\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u8bbe\u8ba1\u7b97\u6cd5\u65f6\uff0c\u53ea\u9700\u8981\u501f\u52a9\u8fd9\u79cd\u63a5\u53e3\uff0c\u800c\u4e0d\u5173\u5fc3\u5e95\u5c42\u7684\u6570\u636e\u7ed3\u6784</p> <p>Example</p> <pre><code>template&lt;class InputIterator, class T&gt;\nInputIterator find(InputIterator first, InputIterator last, const T&amp; value) {\n    while (first != last &amp;&amp; *first != value) ++first;\n    return first;\n}\n</code></pre> <p>\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u53ea\u8981\u4fdd\u8bc1\u63d0\u4f9b\u7684\u8fed\u4ee3\u5668\u662f\u6709\u5176\u4e2d\u7684\u64cd\u4f5c\u7684\uff1a</p> <pre><code>vector&lt;int&gt; vecTemp;\nif (find(vecTemp.begin(), vecTemp.end(), 3) == vecTemp.end()) {\n    cout &lt;&lt; 3 not found in vecTemp &lt;&lt; endl;\n}\n</code></pre> <ul> <li> <p>\u6ce8\u610f\u4e0d\u540c\u7684\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u5728\u4f7f\u7528\u540c\u4e00\u79cd\u7b97\u6cd5\uff08\u4f8b\u5982\u904d\u5386\uff09\u65f6\uff0c\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u8868\u73b0\uff0c\u6bd4\u5982\u4e8c\u53c9\u641c\u7d22\u6811\u65e0\u8bba\u7ed9\u5b9a\u7684\u6570\u636e\u662f\u4ec0\u4e48\u987a\u5e8f\uff0c\u90fd\u662f\u91c7\u7528\u4e2d\u5e8f\u904d\u5386\uff0c\u800c\u5bf9\u4e8e\u94fe\u8868\u5219\u662f\u6309\u7167\u521b\u5efa\u987a\u5e8f</p> </li> <li> <p>Template Specialization</p> </li> </ul> <p>\u6a21\u7248\u7684\u7279\u5316\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u5e38\u7684\u6a21\u7248\uff08\u4e3b\u6a21\u7248\uff09\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u7c7b\u7684\u5b9a\u4e49\u4f7f\u7528\u6a21\u7248\u4e2d\u7684\u53c2\u6570</p> <pre><code>template&lt;class T1, class T2, int N&gt;\nclass A{...}\n</code></pre> <p>\u5f53\u6211\u4eec\u6307\u5b9aT1\u548cT2\u4e3a\u67d0\u4e2a\u7c7b\u578b\uff0cN\u4e3a\u67d0\u4e2a\u503c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u8fd9\u4e2a\u7c7b\uff0c\u8fd9\u6837\u5c31\u5f62\u6210\u4e86\u7279\u5316</p> <pre><code>template&lt;class T1, class T2, int N&gt;\nclass A&lt;T1, T2, 10&gt; { //\u5168\u90e8\u53c2\u6570\u90fd\u7ed9\u5b9a\u7684\u5168\u7279\u5316\n    ...//\u65b0\u7684\u5b9e\u73b0\n}\nclass A&lt;int, T2, 10&gt; { //\u90e8\u5206\u53c2\u6570\u7ed9\u5b9a\u7684\u90e8\u5206\u7279\u5316\n    ...//\u65b0\u7684\u5b9e\u73b0\n}\n</code></pre> <ul> <li> <p>iterator category</p> <ul> <li>input</li> <li>output</li> <li>forward</li> <li>bidirectional</li> <li>random access</li> </ul> </li> </ul> <p>\u4ece\u80fd\u529b\u4e0a\u8bf4\uff0cinput+output -&gt; forward -&gt; bidirectional -&gt; random access</p> <p>\u6bcf\u4e00\u5c42\u90fd\u6709\u4e0a\u4e00\u5c42\u4e0d\u5177\u5907\u7684\u80fd\u529b\uff0c\u6700\u5f3a\u7684\u5c31\u662frandom access</p>"},{"location":"notes/lingo/cpp.html#lec15","title":"Lec15","text":"<p>Exception</p> <p>...\u662fcpp\u4e2d\u5f02\u5e38\u7684\u901a\u914d\u7b26</p> <ul> <li>throw</li> </ul> <p>throw\u8bed\u53e5\u5c06\u5f02\u5e38\u5411\u4e0a\u629b\u51fa\uff0c\u76f4\u5230\u88abcatch\u8bed\u53e5\u6355\u83b7\uff0c\u53ef\u4ee5\u5199\u4e0d\u5e26\u4e1c\u897f\u7684throw\u8bed\u53e5\uff0c\u8868\u793a\u629b\u51fa\u5f02\u5e38\uff0c\u53ea\u80fd\u5728catch\u8bed\u53e5\u4e2d\u4f7f\u7528</p> <ul> <li>Exception in cons &amp; des</li> </ul> <p>\u5728\u8fdb\u884c\u6784\u9020\u51fd\u6570\u7684\u8fc7\u7a0b\u4e2d\u5982\u679c\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u6b64\u65f6\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u56e0\u4e3a\u5bf9\u8c61\u8fd8\u6ca1\u6709\u88ab\u5b8c\u5168\u6784\u9020\u51fa\u6765\uff0c\u6240\u4ee5\u9700\u8981\u624b\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u6216\u8005\u5c06\u65b0\u5efa\u8d44\u6e90\u653e\u5728init\u51fd\u6570\u4e2d\uff0c\u4f46\u8fd9\u6837\u8fdd\u80cc\u4e86\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u521d\u8877</p>"},{"location":"notes/lingo/cpp.html#lec16","title":"Lec16","text":"<p>Smart Pointer</p> <p>\u4e09\u79cd\u667a\u80fd\u6307\u9488\uff0c\u90fd\u662f\u7528\u6765\u7ba1\u7406\u88f8\u6307\u9488\u7684</p> <ul> <li>unique_ptr</li> </ul> <pre><code>class A {\n    ...\n}\n\nunique_ptr&lt;A&gt; p1(new A()); //\u8fd9\u91cc\u5c31\u662f\u7528\u4e00\u4e2a\u88f8\u6307\u9488(new A())\u5bf9p1\u8fdb\u884c\u521d\u59cb\u5316\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u7528make_unique\u6765\u521b\u5efa\u667a\u80fd\u6307\u9488</p> <p><pre><code>auto p1 = make_unique&lt;A&gt;();\n</code></pre> unique\u7684\u610f\u601d\u5c31\u662f\u7ba1\u7406\u6743\u552f\u4e00\uff0c\u6240\u4ee5\u4e0d\u80fd\u62f7\u8d1d\u6784\u9020\u548c\u8d4b\u503c\uff0c\u4f46\u662f\u53ef\u4ee5\u79fb\u52a8\u6784\u9020</p> <pre><code>auto p2 = move(p1);\n//move\u5c31\u662f\u53f3\u503c\u5f15\u7528\uff0c\u4e5f\u5c31\u662f\uff1a\np2 = (unique_ptr&lt;A&gt; &amp;&amp;)p1;\n</code></pre> <ul> <li>shared_ptr</li> </ul> <p>shared\u7684\u610f\u601d\u5c31\u662f\u591a\u4e2a\u4eba\u7ba1\u7406\u540c\u4e00\u4e2a\u88f8\u6307\u9488\uff0c\u53ea\u6709\u6240\u6709\u7ba1\u7406\u6743\u90fd\u91ca\u653e\u4e86\uff0c\u88f8\u6307\u9488\u624d\u4f1a\u88ab\u91ca\u653e\uff0c\u53ef\u4ee5\u7528.use_count\u6765\u67e5\u770b\u6709\u591a\u5c11\u4e2a\u7ba1\u7406\u6743</p> <ul> <li>weak_ptr</li> </ul> <p>weak_ptr\u662f\u7528\u6765\u89e3\u51b3shared_ptr\u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff0c\u56e0\u4e3ashared_ptr\u7684\u8ba1\u6570\u5668\u662f\u57fa\u4e8e\u5f15\u7528\u8ba1\u6570\u7684\uff0c\u6240\u4ee5\u5f53\u4e24\u4e2ashared_ptr\u4e92\u76f8\u5f15\u7528\u65f6\uff0c\u4f1a\u5bfc\u81f4\u8ba1\u6570\u5668\u65e0\u6cd5\u91ca\u653e\uff0c\u4ece\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f</p> <ul> <li>Name Cast</li> </ul> <p>constant_cast: \u5e38\u91cf\u7c7b\u578b\u8f6c\u6362\uff0c\u7528\u4e8e\u6dfb\u52a0\u6216\u8005\u79fb\u9664const\u6216\u8005volatile</p> <p>reinterpret_cast: \u91cd\u65b0\u89e3\u91ca\u7c7b\u578b\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5360\u7528\u56db\u4e2a\u5b57\u8282\uff0c\u8f6c\u6362\u6210double\u540e\u5c31\u53d8\u6210\u4e868\u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u4e0d\u4f1a\u8fdb\u884c\u4efb\u4f55\u7684\u8f6c\u6362\uff0c\u53ea\u662f\u91cd\u65b0\u89e3\u91ca\uff0c\u4e5f\u5c31\u662f\u5360\u7528\u516b\u5b57\u8282\uff0c\u4f46\u6570\u636e\u8fd8\u662f\u5728\u524d\u56db\u4e2a\u5b57\u8282\u4e2d</p> <p>static_cast: \u9759\u6001\u7c7b\u578b\u8f6c\u6362\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u4f8b\u5982int\u5230double\uff0c\u4f46\u662f\u4e0d\u80fd\u8fdb\u884c\u4e00\u4e9b\u590d\u6742\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u4f8b\u5982int\u5230char*</p> <p>dynamic_cast: \u52a8\u6001\u7c7b\u578b\u8f6c\u6362\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u590d\u6742\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u4f8b\u5982int\u5230char*\uff0c\u4f46\u662f\u4e0d\u80fd\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u4f8b\u5982int\u5230double</p> <pre><code>int a = 7;\ndouble* p;\n\np = (double*)&amp;a; //ok but a is not a double\np = static_cast&lt;double*&gt;(&amp;a); //error\np = reinterpret_cast&lt;double*&gt;(&amp;a); //ok\n</code></pre>"},{"location":"notes/lingo/cs61a.html","title":"UCB CS61 A","text":""},{"location":"notes/lingo/cs61a.html#lecture-1","title":"Lecture 1","text":"<ul> <li>what is computer science?</li> </ul> <p>what problem to solve using computation</p> <p>how to </p> <p>what techniques to effectively solve </p> <p>managing complexity</p> <ul> <li>mastering abstraction</li> <li>programming paradigms</li> </ul> <ul> <li>Types of expressions</li> </ul> <pre><code>#function call notation\n&gt;&gt;&gt;2015\n2015\n&gt;&gt;&gt;2000+15 #expression\n2015 #value\n</code></pre> <ul> <li>primitive expressions</li> </ul> <p>number numeral name string</p> <ul> <li>call expression</li> </ul> <p><code>operator</code> <code>(operands)</code></p> <p><code>fun</code> <code>argument</code></p> <p>nested expression --&gt;tree</p> <p>\u200b     </p>"},{"location":"notes/lingo/cs61a.html#lecture-2-function","title":"Lecture 2 Function","text":"<ul> <li>Assignment statement</li> </ul> <p>bind names to values</p> <p><code>name</code> = <code>value</code></p> <p>use function :<code>from xxx import xx</code></p> <p>build your own :<code>def name(arguments):</code></p> <p>\u200b                   <code>return xx</code></p> <ul> <li>Environment Diagrams</li> </ul> <p>visualize the interpreter`s process</p> <ul> <li>Design Functions</li> </ul> <p>bind names to expressions</p> <p><code>def &lt;name&gt;(&lt;fomal parameter&gt;):</code> signature <code>return &lt; return expression &gt;</code> body</p> <p>Python uses a frame to define the body of a func\u2202</p> <p>which require the same indent for one suite of statement</p> <p>guide:</p> <p>give it an exact job</p> <p>don't repeat yourself </p> <p>define generally</p>"},{"location":"notes/lingo/cs61a.html#lecture-3-control-and-iteration","title":"Lecture 3 Control and Iteration","text":""},{"location":"notes/lingo/cs61a.html#print-and-none","title":"print and none","text":"<p>none represents nothing in python</p> <p>func the doesnt explicitly return a value return none</p> <p>like --&gt; print</p>"},{"location":"notes/lingo/cs61a.html#pure-func","title":"pure func","text":"<p>just return value</p>"},{"location":"notes/lingo/cs61a.html#non-pure-func","title":"non-pure func","text":"<p>have side effects</p>"},{"location":"notes/lingo/cs61a.html#features-in-python","title":"features in python","text":"<p>// floordiv  <code>2013 // 10 = 201</code></p> <p>multiple assignments  <code>a=b=c=1</code></p> <p>multiple return </p> <p><code>a,b = func(x,y)</code></p>"},{"location":"notes/lingo/cs61a.html#condition-statements","title":"Condition Statements","text":"<p>*if *:</p> <p>one if </p> <p>oneormore elif</p> <p>zeroorone else</p>"},{"location":"notes/lingo/cs61a.html#boolean-context","title":"boolean context :","text":"<p>False: False, 0, ' ', None</p>"},{"location":"notes/lingo/cs61a.html#iteration","title":"Iteration","text":""},{"location":"notes/lingo/cs61a.html#while","title":"while:","text":"<p>search func:</p> <pre><code>def search(f):\n  x = 0\n  while not f(x):\n    x += 1\n    return x\n</code></pre> <p>inverse func:</p> <pre><code>def inverse(f):\n  return lambda y:search(lambda x:f(x) == y)\n</code></pre>"},{"location":"notes/lingo/cs61a.html#control","title":"Control","text":"<p>funcs always evaluate all the components </p> <p>but controls just excuse part of it </p> <p>that's why there isn't if function</p>"},{"location":"notes/lingo/cs61a.html#logical-operator","title":"logical operator","text":"<p>and == &amp;&amp;</p> <p>or == ||</p>"},{"location":"notes/lingo/cs61a.html#lecture-4-higher-order-func","title":"Lecture 4 Higher-Order Func","text":"<p>assert statement: </p> <p><code>assert [!con], 'statement'</code></p>"},{"location":"notes/lingo/cs61a.html#generalizing-process","title":"Generalizing Process","text":"<p>find the common piont of a sequence of funcs</p> <p>make different parts a func to be the argument as the higher func</p> <p>eg: summation</p> <pre><code>def summation(n, term):\n  sum, k = 0, 1\n  while k &lt;= n:\n    k += 1\n    sum += term(k)\n  return sum\n</code></pre> <p>uses term to define the elements of the summation </p> <p>--&gt;higher order func : </p> <p>take a func to be an element of other func</p> <p>return a func </p> <p>make adder:</p> <pre><code>def make_adder(n):\n  \"\"\"return a function that takes one argument k and returns k + n\"\"\"\n  def adder(k):\n    return k + n\n  return adder\n&gt;&gt;&gt;add_three == make_adder(3)\n&gt;&gt;&gt;add_three(4)\n7\n&lt;=&gt; make_adder(3)(4)\n</code></pre>"},{"location":"notes/lingo/cs61a.html#function-composition","title":"Function Composition","text":"<p>compose func:</p> <pre><code>def compose1(f,g):\n  def h(x):\n    return f(g(x))\n</code></pre>"},{"location":"notes/lingo/cs61a.html#func-currying","title":"Func Currying","text":"<p>transit a multi-arguments func to a single-argument higher order func</p> <pre><code>curry = lambda f: lambda x: lambda y: f(x, y) \n</code></pre>"},{"location":"notes/lingo/cs61a.html#func-abstraction","title":"Func abstraction","text":""},{"location":"notes/lingo/cs61a.html#arbitrary-number-arguments","title":"Arbitrary number arguments","text":"<pre><code>def printed(f):\n  def print_and_return(*args):\n    result = f(*args)\n    print('Result:', result)\n    return result \n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-5-environments","title":"Lecture 5 Environments","text":"<p>a sequence of frame </p> <p>global frame </p> <p>local frame  </p> <ul> <li> <p>every expression is evaluated in the context of an environment </p> </li> <li> <p>A name is always bound to the earliest frame`value of the current environment</p> </li> </ul> <pre><code>def square(square):\n  return mul(square, square)\nsquare(4)\n#when calling square(4), in f1 frame square doesnt go back to Global frame to find the value, but bound to 4 which is the earliest frame of the current environment \n</code></pre> <p></p>"},{"location":"notes/lingo/cs61a.html#lambda-function","title":"Lambda function","text":"<p>is a expression return a function</p> <p>unnamed before</p> <p>cannot contain a statement </p> <pre><code>lambda [keyword]:[return expression using keyword]\n#eg:\nsquare = lambda x: x*x\n&gt;&gt;&gt;square(3)\n9\n&gt;&gt;&gt;(lambda x: x*x)(3)\n9\n</code></pre> <p>lambda is a name (square isn't created)</p> <p>but def creat a func called square</p>"},{"location":"notes/lingo/cs61a.html#function-decorator","title":"Function Decorator","text":"<pre><code>@trace #@xx+func == xx(func)\ndef triple(x):\n  return 3*x\n\ndef trace(fn):\n  def traced:\n    \u2026\u2026a sequence of operation\n    retunrn fn\n  return traced\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-6-recursion","title":"Lecture 6 Recursion","text":""},{"location":"notes/lingo/cs61a.html#mutual-recursion","title":"Mutual Recursion","text":"<pre><code>def split(n):\n  return n//10, n%10\n\n    \"\"\"Return the digit sum of n computed by the Luhn algorithm.\n    First: From the rightmost digit, which is the check digit, moving left, double the value\nof every second digit; if product of this doubling operation is greater than 9 (e.g., 7 *\n2 = 14), then sum the digits of the products (e.g., 10: 1 + 0 = 1, 14: 1 + 4 = 5) \n\n    &gt;&gt;&gt; luhn_sum(2)\n    2\n    &gt;&gt;&gt; luhn_sum(12)\n    4\n    &gt;&gt;&gt; luhn_sum(42)\n    10\n    &gt;&gt;&gt; luhn_sum(138743)\n    30\n    &gt;&gt;&gt; luhn_sum(5105105105105100) # example Mastercard\n    20\n    &gt;&gt;&gt; luhn_sum(4012888888881881) # example Visa\n    90\n    &gt;&gt;&gt; luhn_sum(79927398713) # from Wikipedia\n    70\n    \"\"\"\n  def luhn_sum(n):\n    if n &lt; 10:\n        return n\n    else:\n        all_but_last, last = split(n)\n        return luhn_sum_double(all_but_last) + last\n\ndef luhn_sum_double(n):\n    \"\"\"Return the Luhn sum of n, doubling the last digit.\"\"\"\n    all_but_last, last = split(n)\n    luhn_digit = sum_digits(2 * last)\n    if n &lt; 10:\n        return luhn_digit\n    else:\n        return luhn_sum(all_but_last) + luhn_digit\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-7-tree-recursion","title":"Lecture 7 Tree Recursion","text":"<p>makes more than one call of func</p> <pre><code>def compose1(f, g):\n    \"\"\"\"Return a function h, such that h(x) = f(g(x)).\"\"\"\n    def h(x):\n        return f(g(x))\n    return h\n\ndef repeated(f, n):\n    \"\"\"Return the function that computes the nth application of func (recursively!).\n\n    &gt;&gt;&gt; add_three = repeated(lambda x: x + 1, 3)\n    &gt;&gt;&gt; add_three(5)\n    8\n       \"\"\"\n    if n == 0:\n        return lambda x: x\n    else:\n        return compose1(f, repeated(f, n-1))\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-8-sequence-and-data-abstraction","title":"Lecture 8 Sequence and Data Abstraction","text":""},{"location":"notes/lingo/cs61a.html#list","title":"List","text":"<p>initialize :</p> <p><code>digits = [1, 2, 3, 4]</code></p> <p><code>digits[3] == getitem(digits, 3)</code></p> <p>concentrate and repeat :</p> <p><code>[5, 6] + 2*digits = [5, 6, 1, 2, 3, 4, 1, 2, 3, 4]</code></p> <p>List unpacking:</p> <p>list operations :</p> <p></p> <p></p>"},{"location":"notes/lingo/cs61a.html#for-statement","title":"For Statement","text":"<pre><code>for &lt;name&gt; in &lt;expression&gt;:\n  &lt;suite&gt;\n #name can bu multiple if expression is mutiple\n#eg:\nfor x, y in [[1, 2], [3, 4]]:\n</code></pre>"},{"location":"notes/lingo/cs61a.html#range","title":"Range","text":"<p>insert rangement on the left side of index</p> <p><code>range(-2, 2) -&gt; -2, -1, 0, 1</code></p> <p>including start value exclude end value</p> <p>list func:</p> <p>return back a list contain the element in a sequence</p>"},{"location":"notes/lingo/cs61a.html#list-comprehensions","title":"List Comprehensions","text":"<pre><code>def divisor(n):\n  return [1] + [x in range(n) if n%x == 0]\n</code></pre>"},{"location":"notes/lingo/cs61a.html#string","title":"String","text":"<p>quote:</p> <p>' / \" : the same </p> <p>\"\"\" : for multiple lines</p> <p>an element of a string is itself a string, but only one element</p> <pre><code>so:\n&gt;&gt;&gt;'here' in \"where`s it\"\nTrue\nbut:\n&gt;&gt;&gt;234 in [2, 3, 4, 5]\nFalse\n&gt;&gt;&gt;[2, 3, 4] in [2, 3, 4, 5]\nFalse\n</code></pre>"},{"location":"notes/lingo/cs61a.html#data-abstraction","title":"Data abstraction","text":"<ul> <li>compound objects combine objects together</li> <li>a methodology by which funcs enforce an abstraction barrier between representation and use</li> </ul>"},{"location":"notes/lingo/cs61a.html#abstraction-barriers","title":"Abstraction Barriers","text":""},{"location":"notes/lingo/cs61a.html#dictionaries","title":"Dictionaries","text":"<pre><code>dic = {&lt;key&gt;: &lt;value&gt;, ...}\ndic[key] == value\n</code></pre> <ul> <li>keys can't be dictionaries or list</li> <li>dictionaies aren`t ordered</li> <li>two keys can't be equal</li> </ul>"},{"location":"notes/lingo/cs61a.html#handling-iterables-functions","title":"Handling iterables functions:","text":"<p>zip(*iterables) \u5c06\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6309\u7167\u7d22\u5f15\u4f4d\u7f6e\u4e00\u4e00\u914d\u5bf9\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668</p> <p>enumerate(iterable, start=0)\uff1a\u8fd4\u56de\u4e00\u4e2a\u679a\u4e3e\u5bf9\u8c61\uff0c\u5305\u542b\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u4ee5\u53ca\u5bf9\u5e94\u7684\u7d22\u5f15\u503c\u3002\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a start \u53c2\u6570\u6765\u6307\u5b9a\u8d77\u59cb\u7d22\u5f15\u503c\u3002</p> <p>filter(function, iterable)\uff1a\u8fd4\u56de\u4e00\u4e2a\u7531\u6ee1\u8db3\u6307\u5b9a\u6761\u4ef6\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5143\u7d20\u7ec4\u6210\u7684\u8fed\u4ee3\u5668\u3002function \u53c2\u6570\u662f\u4e00\u4e2a\u7528\u4e8e\u7b5b\u9009\u5143\u7d20\u7684\u51fd\u6570\u3002</p> <p>map(function, *iterables)\uff1a\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u5e94\u7528\u6307\u5b9a\u7684\u51fd\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u7ed3\u679c\u7684\u8fed\u4ee3\u5668\u3002</p> <p>reduce(function, iterable[, initializer])\uff1a\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u5e94\u7528\u6307\u5b9a\u7684\u4e8c\u5143\u51fd\u6570\u6765\u8fdb\u884c\u7d2f\u79ef\u8ba1\u7b97\u3002\u9700\u8981\u5bfc\u5165 functools \u6a21\u5757\u624d\u80fd\u4f7f\u7528\u3002</p> <p>sorted(iterable, key=None, reverse=False)\uff1a\u8fd4\u56de\u4e00\u4e2a\u6392\u5e8f\u540e\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u65b0\u5217\u8868\u3002\u53ef\u4ee5\u901a\u8fc7 key \u53c2\u6570\u6307\u5b9a\u4e00\u4e2a\u51fd\u6570\u6765\u751f\u6210\u6392\u5e8f\u7684\u5173\u952e\u5b57\u3002</p> <p>any(iterable)\uff1a\u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u4e3a\u771f\uff0c\u5219\u8fd4\u56de True\uff1b\u5426\u5219\u8fd4\u56de False\u3002</p> <p>all(iterable)\uff1a\u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u4e3a\u771f\uff0c\u5219\u8fd4\u56de True\uff1b\u5426\u5219\u8fd4\u56de False\u3002</p>"},{"location":"notes/lingo/cs61a.html#lecture-9-functional-decomposition-debugging","title":"Lecture 9 Functional Decomposition &amp; Debugging","text":""},{"location":"notes/lingo/cs61a.html#handling-errors","title":"Handling Errors","text":""},{"location":"notes/lingo/cs61a.html#exceptions","title":"exceptions:","text":"<p>assertion statement</p> <p>raise statement: </p> <p><code>raise &lt;statement&gt;</code></p> <pre><code>#eg:\nraise TypeError('bad argument')\n</code></pre> <ol> <li>TypeError:  a func was passed in the wrong num/type of argument</li> <li>NameError: a name wasn't found</li> <li>KeyError: dic doesn't have the key</li> <li>RuntimeError: </li> </ol>"},{"location":"notes/lingo/cs61a.html#try-statement","title":"Try Statement","text":"<pre><code>def invert(x):\n  y = 1/x\n  print('Never printed if x is 0')\n  return y\ndef invert_safe(x):\n  try:\n    return invert(x)\n  except ZeroDivisionError as e:\n    print('handled', e)\n    return 0  #return str(e)\n\"\"\"\n&gt;&gt;&gt;invert_safe(0)\nhandled division by 0\n&gt;&gt;&gt;invert_safe(1/0)\nError:....\n#Error hapends before excuting func\n\n\"\"\"\n</code></pre> <p>Reduce a sequence to a value</p> <pre><code>def reduce(f, sq, initial):\n  \"\"\"Combine elements of sq starting with initial using f(a two arguments func)#\u5f52\u7ea6\"\"\"\n  for x in sq:\n    initial = f(initial, x)\n  return initial\n\n    #recursive version\n  if not sq:\n    return initial\n  else:\n    sq, initial = sq[1:], f(initail, sq[0])\n\ndef divide_all(n, ds):\n  try:\n    return reduce(truediv, ds, n)\n  except:ZeroDivisionError:\n    return float('inf')\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-10-trees","title":"Lecture 10 Trees","text":""},{"location":"notes/lingo/cs61a.html#slicing","title":"slicing:","text":"<pre><code>odds = [1, 3, 5, 7]\n[odds[i] for i in range(1, 3)]\n==\nodds[1:3]\n== [3, 5]\n</code></pre> <p>slicing creats a new list</p>"},{"location":"notes/lingo/cs61a.html#sequence-aggregation","title":"Sequence Aggregation","text":"<p>sum  max</p> <p>input can be values or interables such as list</p> <p><code>max(range(10), key = lambda x: f(x))</code></p> <p>key: return an x within 0,9 which gets the biggest f(x)</p> <p>all:</p> <p>return True if bool(x) is True </p>"},{"location":"notes/lingo/cs61a.html#tree-abstraction","title":"Tree Abstraction","text":"<p>Two discription</p> <p>Recursive--&gt;wooden tree</p> <p>Relative--&gt;family tree</p> <p></p> <p>**A tree has a root label and a list of branches **</p> <p>each branch is a tree </p> <pre><code>#implement the tree\n\"\"\"\n&gt;&gt;&gt;tree(3, [tree(1), tree(2, [tree(1), tree(1)])])\n[3, [1], [2, [1], [1]]]\n----&gt;\n         3\n       1   2\n          1  1\n\"\"\"\ndef tree(label, branches=[]):\n  for branch in branches:\n    assert is_tree(branch)\n  return [label] + list(branches)\n\ndef label(tree):\n  return tree[0]\n\ndef branches(tree):\n  return tree[1:]\n\ndef is_tree(tree):\n  if type(tree) != list or len(tree) &lt; 1:\n    return False\n  for branch in branches(tree):\n    if not is_tree(branch):\n      return False #resursively check\n  return True\n\ndef is_leaf(tree):\n  return not branches(tree)#check if tree has a branch\n\ndef count_leaves(t):\n  if is_leaf(t):\n    return 1\n  else:\n    branches_count = [count_leaves(b) for b in branches(t)]\n  return sum(branches_count)\n\ndef leaves(tree):\n  \"\"\"Return all the leaves of the tree\"\"\"\n  if is_leaf(tree):\n    return [label(tree)]\n  else:\n    return sum([leaves(b) for b in branches(tree)], [])\n  \"\"\"\n  &gt;&gt;&gt;sum([[1], [2, 3]], []) #use sum(, []) to combine list\n  [1, 2, 3]\n  \"\"\"\ndef increment_leaves(t):\n  if is_leaf(t):\n    return tree(label(t)+1)\n  else:\n    branches = [increment_leaves(b) for b in branches(t)]\n    return tree(label(t), branches)\ndef increment(t):\n  return tree(label(t)+1, [increment(b) for b in branches(t)])\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-11-mutable-sequences","title":"Lecture 11 Mutable Sequences","text":""},{"location":"notes/lingo/cs61a.html#objects","title":"Objects","text":"<p>\u2022 Objects represent information </p> <p>\u2022 They consist of data and behavior, bundled together to create abstractions </p> <p>\u2022 Objects can represent things, but also properties, interactions, &amp; processes</p> <p>\u2022 A type of object is called a class; classes are first-class values in Python</p> <ul> <li>Object-oriented programming: </li> <li>A metaphor for organizing large programs</li> <li>Special syntax that can improve the composition of programs</li> </ul> <p>In Python, every value is an object </p> <p>All objects have attributes(\u5c5e\u6027)</p> <p>A lot of data manipulation happens through object methods</p> <p>Functions do one thing; objects do many related things</p>"},{"location":"notes/lingo/cs61a.html#tuples-and-sequences","title":"Tuples and Sequences","text":"<p><code>tuple --&gt;(1, 2, 3, 4)</code></p> <p><code>sequence --&gt;[1, 2, 3, 4]</code></p> <p>sequence is mutable</p> <p>tuple is immutable</p> <p></p>"},{"location":"notes/lingo/cs61a.html#mutation","title":"Mutation","text":"<p>Equality and Identity</p> <pre><code>&lt;exp0&gt; is &lt;exp1&gt;\nevaluates True if they evaluate to the same object\n&lt;exp0&gt; == &lt;exp1&gt;\nevaluates True if they evaluate to equal values\n#eg:\n&gt;&gt;&gt;[10] == [10]\nTrue\n&gt;&gt;&gt;a = [10]\n&gt;&gt;&gt;b = [10]\n&gt;&gt;&gt;a == b\nTrue\n&gt;&gt;&gt;a is b\nFalse\n&gt;&gt;&gt;a.append(1)\n&gt;&gt;&gt;a\n[10, 1]\n&gt;&gt;&gt;b\n[10]   #change doesnt happen between diff objects\n&gt;&gt;&gt;b = a\n&gt;&gt;&gt;a.append[1]\n&gt;&gt;&gt;b\n[10, 1, 1]   #change happens because a is b, they are things with diff names\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-14-mutable-functions","title":"Lecture 14 Mutable Functions","text":"<p>Assignment in the current frame cannot affect values in the parent frame</p> <p>to solve this --&gt;nonlocal assignment</p> <pre><code>def make_withdraw(balance):\n  def withdraw(amount):\n    nonlocal balence # this statement means change will affect balance in \"def make_withdraw\" \n    if amount &gt; balance:\n      return 'Insuffient funds'\n    balance = balance - amount\n    return balance\n  return withdraw\n</code></pre> <p>when re-binding a nonlocal value </p> <p>it will return to find the frame which the name was first binded</p> <p>--&gt; Future assignments to that name change its pre-existing binding in the first non-local frame of the current environment in which that name is bound.</p> <ul> <li>a nonlocal name has to appear in previous frame but not in current frame</li> </ul> <p>another way: creat a list (list is also mutable)</p>"},{"location":"notes/lingo/cs61a.html#python-particulars","title":"Python Particulars:","text":"<ul> <li>Python pre-computes which frame contains each name before excuting the body of a func</li> <li>Within the body of a func, all instances of a name must refer to the same name</li> </ul> <p>Func mutation will cause referential transparency lost</p>"},{"location":"notes/lingo/cs61a.html#lecture-14-iterators-generators","title":"Lecture 14 Iterators &amp; Generators","text":""},{"location":"notes/lingo/cs61a.html#iterate","title":"Iterate:","text":"<pre><code>iter(iterable s)#turn s into a iterator\nnext(iterator)#go to the next element of s\n</code></pre> <p>over dictionaries :</p> <pre><code>d = {'one':1, 'two':2}\nk = iter(d.keys())\nv = iter(d.values())\ni = iter(d.items())\n&gt;&gt;&gt;next(k)\none\n&gt;&gt;&gt;next(v)\n1\n&gt;&gt;&gt;next(i)\n('one', 1)\n</code></pre> <p>change size of a dictionary while iterating it will cause runtime error --&gt;need to build a new iterator</p>"},{"location":"notes/lingo/cs61a.html#generator","title":"Generator","text":"<p>adv: compute lazily(compute when needed)</p> <p>func uses yield to replace return</p> <p>yield from &lt; iterable &gt; can yield directly an iterable</p> <pre><code>def countdown(x):\n  if x &gt; 0:\n    yield x\n    for k in countdown(x-1):\n      yield k\n    &lt;=&gt;\n    yield from countdown(x-1)#avoid using for iterator\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-15-objects","title":"Lecture 15 Objects","text":""},{"location":"notes/lingo/cs61a.html#object-construction","title":"Object construction","text":"<pre><code>class Account:\n  def __init__(self, account_holder):\n    self.balance = 0\n    self.holder = account_holder\n</code></pre> <p>__ init __ is a constructor </p> <p>self is the first argument</p>"},{"location":"notes/lingo/cs61a.html#methods","title":"Methods","text":"<p>is an attribute and a function</p> <pre><code>...\n    def deposit(self, amount):\n    self.balance = self.balance + amount \n    return self.balance\n</code></pre> <p><code>Object + Function = Bound Method</code></p> <p>Bound method , which couple together a func and the obj on which that method will be invoked </p> <pre><code>&gt;&gt;&gt;type(Account.deposit)\n&lt;class 'function'&gt;\n&gt;&gt;&gt;type(tom_account.deposit)\n&lt;class 'method'&gt;\n</code></pre>"},{"location":"notes/lingo/cs61a.html#attributes","title":"Attributes","text":"<p>use . notation to access or</p> <p>funcs : getattr(&lt; class &gt;, &lt; attri &gt;)</p> <p>if we add this to a class:</p> <pre><code>class Account:\n  interest = 0.02\n  def __init__:\n    ...\n</code></pre> <p>we say interest is a class attribute, rather a instance one</p> <p>and when finding attributes, instance is prior to calss </p> <p></p>"},{"location":"notes/lingo/cs61a.html#lecture-16-inheritance","title":"Lecture 16 Inheritance","text":"<p>relating classes together </p> <pre><code>class &lt;subclass&gt;(&lt;base class&gt;):\n  &lt;suite&gt;\n</code></pre> <p>when creating a subclass just put the different part in the suite</p> <p>Inheritance represents a is-a relationship</p> <p>eg. checkaccount is an account</p>"},{"location":"notes/lingo/cs61a.html#lecture-17-linked-lists-trees","title":"Lecture 17 Linked lists &amp; Trees","text":"<pre><code>class Link:\n  empty = ()\n  def __init__(self, first, rest = empty):\n    assert rest is Link.empty or isinstance(rest, Link)\n    self.first = first\n    self.rest = rest\n  def __getitem__(self, i):\n    if i == 0:\n      return self.first\n    else:\n      return self.rest[i-1]\n  def __len__(self):\n    return len(self.rest)+1\n    @property \n  def second(self):\n    return self.rest.first\n  @second.setter\n  def second(self, value):\n    self.rest.first = value\n</code></pre> <p><code>isinstance(a, class b)</code> is a builtin func to check if a is an instance of b or inherent from b</p>"},{"location":"notes/lingo/cs61a.html#tree-class","title":"Tree Class","text":"<pre><code>class Tree:\n  def __init__(self, label, branches=[]):\n    self.label = label\n    for branch in branches:\n      assert isinstance(branch, Tree)\n    self.branches = list(branches)\n</code></pre>"},{"location":"notes/lingo/cs61a.html#memorization","title":"Memorization","text":"<pre><code>def memo(f):\n  cache = {}\n  def memorized(n):\n    if n not in cache:\n      cache[n]=f(n)\n    return chache[n]\n  return memorized\n</code></pre>"},{"location":"notes/lingo/cs61a.html#circle-linked-list","title":"Circle Linked List","text":"<p>\u5728\u94fe\u8868\u4e2d\u5b58\u5728\u5faa\u73af\u610f\u5473\u7740\u94fe\u8868\u4e2d\u7684\u67d0\u4e9b\u8282\u70b9\u901a\u8fc7\u6307\u9488\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\u8def\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u94fe\u8868\u4e2d\u7684\u67d0\u4e2a\u8282\u70b9\u7684\u6307\u9488\u6307\u5411\u4e86\u94fe\u8868\u4e2d\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff0c\u4ece\u800c\u5f62\u6210\u4e86\u4e00\u4e2a\u95ed\u5408\u7684\u73af\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u5982\u679c\u94fe\u8868\u4e2d\u5b58\u5728\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u6307\u9488\u6307\u5411\u4e86\u94fe\u8868\u4e2d\u7684\u53e6\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u6700\u7ec8\u5bfc\u81f4\u56de\u5230\u4e86\u4e4b\u524d\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u5b58\u5728\u5faa\u73af\u3002</p> <p>\u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u94fe\u8868\uff1a</p> <p>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;2-&gt;circle</p> <p>solution:</p> <p>double pointer:</p> <pre><code>#use a faster pointer and a slower one, faster moves two steps onetime and slower moves one step onetime, if circle exsits, two pointer will meet eventually.\ndef has_circle(link):\n  p_slow, p_fast = link, link\n    while p_fast != Link.empty:\n        p_slow = p_slow.rest\n        if p_fast.rest != Link.empty:\n            p_fast = p_fast.rest.rest\n            if p_fast == p_slow:\n                return True\n        else:\n            break\n    return False\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-18-interfaces","title":"Lecture 18 Interfaces","text":""},{"location":"notes/lingo/cs61a.html#string-representation","title":"String representation","text":"<ul> <li><code>str</code> to humans</li> <li><code>repr</code> to Python interpreter</li> </ul>"},{"location":"notes/lingo/cs61a.html#lecture-19-scheme","title":"Lecture 19 Scheme","text":"<p>Scheme consists of expressions</p> <p>primitive expressions and combinations</p>"},{"location":"notes/lingo/cs61a.html#special-forms","title":"Special Forms","text":"<ul> <li>If : (if &lt; judge &gt; &lt; result &gt; &lt; alter &gt;)</li> <li>and or :(and/or e1 e2 ...)</li> <li>binding :</li> <li>(define &lt; symbol &gt; &lt; expression &gt;)</li> <li>new procedures :(define (&lt; symbol &gt; &lt; formal parameters &gt;) &lt; body &gt;)</li> </ul>"},{"location":"notes/lingo/cs61a.html#lambda-expressions","title":"Lambda Expressions","text":"<p><code>(lambda(formal parameter) body)</code></p> <pre><code>(define (plus4 x)(+ x 4))\n==\n(define plus4(lambda(x) (+ x 4)))\n</code></pre>"},{"location":"notes/lingo/cs61a.html#scheme-lists","title":"Scheme Lists","text":"<p>is same as Python`s linked list</p> <pre><code># x = (cons 2 1)-&gt; creates a list x:2-&gt;1\n# (car x) -&gt; return the first of x: 2\n# (cdr x) -&gt; return the rest of x: 1\n# nil : the empty list\n</code></pre>"},{"location":"notes/lingo/cs61a.html#symbolic","title":"Symbolic","text":"<p>single  <code>`</code>  used on the left side of the element is to express itself </p>"},{"location":"notes/lingo/cs61a.html#programming-language","title":"Programming Language","text":"<p>a programming language has :</p> <ul> <li>Syntax:\u8bed\u6cd5</li> <li>Semantics:\u8bed\u4e49</li> </ul> <p>To create a new one, need:</p> <ul> <li>Specification: a document describes S&amp;S</li> <li>Canonical Implementation : an interpreter or compiler</li> </ul>"},{"location":"notes/lingo/cs61a.html#lecture-20-interpreters","title":"Lecture 20 Interpreters","text":""},{"location":"notes/lingo/cs61a.html#lecture-21-more-scheme","title":"Lecture  21 More Scheme","text":""},{"location":"notes/lingo/cs61a.html#scope","title":"Scope:","text":"<p>lexical: the parent frame is where the funcs defined(Python Scheme )</p> <p>dynamic: the parent frame is where the funcs called</p>"},{"location":"notes/lingo/cs61a.html#tail-recursive","title":"tail recursive","text":""},{"location":"notes/lingo/cs61a.html#lecture-22-macros","title":"Lecture 22 Macros","text":"<p>new kinds of special form </p> <pre><code>eg:\n(define-macro (twice expr)\n    (list 'begin expr expr))\n#begin means do all of the things\n&gt;(twice (print 2))\n2 \n2\nduplicate before evaluating/\notherwise:\n(define (twice expr)(list 'begin expr expr))\n&gt;(twice (print 2))\nNone\nNone\n</code></pre> <p>define for statement:</p> <pre><code>(define-macro(for sym vals expr)\n    list 'map (list 'lambda (list sym) expr) vals)\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-23-streams","title":"Lecture 23 Streams","text":"<p>streams are lazy lists in scheme</p> <pre><code>;building a stream range:\n(define (range-stream a b)\n  (if (&gt;= a b)\n      nil\n      (cons-stream a (range-stream (+ a 1) b))))\n</code></pre>"},{"location":"notes/lingo/cs61a.html#lecture-24-declarative-programming","title":"Lecture 24 Declarative Programming","text":""},{"location":"notes/lingo/cs61a.html#sql","title":"SQL","text":""},{"location":"notes/lingo/verilog.html","title":"Verilog","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u662f\u4e00\u4e9b\u6211\u5728\u5f00\u59cbCO_2024\u540e\u5f00\u59cb\u8bb0\u5f55\u7684Verilog\u8bed\u6cd5\u7b14\u8bb0\uff0c\u53ef\u80fd\u4e0d\u662f\u592a\u7cfb\u7edf\uff0c\u4f46\u662f\u6211\u4f1a\u5c3d\u91cf\u628a\u6211\u5b66\u5230\u7684\u4e1c\u897f\u8bb0\u5f55\u4e0b\u6765\u3002</p>"},{"location":"notes/lingo/verilog.html#grammar","title":"Grammar","text":"<ul> <li>Module <pre><code>module module_name(\n    input wire input_name,\n    output reg output_name\n);\n    // statements  \nendmodule\n</code></pre></li> <li>Always block <pre><code>always @(posedge clk) begin\n    // statements\nend\n</code></pre> \u5f53always\u4e2d\u7684\u6761\u4ef6\u6ee1\u8db3\u65f6\uff0c\u4f1a\u6267\u884c\u5176\u4e2d\u7684\u8bed\u53e5\u3002 \u5fc5\u987b\u4f7f\u7528always block\u7684\u60c5\u51b5\uff1a 1. \u65f6\u5e8f\u903b\u8f91 2. \u590d\u6742\u5230\u4e0d\u80fd\u7528assign\u7684\u903b\u8f91</li> </ul> <p><code>always</code> \u5757\u9002\u7528\u4e8e\u63cf\u8ff0\u9700\u8981\u65f6\u949f\u8fb9\u6cbf\u89e6\u53d1\u7684\u884c\u4e3a\u6216\u8005\u590d\u6742\u7684\u903b\u8f91\u8ba1\u7b97\uff0c\u800c\u5bf9\u4e8e\u7b80\u5355\u7684\u7ec4\u5408\u903b\u8f91\u548c\u4e0d\u6d89\u53ca\u65f6\u949f\u7684\u7b80\u5355\u64cd\u4f5c\uff0c\u5219 <code>assign</code> \u8bed\u53e5\u66f4\u5408\u9002\u3002</p> <ul> <li>Wire &amp; Reg <pre><code>wire a;\nassign a = b &amp; c;\n\nreg [7:0] count;\nalways @(posedge clk) begin\n  count &lt;= count + 1;\nend\n</code></pre></li> </ul> <p><code>wire</code> : \u9002\u7528\u4e8e\u7ec4\u5408\u903b\u8f91\u548c\u6a21\u5757\u95f4\u7684\u8fde\u63a5 \u4e0d\u50a8\u5b58\u503c\u53ea\u8868\u793a\u4fe1\u53f7\u7684\u8fde\u63a5 \u7528assign\u8bed\u53e5\u8d4b\u503c</p> <p><code>reg</code> :  \u9002\u7528\u4e8e\u9700\u8981\u5b58\u50a8\u72b6\u6001\u7684\u65f6\u5e8f\u903b\u8f91 \u53ef\u4ee5\u5b58\u50a8\u503c\uff0c\u901a\u5e38\u7528\u4e8e\u63cf\u8ff0\u5bc4\u5b58\u5668\u3001\u8ba1\u6570\u5668\u7b49 \u7528always\u8bed\u53e5\u8d4b\u503c,\u6cbf\u65f6\u949f\u89e6\u53d1</p> <ul> <li>= and &lt;= <code>=</code> : blocking assignment <code>&lt;=</code> : non-blocking assignment     <code>=</code> \u4f1a\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u7acb\u5373\u8d4b\u503c\uff0c\u800c <code>&lt;=</code> \u4f1a\u5728\u4e0b\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u8d4b\u503c\u3002</li> </ul> <p><code>Slice</code> \u6a21\u5757</p> <p>\u4e3b\u8981\u7528\u4e8e\u5c06\u4e00\u4e2a\u4fe1\u53f7\u5206\u89e3\u4e3a\u591a\u4e2a\u4f4d\uff0c\u6216\u8005\u53d6\u4fe1\u53f7\u7684\u67d0\u4e00\u90e8\u5206\u3002</p> <pre><code>// \u5047\u8bbe\u6709\u4e00\u4e2a32\u4f4d\u7684\u8f93\u5165\u4fe1\u53f7 Din\nwire [31:0] Din;\nwire [7:0] Dout;\n\n// \u4ece Din \u4e2d\u63d0\u53d6\u7b2c7\u5230\u7b2c0\u4f4d\nassign Dout = Din[7:0];\n\n//\u53ea\u53d6\u7b2c7\u4f4d\nassign Dout = Din[7];\n</code></pre> <p><code>Utility Vector Logic</code> \u6a21\u5757</p> <p>Utility Vector Logic \u6a21\u5757\u7528\u4e8e\u57fa\u672c\u7684\u903b\u8f91\u8fd0\u7b97\uff0c\u5982 AND\u3001OR\u3001NOT \u7b49\u64cd\u4f5c\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u5199\u903b\u8f91\u8fd0\u7b97\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>Utility Vector Logic</code> \u6a21\u5757\u3002</p> <pre><code>// \u5047\u8bbe\u6709\u4e24\u4e2a\u8f93\u5165\u4fe1\u53f7 A \u548c B\uff0c\u5206\u522b\u662f1\u4f4d\nwire A, B;\nwire Res;\n\n// \u8fdb\u884c\u903b\u8f91 AND \u8fd0\u7b97\nassign Res = A &amp; B; // \u903b\u8f91 AND\n\n// \u5982\u679c\u662f NOT \u8fd0\u7b97\nassign Res = ~A; // \u903b\u8f91 NOT\n\n// \u5176\u4ed6\u8fd0\u7b97\u5982 OR\u3001XOR\nassign Res = A | B; // \u903b\u8f91 OR\nassign Res = A ^ B; // \u903b\u8f91 XOR\n</code></pre> <p><code>Concat</code> \u6a21\u5757</p> <p>Concat \u6a21\u5757\u7528\u4e8e\u5c06\u591a\u4e2a\u4fe1\u53f7\u62fc\u63a5\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u4fe1\u53f7\u3002\u5b83\u5728\u5904\u7406\u591a\u4e2a\u5c0f\u4fe1\u53f7\u7ec4\u5408\u4e3a\u4e00\u4e2a\u5927\u4fe1\u53f7\u65f6\u975e\u5e38\u6709\u7528\u3002</p> <p>\u76f4\u63a5\u7528 <code>{}</code> \u6765\u62fc\u63a5\u4fe1\u53f7 <pre><code>// \u5047\u8bbe\u6709\u4e24\u4e2a\u4fe1\u53f7 A \u548c B\uff0c\u5206\u522b\u662f8\u4f4d\nwire [7:0] A;\nwire [7:0] B;\nwire [15:0] Dout;\n\n// \u5c06 A \u548c B \u62fc\u63a5\uff0c\u5f62\u621016\u4f4d\u7684 Dout\nassign Dout = {A, B}; // A \u4f4d\u4e8e\u9ad88\u4f4d\uff0cB \u4f4d\u4e8e\u4f4e8\u4f4d\n\n```Constant``` \u6a21\u5757\n\nConstant \u6a21\u5757\u7528\u4e8e\u751f\u6210\u56fa\u5b9a\u503c\u7684\u5e38\u6570\u4fe1\u53f7\u3002\u5728 Verilog \u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u53c2\u6570\u6216\u76f4\u63a5\u8d4b\u503c\u6765\u5b9e\u73b0\u3002\n\n```verilog\n// \u76f4\u63a5\u8d4b\u503c\nassign Dout = 16'h1234; // 16'h1234 \u8868\u793a16\u8fdb\u5236\u7684 1234\n\n// \u7528\u53c2\u6570\nparameter Dout = 16'h1234;\n\n// \u751f\u6210\u4e00\u4e2a4\u4f4d\u7684\u5e38\u6570 4'b1010\nwire [3:0] Const;\nassign Const = 4'b1010;\n</code></pre></p> <ul> <li>FSM </li> </ul> <p>\u6709\u9650\u72b6\u6001\u673a\u662f\u4e00\u79cd\u6570\u5b66\u6a21\u578b\uff0c\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u7cfb\u7edf\u5728\u4e0d\u540c\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u6362\u53ca\u5176\u884c\u4e3a\u3002\u5b83\u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\u72b6\u6001\u96c6\uff1a\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001\u3002</li> <li>\u8f93\u5165\u96c6\uff1a\u72b6\u6001\u673a\u6839\u636e\u8f93\u5165\u51b3\u5b9a\u4e0b\u4e00\u6b65\u7684\u72b6\u6001\u3002</li> <li>\u72b6\u6001\u8f6c\u79fb\u89c4\u5219\uff1a\u5f53\u524d\u72b6\u6001\u548c\u8f93\u5165\u7684\u7ec4\u5408\u51b3\u5b9a\u72b6\u6001\u7684\u53d8\u5316\u3002</li> <li>\u521d\u59cb\u72b6\u6001\uff1a\u72b6\u6001\u673a\u542f\u52a8\u65f6\u7684\u72b6\u6001\u3002</li> <li>\u8f93\u51fa\uff1a\u72b6\u6001\u673a\u53ef\u4ee5\u4ea7\u751f\u8f93\u51fa\uff0c\u8f93\u51fa\u901a\u5e38\u548c\u5f53\u524d\u72b6\u6001\u6216\u8f93\u5165\u6709\u5173\u3002</li> </ul> <pre><code>module fsm_example (\n    input wire clk,          // \u65f6\u949f\u4fe1\u53f7\n    input wire reset,        // \u5f02\u6b65\u590d\u4f4d\u4fe1\u53f7\n    input wire in,           // \u8f93\u5165\u4fe1\u53f7\n    output reg [1:0] state,  // \u5f53\u524d\u72b6\u6001\u8f93\u51fa\n    output reg out           // \u72b6\u6001\u673a\u8f93\u51fa\u4fe1\u53f7\n);\n\n// \u72b6\u6001\u7f16\u7801\nlocalparam S0 = 2'b00;  // \u72b6\u6001 0\nlocalparam S1 = 2'b01;  // \u72b6\u6001 1\nlocalparam S2 = 2'b10;  // \u72b6\u6001 2\n\nreg [1:0] next_state;   // \u4e0b\u4e00\u4e2a\u72b6\u6001\n\n// \u72b6\u6001\u8f6c\u79fb\u903b\u8f91 (\u7ec4\u5408\u903b\u8f91)\nalways @(*) begin\n    case (state)\n        S0: begin\n            if (in)\n                next_state = S1;\n            else\n                next_state = S0;\n        end\n\n        S1: begin\n            if (in)\n                next_state = S2;\n            else\n                next_state = S0;\n        end\n\n        S2: begin\n            if (in)\n                next_state = S2;\n            else\n                next_state = S1;\n        end\n\n        default: next_state = S0;  // \u4efb\u4f55\u672a\u77e5\u72b6\u6001\u56de\u5230 S0\n    endcase\nend\n\n// \u72b6\u6001\u5bc4\u5b58\u5668 (\u65f6\u5e8f\u903b\u8f91)\nalways @(posedge clk or posedge reset) begin\n    if (reset)\n        state &lt;= S0;  // \u590d\u4f4d\u65f6\u8fdb\u5165\u521d\u59cb\u72b6\u6001 S0\n    else\n        state &lt;= next_state;  // \u5426\u5219\u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\nend\n\n// \u8f93\u51fa\u903b\u8f91 (Moore \u578b\uff0c\u53ea\u4f9d\u8d56\u4e8e\u5f53\u524d\u72b6\u6001)\nalways @(state) begin\n    case (state)\n        S0: out = 0;\n        S1: out = 1;\n        S2: out = 0;\n        default: out = 0;\n    endcase\nend\n\nendmodule\n</code></pre>"},{"location":"notes/math/randomprocess/index.html","title":"Random Process","text":"<p>\u6458\u8981</p> <p>\u6211\u5728\u5927\u4e8c\u6625\u590f\u5b66\u671f\u65c1\u542c\u4e86\u8d75\u654f\u667a\u8001\u5e08\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u662f\u6211\u7684\u7b14\u8bb0</p>"},{"location":"notes/math/randomprocess/index.html#intro","title":"Intro","text":""},{"location":"notes/x/aidd/aidd.html","title":"Aidd","text":"<p>\u5206\u5b50\u529b\u5b66\u7684\u4e16\u754c\u89c2\uff1a\u6700\u5c0f\u7684\u8ba8\u8bba\u5355\u4f4d\u662f\u5b8f\u89c2\u7c92\u5b50\uff0c\u6700\u5c0f\u5355\u4f4d\u662f\u539f\u5b50\u800c\u4e0d\u662f\u7535\u5b50</p> <p>\u5206\u5b50\u4f53\u7cfb\u7684\u52bf\u80fd\u51fd\u6570\u662f\u5206\u5b50\u4f53\u7cfb\u4e2d\u539f\u5b50\u4f4d\u7f6e\u7684\u51fd\u6570</p> <p>\u5c06\u5206\u5b50\u4f53\u7cfb\u4f5c\u4e3a\u5728\u52bf\u80fd\u9762\u4e0a\u8fd0\u52a8\u7684\u529b\u5b66\u4f53\u7cfb</p> <p>\u6c42\u89e3\u7ecf\u5178\u529b\u5b66\u65b9\u7a0b\u800c\u975e\u91cf\u5b50\u529b\u5b66\u7684\u859b\u5b9a\u8c14\u65b9\u7a0b</p> \\[ E_{covalent} = E_{bonds} + E_{angles} + E_{torsions} \\] <p>\\(E_{bonds}\\) \u662f\u952e\u4f38\u7f29\u80fd</p> <p>\u7528\u80e1\u53ef\u5b9a\u5f8bHarmonic\u52bf\u51fd\u6570\u6765\u63cf\u8ff0</p> <p>\u53c2\u8003\u952e\u957f\u548c\u5e73\u8861\u952e\u957f\uff1a</p> <p>\u53c2\u8003\u662f\u5f53\u5176\u4ed6\u9879\u5728\u529b\u573a\u4e2d\u7684\u503c\u4e3a0\u7684\u65f6\u5019\uff0c\u952e\u957f\u6240\u91c7\u7528\u7684\u503c</p> <p>\u5e73\u8861\u662f\u4f53\u7cfb\u80fd\u91cf\u5904\u4e8e\u6700\u5c0f\u65f6\u952e\u957f\u6240\u91c7\u7528\u7684\u503c</p> <p>\u4f46\u662f\u8c10\u632f\u5b50\u6a21\u578b\u4e2d\u5f53\u4e24\u4e2a\u539f\u5b50\u8ddd\u79bb\u8f83\u8fdc\u65f6\uff0c\u952e\u957f\u4f1a\u8d8b\u5411\u4e8e\u65e0\u7a77\u5927\uff0c\u6b64\u65f6\u80e1\u53ef\u5b9a\u5f8b\u4e0d\u518d\u9002\u7528</p> <p>\u6b64\u65f6\u4f7f\u7528Morse\u52bf\u51fd\u6570</p> <p>\u952e\u89d2\u52bf\u80fd\u51fd\u6570\u91c7\u7528harmonic\u52bf\u51fd\u6570</p> <p>\u4e8c\u9762\u89d2\u626d\u8f6c\u80fd</p> <p>\u4e8c\u9762\u89d2\u626d\u8f6c\u80fd\u5bf9\u603b\u80fd\u91cf\u7684\u8d21\u732e\u5c0f\u4e8e\u952e\u957f\u548c\u952e\u89d2\u7684\u8d21\u732e\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e8c\u9762\u89d2\u7684\u6539\u53d8\u8981\u6bd4\u952e\u957f\u548c\u952e\u89d2\u7684\u6539\u53d8\u81ea\u7531\u7684\u591a</p> <p>\u6784\u8c61\u641c\u7d22</p> <p>\u975e\u6b63\u5e38\u4e8c\u9762\u89d2\uff1aimproper</p> <p>\u7528\u4e8e\u7ea6\u675f\u5177\u6709\u5171\u5e73\u9762\u503e\u5411\u7684\u539f\u5b50\uff0c\u4e5f\u7528\u4e8e\u9650\u5236\u67d0\u4e9b\u5206\u5b50\u8f6c\u52a8\u7ffb\u8f6c\u4e3a\u5176\u955c\u50cf\u7ed3\u6784</p> <p>\u8026\u5408\u4ea4\u53c9\u80fd\u91cf\u9879</p> <p>\u975e\u6210\u952e\u80fd\u91cf\uff1a</p> <p>\u9759\u7535\u76f8\u4e92\u4f5c\u7528\uff1a</p> <p>\u70b9\u7535\u8377\u6cd5</p> <p>partial charge\uff1a\u5206\u6570\u7535\u8377\uff0c\u7ed9\u7684\u662f\u4e00\u4e2a\u7ecf\u9a8c\u503c\uff0c\u5728\u4e0d\u540c\u7684\u529b\u573a\u4e2d\u662f\u4e0d\u540c\u7684</p> <p>\u4e5f\u6709\u91cf\u5b50\u5316\u5b66\u8ba1\u7b97\u7684\u65b9\u6cd5</p> <p>\u5076\u6781\u77e9\u6cd5</p> <p>\u8303\u5fb7\u534e\u76f8\u4e92\u4f5c\u7528</p> <p>\u5206\u5b50\u529b\u5b66\u4e2d\u7684\u8303\u5fb7\u534e\u76f8\u4e92\u4f5c\u7528\u662f\u53bb\u9664\u9759\u7535\u529b\u76f8\u4e92\u4f5c\u7528\u540e\u7684\u5269\u4f59\u9879</p> <p>\u6df7\u5408\u89c4\u5219</p> <p>\u6c22\u952e\uff1a</p> <p>\u7528\u51e0\u4f55\u89c4\u5219\u5224\u5b9a</p>"}]}